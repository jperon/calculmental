{"version":3,"sources":["webpack://fengari/webpack/universalModuleDefinition","webpack://fengari/webpack/bootstrap","webpack://fengari/./node_modules/fengari/src/fengari.js","webpack://fengari/./node_modules/fengari/src/defs.js","webpack://fengari/./node_modules/fengari/src/lua.js","webpack://fengari/./node_modules/fengari/src/luaconf.js","webpack://fengari/./node_modules/fengari/src/llimits.js","webpack://fengari/./node_modules/fengari/src/fengaricore.js","webpack://fengari/./node_modules/fengari/src/lobject.js","webpack://fengari/./node_modules/fengari/src/lauxlib.js","webpack://fengari/./node_modules/fengari/src/ldo.js","webpack://fengari/./node_modules/fengari/src/ltable.js","webpack://fengari/./node_modules/fengari/src/lstring.js","webpack://fengari/./node_modules/fengari/src/ldebug.js","webpack://fengari/./node_modules/fengari/src/lstate.js","webpack://fengari/./node_modules/fengari/src/lfunc.js","webpack://fengari/./node_modules/fengari/src/ltm.js","webpack://fengari/./node_modules/fengari/src/lvm.js","webpack://fengari/./node_modules/fengari/src/lopcodes.js","webpack://fengari/./node_modules/fengari/src/lualib.js","webpack://fengari/./node_modules/fengari-interop/src/js.js","webpack://fengari/./node_modules/fengari/src/lapi.js","webpack://fengari/./node_modules/fengari/src/lzio.js","webpack://fengari/./node_modules/fengari/src/llex.js","webpack://fengari/./node_modules/fengari/src/ljstype.js","webpack://fengari/./node_modules/fengari/src/lparser.js","webpack://fengari/./node_modules/fengari/src/lbaselib.js","webpack://fengari/./node_modules/fengari/src/lcorolib.js","webpack://fengari/./node_modules/fengari/src/ltablib.js","webpack://fengari/./node_modules/fengari/src/loslib.js","webpack://fengari/./node_modules/fengari/src/lstrlib.js","webpack://fengari/./node_modules/fengari/src/lutf8lib.js","webpack://fengari/./node_modules/fengari/src/lmathlib.js","webpack://fengari/./node_modules/fengari/src/ldblib.js","webpack://fengari/./node_modules/fengari/src/loadlib.js","webpack://fengari/./node_modules/fengari/src/fengarilib.js","webpack://fengari/./src/fengari-web.js","webpack://fengari/./node_modules/fengari/src/lcode.js","webpack://fengari/./node_modules/fengari/src/lundump.js","webpack://fengari/./node_modules/fengari/src/ldump.js","webpack://fengari/./node_modules/sprintf-js/src/sprintf.js","webpack://fengari/./node_modules/fengari/src/linit.js"],"names":["root","factory","exports","module","define","amd","self","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","core","require","FENGARI_AUTHORS","FENGARI_COPYRIGHT","FENGARI_RELEASE","FENGARI_VERSION","FENGARI_VERSION_MAJOR","FENGARI_VERSION_MINOR","FENGARI_VERSION_NUM","FENGARI_VERSION_RELEASE","luastring_eq","luastring_indexOf","luastring_of","to_jsstring","to_luastring","to_uristring","luaconf","lua","lauxlib","lualib","luastring_from","Uint8Array","from","a","len","length","indexOf","v","array_indexOf","Error","of","arguments","is_luastring","unicode_error_message","uri_allowed","split","reduce","charCodeAt","to_luastring_cache","str","cache","TypeError","cached","outU8Array","Array","outIdx","u","b","to","replacement_char","Math","min","u0","String","fromCharCode","RangeError","u1","u2","s1","s2","u3","toString","from_userstring","LUA_SIGNATURE","LUA_VERSION_MAJOR","LUA_VERSION_MINOR","LUA_VERSION_NUM","LUA_VERSION_RELEASE","LUA_VERSION","LUA_RELEASE","LUA_COPYRIGHT","LUA_AUTHORS","constant_types","LUA_TNONE","LUA_TNIL","LUA_TBOOLEAN","LUA_TLIGHTUSERDATA","LUA_TNUMBER","LUA_TSTRING","LUA_TTABLE","LUA_TFUNCTION","LUA_TUSERDATA","LUA_TTHREAD","LUA_NUMTAGS","LUA_TSHRSTR","LUA_TLNGSTR","LUA_TNUMFLT","LUA_TNUMINT","LUA_TLCL","LUA_TLCF","LUA_TCCL","LUA_REGISTRYINDEX","LUAI_MAXSTACK","LUA_HOOKCALL","LUA_HOOKCOUNT","LUA_HOOKLINE","LUA_HOOKRET","LUA_HOOKTAILCALL","LUA_MASKCALL","LUA_MASKCOUNT","LUA_MASKLINE","LUA_MASKRET","LUA_MINSTACK","LUA_MULTRET","LUA_OPADD","LUA_OPBAND","LUA_OPBNOT","LUA_OPBOR","LUA_OPBXOR","LUA_OPDIV","LUA_OPEQ","LUA_OPIDIV","LUA_OPLE","LUA_OPLT","LUA_OPMOD","LUA_OPMUL","LUA_OPPOW","LUA_OPSHL","LUA_OPSHR","LUA_OPSUB","LUA_OPUNM","LUA_RIDX_GLOBALS","LUA_RIDX_LAST","LUA_RIDX_MAINTHREAD","lua_Debug","this","event","NaN","namewhat","what","source","currentline","linedefined","lastlinedefined","nups","nparams","isvararg","istailcall","short_src","i_ci","lua_upvalueindex","thread_status","LUA_OK","LUA_YIELD","LUA_ERRRUN","LUA_ERRSYNTAX","LUA_ERRMEM","LUA_ERRGCMM","LUA_ERRERR","defs","lapi","ldebug","ldo","lstate","lua_absindex","lua_arith","lua_atpanic","lua_atnativeerror","lua_call","lua_callk","lua_checkstack","lua_close","lua_compare","lua_concat","lua_copy","lua_createtable","lua_dump","lua_error","lua_gc","lua_getallocf","lua_getextraspace","lua_getfield","lua_getglobal","lua_gethook","lua_gethookcount","lua_gethookmask","lua_geti","lua_getinfo","lua_getlocal","lua_getmetatable","lua_getstack","lua_gettable","lua_gettop","lua_getupvalue","lua_getuservalue","lua_insert","lua_isboolean","lua_iscfunction","lua_isfunction","lua_isinteger","lua_islightuserdata","lua_isnil","lua_isnone","lua_isnoneornil","lua_isnumber","lua_isproxy","lua_isstring","lua_istable","lua_isthread","lua_isuserdata","lua_isyieldable","lua_len","lua_load","lua_newstate","lua_newtable","lua_newthread","lua_newuserdata","lua_next","lua_pcall","lua_pcallk","lua_pop","lua_pushboolean","lua_pushcclosure","lua_pushcfunction","lua_pushfstring","lua_pushglobaltable","lua_pushinteger","lua_pushjsclosure","lua_pushjsfunction","lua_pushlightuserdata","lua_pushliteral","lua_pushlstring","lua_pushnil","lua_pushnumber","lua_pushstring","lua_pushthread","lua_pushvalue","lua_pushvfstring","lua_rawequal","lua_rawget","lua_rawgeti","lua_rawgetp","lua_rawlen","lua_rawset","lua_rawseti","lua_rawsetp","lua_register","lua_remove","lua_replace","lua_resume","lua_rotate","lua_setallof","lua_setfield","lua_setglobal","lua_sethook","lua_seti","lua_setlocal","lua_setmetatable","lua_settable","lua_settop","lua_setupvalue","lua_setuservalue","lua_status","lua_stringtonumber","lua_toboolean","lua_todataview","lua_tointeger","lua_tointegerx","lua_tojsstring","lua_tolstring","lua_tonumber","lua_tonumberx","lua_topointer","lua_toproxy","lua_tostring","lua_tothread","lua_touserdata","lua_type","lua_typename","lua_upvalueid","lua_upvaluejoin","lua_version","lua_xmove","lua_yield","lua_yieldk","lua_tocfunction","conf","LUA_PATH_SEP","LUA_PATH_MARK","LUA_EXEC_DIR","LUA_VDIR","LUA_DIRSEP","LUA_LDIR","LUA_JSDIR","LUA_PATH_DEFAULT","LUA_JSPATH_DEFAULT","LUA_COMPAT_FLOATSTRING","LUA_IDSIZE","LUA_INTEGER_FMT","LUAL_BUFFERSIZE","ldexp","mantissa","exponent","steps","ceil","abs","result","pow","floor","LUA_INTEGER_FRMLEN","LUA_MAXINTEGER","LUA_MININTEGER","LUA_NUMBER_FMT","LUA_NUMBER_FRMLEN","frexp","data","DataView","ArrayBuffer","setFloat64","bits","getUint32","lua_getlocaledecpoint","lua_integer2str","lua_number2str","Number","toPrecision","lua_numbertointeger","luai_apicheck","e","lua_assert","api_check","msg","LUAI_MAXCCALLS","LUA_MINBUFFER","luai_nummod","L","MAX_INT","MIN_INT","lisdigit","lisprint","lisspace","lisxdigit","luaS_bless","luaS_new","ltable","lvm","ltm","LUA_TPROTO","LUA_TDEADKEY","TValue","type","ttnov","checktype","checktag","ttisnil","ttisboolean","x","tv","ttisstring","tsvalue","getstr","tsslen","svalue","setsvalue2s","newidx","ts","stack","setsvalue","luaO_nilobject","freeze","LClosure","id","l_G","id_counter","nupvalues","upvals","CClosure","f","upvalue","Udata","size","metatable","uservalue","RETS","PRE","POS","luaO_hexavalue","luaO_utf8esc","buff","UTF8BUFFSZ","mfb","l_str2dloc","neg","sigdig","nosigdig","hasdot","neg1","exp1","lua_strx2number","exec","flt","parseFloat","isNaN","lua_str2number","SIGILS","modes","MAXBY10","MAXLASTD","luaO_tostring","obj","ttisinteger","test","pushstr","luaD_inctop","top","luaO_pushvfstring","fmt","argp","subarray","luaO_pushfstring","setivalue","setfltvalue","lua_State","Table","JSON","stringify","ids","set","luaG_runerror","luaD_checkstack","luaV_concat","intarith","op","v1","v2","luaV_imul","luaV_mod","luaV_div","luaV_shiftl","numarith","LocVar","varname","startpc","endpc","luaO_arith","p1","p2","p3","res","i1","i2","tointeger","n1","n2","tonumber","luaT_trybinTM","TMS","TM_ADD","luaO_chunkid","bufflen","out","nli","out_i","luaO_int2fb","luaO_str2num","s2i","empty","l_str2int","pmode","l_str2d","pushobj2s","pushsvalue2s","setobjs2s","oldidx","setfrom","setobj2s","oldtv","getc","luaL_loadfilex","LUA_ERRFILE","LUA_LOADED_TABLE","LUA_PRELOAD_TABLE","LUA_FILEHANDLE","__name","__tostring","luaL_Buffer","pushglobalfuncname","ar","findfield","objidx","level","pushfuncname","panic","luaL_argerror","arg","extramsg","luaL_error","typeerror","tname","typearg","luaL_getmetafield","luaL_typename","luaL_where","luaL_fileresult","stat","fname","message","errno","luaL_getmetatable","luaL_testudata","ud","tag_error","tag","luaL_checklstring","luaL_checkstring","luaL_optlstring","def","luaL_optstring","luaL_checknumber","luaL_checkinteger","interror","luaL_prepbuffsize","B","sz","newend","newsize","max","newbuff","luaL_buffinit","luaL_addlstring","luaL_addsize","luaL_addstring","luaL_pushresult","luaL_opt","getS","string","luaL_loadbufferx","luaL_loadbuffer","luaL_loadstring","tt","luaL_callmeta","p_I","p_f","find_subarray","arr","subarr","from_index","sl","loop","j","luaL_getsubtable","idx","luaL_setfuncs","nup","lib","luaL_checkstack","space","errfile","fnameindex","error","serr","filename","utf8_bom","skipcomment","lf","skipBOM","skipped","LoadF","pos","err","getF","bytes","path","xhr","XMLHttpRequest","open","window","responseType","send","status","statusText","response","com","readstatus","luaL_loadfile","luaL_checkversion_","ver","LUA_NOREF","LUA_REFNIL","luaL_addchar","luaL_addvalue","luaL_argcheck","cond","luaL_buffinitsize","luaL_checkany","luaL_checkoption","lst","luaL_checktype","luaL_checkudata","luaL_checkversion","luaL_dofile","luaL_dostring","luaL_execresult","signal","luaL_gsub","wild","luaL_len","luaL_newlib","luaL_newlibtable","luaL_newmetatable","luaL_newstate","luaL_optinteger","luaL_optnumber","luaL_prepbuffer","luaL_pushresultsize","luaL_ref","ref","luaL_requiref","modname","openf","glb","luaL_setmetatable","luaL_tolstring","kind","luaL_traceback","L1","last","li","le","lastlevel","LEVELS1","luaL_unref","lua_writestringerror","console","lfunc","lobject","lopcodes","lparser","luaS_newliteral","lundump","MBuffer","adjust_top","newtop","seterrorobj","errcode","oldtop","current_top","ERRORSTACKSIZE","luaD_reallocstack","stack_last","EXTRA_STACK","luaD_growstack","luaD_throw","needed","luaD_shrinkstack","inuse","lim","ci","previous","stackinuse","goodsize","luaE_freeCI","luaD_precall","off","nresults","func","luaE_extendCI","funcOff","callstatus","hookmask","luaD_hook","api_checknelems","luaD_poscall","base","fsize","maxstacksize","is_vararg","adjust_varargs","numparams","l_base","l_code","code","l_savedpc","CIST_LUA","callhook","tryfuncTM","firstResult","nres","wanted","oldpc","next","moveresults","setnilvalue","line","hook","allowhook","ci_top","CIST_HOOKED","opcode","OpCodesI","OP_TAILCALL","CIST_TAIL","actual","nfixargs","fixed","tm","luaT_gettmbyobj","TM_CALL","ttisfunction","luaG_typeerror","luaD_call","nResults","nCcalls","stackerror","luaV_execute","errorJmp","g","mainthread","luaD_rawrunprotected","oldnCcalls","lj","atnativeerror","luaD_callnoyield","errfunc","e2","finishCcall","c_k","nny","CIST_YPCALL","c_old_errfunc","c_ctx","unroll","base_ci","luaV_finishOp","recover","findpcall","extra","luaF_close","CIST_OAH","resume_error","narg","resume","firstArg","ctx","k","luaD_pcall","old_top","ef","old_ci","old_allowhooks","old_nny","old_errfunc","SParser","z","dyd","Dyndata","checkmode","f_parser","cl","zgetc","luaU_undump","luaY_parser","upvalues","luaF_initupvals","luaD_protectedparser","nargs","oldnny","luaS_hashlongstr","TString","lightuserdata_hashes","WeakMap","get_lightuserdata_hash","hash","table_hash","strong","Map","dead_strong","dead_weak","flags","add","clear","prev","entry","mark_dead","setdeadvalue","delete","getgeneric","luaH_getint","invalidateTMcache","luaH_get","ttisfloat","luaH_getn","luaH_getstr","luaH_setfrom","kv","luaH_setint","luaH_new","luaH_next","table","keyI","keyO","ttisdeadkey","realstring","luaS_hash","luaS_eqlngstr","llex","currentpc","lineinfo","swapextra","temp","upvalname","uv","findlocal","findvararg","luaF_getlocalname","funcinfo","getfuncname","funcname","CIST_FIN","funcnamefromcode","kname","pc","ISK","kvalue","INDEXK","getobjname","filterpc","jmptarget","lastpc","reg","setreg","OCi","A","OP_LOADNIL","OP_TFORCALL","OP_CALL","OP_JMP","dest","sBx","testAMode","findsetreg","OP_MOVE","OP_GETTABUP","OP_GETTABLE","C","vn","LUA_ENV","OP_GETUPVAL","OP_LOADK","OP_LOADKX","Bx","Ax","OP_SELF","TM_INDEX","OP_SETTABUP","OP_SETTABLE","TM_NEWINDEX","OP_ADD","OP_SUB","TM_SUB","OP_MUL","TM_MUL","OP_MOD","TM_MOD","OP_POW","TM_POW","OP_DIV","TM_DIV","OP_IDIV","TM_IDIV","OP_BAND","TM_BAND","OP_BOR","TM_BOR","OP_BXOR","TM_BXOR","OP_SHL","TM_SHL","OP_SHR","TM_SHR","OP_UNM","TM_UNM","OP_BNOT","TM_BNOT","OP_LEN","TM_LEN","OP_CONCAT","TM_CONCAT","OP_EQ","TM_EQ","OP_LT","TM_LT","OP_LE","TM_LE","tmname","varinfo","getupvalname","stkid","isinstack","luaT_objtypename","luaG_addinfo","src","luaG_errormsg","luaG_concaterror","cvt2str","luaG_opinterror","luaG_ordererror","t1","t2","luaG_tointerror","luaG_traceexec","mask","counthook","hookcount","basehookcount","CIST_HOOKYIELD","npc","newline","auxgetinfo","ttisclosure","api_incr_top","collectvalidlines","ttisLclosure","local","count","BASIC_STACK_SIZE","CallInfo","global_State","l_registry","version","TM_N","mt","stack_init","freestack","f_luaopen","registry","sethvalue","init_registry","luaT_init","CIST_FRESH","CIST_LEQ","close_state","luaE_freethread","MAXUPVAL","Proto","locvars","luaF_findupval","old","local_number","luaF_newLclosure","luaT_typenames_","map","ttypename","TM_GC","TM_MODE","luaT_callTM","hasres","luaT_callbinTM","luaT_gettm","events","ename","fasttm","et","luaT_callorderTM","l_isfalse","ttistable","ttisfulluserdata","LFIELDS_PER_FLUSH","OP_CLOSURE","OP_EXTRAARG","OP_FORLOOP","OP_FORPREP","OP_LOADBOOL","OP_NEWTABLE","OP_NOT","OP_RETURN","OP_SETLIST","OP_SETUPVAL","OP_TEST","OP_TESTSET","OP_TFORLOOP","OP_VARARG","RA","RB","RKB","RKC","dojump","donextjump","luaV_lessthan","ttisnumber","LTnum","l_strcmp","luaV_lessequal","LEnum","luaV_equalobj","ttype","forlimit","step","stopnow","ilimit","luaV_tointeger","cvt2num","vslen","ls","rs","luaV_objlen","ra","rb","h","imul","aLo","bLo","y","getcached","encup","instack","pushclosure","ncl","setclLvalue","tostring","isemptystr","copy2buff","tl","total","luaV_gettable","slot","settable","val","newframe","konst","setbvalue","upval","rc","op1","op2","numberop1","numberop2","numberop","rbIdx","nci","oci","nfunc","nfuncOff","ofuncOff","aux","limit","chgivalue","chgfltvalue","init","plimit","pstep","forlim","initv","nlimit","nstep","ninit","cb","inst","luaV_rawequalobj","luaP_opmodes","MASK1","MASK0","setarg","fullins","SETARG_Bx","POS_A","SIZE_C","ins","POS_OP","POS_C","MAXARG_Bx","BITRK","CREATE_ABC","CREATE_ABx","bc","CREATE_Ax","GET_OPCODE","GETARG_A","GETARG_B","GETARG_C","GETARG_Bx","GETARG_Ax","GETARG_sBx","MAXARG_A","MAXARG_Ax","MAXARG_B","MAXARG_C","MAXARG_sBx","MAXINDEXRK","NO_REG","OpArgK","OpArgN","OpArgR","OpArgU","OpCodes","POS_Ax","POS_B","POS_Bx","RKASK","SETARG_A","SETARG_Ax","SETARG_B","SETARG_C","SETARG_sBx","SET_OPCODE","SIZE_A","SIZE_Ax","SIZE_B","SIZE_Bx","SIZE_OP","getBMode","getCMode","getOpMode","iABC","iABx","iAsBx","iAx","testTMode","LUA_VERSUFFIX","luaopen_base","LUA_COLIBNAME","luaopen_coroutine","LUA_TABLIBNAME","luaopen_table","LUA_OSLIBNAME","luaopen_os","LUA_STRLIBNAME","luaopen_string","LUA_UTF8LIBNAME","luaopen_utf8","LUA_BITLIBNAME","LUA_MATHLIBNAME","luaopen_math","LUA_DBLIBNAME","luaopen_debug","LUA_LOADLIBNAME","luaopen_package","LUA_FENGARILIBNAME","luaopen_fengari","linit","luaL_openlibs","apply","construct","Reflect_deleteProperty","global_env","WorkerGlobalScope","eval","Reflect","deleteProperty","fApply","Function","target","thisArgument","argumentsList","args","push","concat","isobject","js_tname","testjs","checkjs","pushjs","getmainthread","mainL","states","objects_seen","tojs","wrap","jscall","invoke","thisarg","n_results","gettable","prop","has","iter_next","iter","state","done","js_proxy","iterator","jsiterator","toPrimitive","hint","jslib","getiter","get_iterator","Proxy","L_symbol","p_symbol","proxy_handlers","arg_length","desc","make_arrow_function","createproxy","raw_arrow_function","valid_types","valid_types_as_luastring","fengariProxy","jsmt","first","for","index","keys","isArray","FENGARI_INTEROP_VERSION","FENGARI_INTEROP_VERSION_MAJOR","FENGARI_INTEROP_VERSION_NUM","FENGARI_INTEROP_RELEASE","luaopen_js","luaU_dump","ZIO","fengari_argcheck","fengari_argcheckinteger","isvalid","index2addr","ttislcf","index2addr_","reverse","fromtv","pIdx","fromidx","toidx","fn","setclCvalue","auxsetstr","auxgetstr","narray","nrec","aux_upvalue","fi","seen","f_call","default_chunkname","checkresults","na","nr","getupvalref","fidx","panicf","errorf","index1","index2","o1","o2","writer","strip","warn","objindex","funcindex","up","ttisCclosure","G","ttislightuserdata","reader","chunkname","gt","luaS_newudata","lua_setallocf","u8","buffer","byteOffset","byteLength","jsstring","proxy","ttisthread","fidx1","fidx2","ref1","ref2","up2","luaZ_fill","EOZ","luaZ_buffer","luaZ_buffremove","luaZ_read","b_offset","luaZ_resetbuffer","luaZ_resizebuffer","lislalnum","lislalpha","RESERVED","FIRST_RESERVED","luaX_tokens","SemInfo","Token","token","seminfo","save","lexerror","luaX_token2str","currIsNewline","current","save_and_next","TVtrue","luaX_newstring","tpair","inclinenumber","linenumber","check_next1","check_next2","read_numeral","expo","txtToken","skip_sep","read_long_string","sep","skip","esccheck","gethexa","readhexaesc","utf8esc","readutf8desc","readdecesc","read_string","del","will","token_to_index","forEach","kidx","LexState","lastline","lookahead","fs","envn","isreserved","w","luaX_lookahead","luaX_next","luaX_setinput","firstchar","luaX_syntaxerror","luai_ctype_","BinOpr","OPR_ADD","OPR_AND","OPR_BAND","OPR_BOR","OPR_BXOR","OPR_CONCAT","OPR_DIV","OPR_EQ","OPR_GE","OPR_GT","OPR_IDIV","OPR_LE","OPR_LT","OPR_MOD","OPR_MUL","OPR_NE","OPR_NOBINOPR","OPR_OR","OPR_POW","OPR_SHL","OPR_SHR","OPR_SUB","UnOpr","OPR_BNOT","OPR_LEN","OPR_MINUS","OPR_NOT","OPR_NOUNOPR","NO_JUMP","getinstruction","luaK_checkstack","luaK_codeABC","luaK_codeABx","luaK_codeAsBx","luaK_codek","luaK_concat","luaK_dischargevars","luaK_exp2RK","luaK_exp2anyreg","luaK_exp2anyregup","luaK_exp2nextreg","luaK_exp2val","luaK_fixline","luaK_getlabel","luaK_goiffalse","luaK_goiftrue","luaK_indexed","luaK_infix","luaK_intK","luaK_jump","luaK_jumpto","luaK_nil","luaK_patchclose","luaK_patchlist","luaK_patchtohere","luaK_posfix","luaK_prefix","luaK_reserveregs","luaK_ret","luaK_self","luaK_setlist","luaK_setmultret","luaK_setoneret","luaK_setreturns","luaK_storevar","luaK_stringK","R","hasmultret","expkind","VCALL","VVARARG","eqstr","BlockCnt","firstlabel","firstgoto","nactvar","isloop","VVOID","VNIL","VTRUE","VFALSE","VK","VKFLT","VKINT","VNONRELOC","VLOCAL","VUPVAL","VINDEXED","VJMP","VRELOCABLE","expdesc","ival","nval","info","ind","vt","FuncState","bl","lasttarget","jpc","nk","np","firstlocal","nlocvars","freereg","Vardesc","Labeldesc","Labellist","semerror","error_expected","checklimit","where","errorlimit","testnext","check","checknext","check_condition","check_match","who","str_checkname","TK_NAME","init_exp","codestring","checkname","new_localvar","registerlocalvar","actvar","new_localvarliteral","getlocvar","adjustlocalvars","nvars","newupvalue","singlevaraux","vr","searchvar","markupval","searchupvalue","singlevar","adjust_assign","nexps","enterlevel","leavelevel","closegoto","label","gl","vname","findlabel","lb","newlabelentry","findgotos","enterblock","open_func","leaveblock","breaklabel","tolevel","removevars","movegotosout","undefgoto","close_func","block_follow","withuntil","TK_ELSE","TK_ELSEIF","TK_END","TK_EOS","TK_UNTIL","statlist","TK_RETURN","statement","fieldsel","yindex","expr","ConsControl","nh","tostore","recfield","cc","rkkey","closelistfield","listfield","field","constructor","lastlistfield","body","ismethod","new_fs","clp","addprototype","TK_DOTS","parlist","TK_FUNCTION","codeclosure","explist","funcargs","TK_STRING","suffixedexp","primaryexp","priority","left","right","subexpr","uop","TK_NOT","getunopr","TK_FLT","TK_INT","TK_NIL","TK_TRUE","TK_FALSE","simpleexp","TK_IDIV","TK_SHL","TK_SHR","TK_CONCAT","TK_NE","TK_EQ","TK_LE","TK_GE","TK_AND","TK_OR","getbinopr","nextop","block","LHS_assign","assignment","lh","nv","conflict","check_conflict","gotostat","TK_GOTO","labelstat","ll","checkrepeated","TK_DBCOLON","skipnoopstat","forbody","isnum","endfor","TK_DO","prep","forstat","fornum","TK_IN","indexname","forlist","TK_FOR","test_then_block","escapelist","jf","TK_THEN","TK_BREAK","funcstat","TK_IF","ifstat","TK_WHILE","whileinit","condexit","whilestat","TK_REPEAT","repeat_init","bl1","bl2","repeatstat","TK_LOCAL","localfunc","localstat","nret","retstat","exprstat","lexstate","funcstate","vkisinreg","lua_writestring","lua_writeline","TextDecoder","decoder","decode","stream","log","copy","opts","luaB_next","ipairsaux","luaB_error","finishpcall","load_aux","envidx","generic_reader","dofilecont","d1","d2","base_funcs","env","method","iszero","pairsmeta","parseInt","b_str2int","getco","co","auxresume","luaB_auxwrap","luaB_cocreate","NL","co_funcs","checkfield","checktab","aux_getn","addfield","set2","sort_comp","partition","lo","choosePivot","rnd","r4","tab_funcs","lsep","TAB_R","auxsort","random","MAX_SAFE_INTEGER","LUA_STRFTIMEOPTIONS","setfield","setallfields","time","utc","getUTCSeconds","getSeconds","getUTCMinutes","getMinutes","getUTCHours","getHours","getUTCDate","getDate","getUTCMonth","getMonth","getUTCFullYear","getFullYear","getUTCDay","getDay","Date","L_MAXDATEFIELD","getfield","delta","locale","days","shortDays","months","shortMonths","AM","PM","am","pm","formats","D","F","T","X","week_number","date","start_of_week","weekday","yday","push_pad_2","pad","checkoption","conv","option","oplen","l_checktime","syslib","stm","strftime","tzString","match","day","getTimezoneOffset","clock","performance","now","sprintf","L_ESC","strlen","posrelat","SIZELENMOD","lua_number2strx","is","Infinity","zero","fe","num2straux","FLAGS","isalpha","isdigit","iscntrl","isgraph","islower","isupper","isalnum","ispunct","isspace","isxdigit","addliteral","repeat","addquoted","point","ppoint","checkdp","scanformat","strfrmt","form","addlenmod","lenmod","lm","spec","Header","islittle","maxalign","digit","getnum","df","getnumlimit","getoption","opt","getdetails","totalsize","ntoalign","align","packint","unpackint","issigned","unpacknum","dv","setUint8","getFloat32","getFloat64","SPECIALS","MatchState","src_init","src_end","p_end","matchdepth","capture","classend","ms","match_class","matchbracketclass","ec","sig","singlematch","ep","matchbalance","cont","max_expand","min_expand","start_capture","end_capture","capture_to_close","match_capture","check_capture","ai","bi","array_cmp","gotodefault","gotoinit","push_onecapture","push_captures","nlevels","prepstate","lp","reprepstate","str_find_aux","find","nospecials","anchor","GMatchState","lastmatch","gmatch_aux","gm","add_value","tr","news","add_s","strlib","posi","pose","srcl","max_s","details","setFloat32","totallen","pi","start","end","ld","createmetatable","iscont","u_posrelat","limits","utf8_decode","p_U","pushutfchar","iter_aux","dec","funcs","posj","UTF8PATT","rand_state","l_rand","pushnumint","mathlib","acos","asin","atan2","cos","PI","exp","log2","log10","imax","imin","ip","low","sin","sqrt","tan","getinput","checkstack","getthread","thread","settabss","settabsi","settabsb","treatstackoption","auxupvalue","checkupval","argf","argnup","HOOKKEY","hooknames","hookf","dblib","smask","unmakemask","options","nvar","hooktable","makemask","input","prompt","debug","lsys_load","fengari","JSLIBS","LUA_CSUBSEP","LUA_LSUBSEP","LUA_POF","LUA_OFSEP","AUXMARK","seeglb","readable","lookforfunc","sym","checkjslib","addtojslib","lsys_sym","setpath","fieldname","envname","dft","nver","undefined","noenv","plib","pushnexttemplate","searchpath","dirsep","findfile","pname","checkload","searcher_Lua","loadfunc","openfunc","mark","searcher_C","searcher_Croot","searcher_preload","findloader_cont","ll_require_cont","ll_require_cont2","pk_funcs","ll_funcs","findloader","createjslibstable","searchers","createsearcherstable","interop","load","ok","SyntaxError","document","HTMLDocument","crossorigin_to_credentials","crossorigin","msghandler","ErrorEvent","bubbles","cancelable","lineno","run_lua_script","location","syntaxerror","configurable","currentScript","dispatchEvent","process_xhr_response","Event","contentTypeRegexp","luaVersionRegex","try_tag","tagName","contentTypeMatch","mimetype","hasAttribute","getAttribute","readyState","async","fetch","credentials","redirect","integrity","then","resp","arrayBuffer","catch","reason","onreadystatechange","innerHTML","run_lua_script_tag","MutationObserver","records","observer","record","addedNodes","observe","childList","subtree","querySelectorAll","hasjumps","tonumeral","make_tvalue","ek","pfrom","pl","getjump","offset","fixjump","jmp","l1","l2","list","condjump","getjumpcontroloffset","getjumpcontrol","patchtestreg","node","removevalues","patchlistaux","vtarget","dtarget","luaK_code","dischargejpc","codeextraarg","newstack","freeexp","freeexps","e1","r1","r2","addk","luaK_numberK","boolK","code_loadbool","jump","discharge2reg","discharge2anyreg","need_value","exp2reg","final","p_t","fj","vk","nilK","negatecondition","jumponcond","ie","constfolding","validop","codebinexpval","rk2","rk1","opr","codecomp","codeunexpval","codenot","ereg","nelems","ex","LUAC_DATA","BytecodeParser","Z","intSize","size_tSize","instructionSize","integerSize","numberSize","arraybuffer","getInt32","LoadInteger","LoadByte","LoadSize_t","read","LoadInt","LoadNumber","LoadString","LoadFunction","psource","LoadCode","LoadConstants","LoadUpvalues","LoadProtos","LoadDebug","checkliteral","checksize","why","byte","S","checkHeader","LUAC_VERSION","DumpState","write","DumpBlock","DumpByte","DumpInt","ab","setInt32","DumpInteger","DumpNumber","DumpString","DumpProtos","DumpFunction","DumpCode","DumpConstants","DumpUpvalues","DumpDebug","DumpHeader","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sign","sprintf_format","sprintf_parse","vsprintf","argv","parse_tree","ph","pad_character","pad_length","is_positive","cursor","tree_length","output","param_no","width","precision","toExponential","toFixed","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","sprintf_cache","_fmt","arg_names","field_list","replacement_field","field_match","loadedlibs"],"mappings":"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","file":"fengari-web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fengari\"] = factory();\n\telse\n\t\troot[\"fengari\"] = factory();\n})(self, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/**\n@license MIT\n\nCopyright © 2017-2018 Benoit Giannangeli\nCopyright © 2017-2018 Daurnimator\nCopyright © 1994–2017 Lua.org, PUC-Rio.\n*/\n\n\"use strict\";\n\nconst core = require(\"./fengaricore.js\");\n\nmodule.exports.FENGARI_AUTHORS         = core.FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = core.FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = core.FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = core.FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = core.FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = core.FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = core.FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = core.FENGARI_VERSION_RELEASE;\n\nmodule.exports.luastring_eq      = core.luastring_eq;\nmodule.exports.luastring_indexOf = core.luastring_indexOf;\nmodule.exports.luastring_of      = core.luastring_of;\nmodule.exports.to_jsstring       = core.to_jsstring;\nmodule.exports.to_luastring      = core.to_luastring;\nmodule.exports.to_uristring      = core.to_uristring;\n\nconst luaconf = require('./luaconf.js');\nconst lua     = require('./lua.js');\nconst lauxlib = require('./lauxlib.js');\nconst lualib  = require('./lualib.js');\n\nmodule.exports.luaconf = luaconf;\nmodule.exports.lua     = lua;\nmodule.exports.lauxlib = lauxlib;\nmodule.exports.lualib  = lualib;\n","\"use strict\";\n\n/*\n * Fengari specific string conversion functions\n */\n\nlet luastring_from;\nif (typeof Uint8Array.from === \"function\") {\n    luastring_from = Uint8Array.from.bind(Uint8Array);\n} else {\n    luastring_from = function(a) {\n        let i = 0;\n        let len = a.length;\n        let r = new Uint8Array(len);\n        while (len > i) r[i] = a[i++];\n        return r;\n    };\n}\n\nlet luastring_indexOf;\nif (typeof (new Uint8Array().indexOf) === \"function\") {\n    luastring_indexOf = function(s, v, i) {\n        return s.indexOf(v, i);\n    };\n} else {\n    /* Browsers that don't support Uint8Array.indexOf seem to allow using Array.indexOf on Uint8Array objects e.g. IE11 */\n    let array_indexOf = [].indexOf;\n    if (array_indexOf.call(new Uint8Array(1), 0) !== 0) throw Error(\"missing .indexOf\");\n    luastring_indexOf = function(s, v, i) {\n        return array_indexOf.call(s, v, i);\n    };\n}\n\nlet luastring_of;\nif (typeof Uint8Array.of === \"function\") {\n    luastring_of = Uint8Array.of.bind(Uint8Array);\n} else {\n    luastring_of = function() {\n        return luastring_from(arguments);\n    };\n}\n\nconst is_luastring = function(s) {\n    return s instanceof Uint8Array;\n};\n\n/* test two lua strings for equality */\nconst luastring_eq = function(a, b) {\n    if (a !== b) {\n        let len = a.length;\n        if (len !== b.length) return false;\n        /* XXX: Should this be a constant time algorithm? */\n        for (let i=0; i<len; i++)\n            if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst unicode_error_message = \"cannot convert invalid utf8 to javascript string\";\nconst to_jsstring = function(value, from, to, replacement_char) {\n    if (!is_luastring(value)) throw new TypeError(\"to_jsstring expects a Uint8Array\");\n\n    if (to === void 0) {\n        to = value.length;\n    } else {\n        to = Math.min(value.length, to);\n    }\n\n    let str = \"\";\n    for (let i = (from!==void 0?from:0); i < to;) {\n        let u0 = value[i++];\n        if (u0 < 0x80) {\n            /* single byte sequence */\n            str += String.fromCharCode(u0);\n        } else if (u0 < 0xC2 || u0 > 0xF4) {\n            if (!replacement_char) throw RangeError(unicode_error_message);\n            str += \"�\";\n        } else if (u0 <= 0xDF) {\n            /* two byte sequence */\n            if (i >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            str += String.fromCharCode(((u0 & 0x1F) << 6) + (u1 & 0x3F));\n        } else if (u0 <= 0xEF) {\n            /* three byte sequence */\n            if (i+1 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u = ((u0 & 0x0F) << 12) + ((u1 & 0x3F) << 6) + (u2 & 0x3F);\n            if (u <= 0xFFFF) { /* BMP codepoint */\n                str += String.fromCharCode(u);\n            } else { /* Astral codepoint */\n                u -= 0x10000;\n                let s1 = (u >> 10) + 0xD800;\n                let s2 = (u % 0x400) + 0xDC00;\n                str += String.fromCharCode(s1, s2);\n            }\n        } else {\n            /* four byte sequence */\n            if (i+2 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u3 = value[i++];\n            if ((u3&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            /* Has to be astral codepoint */\n            let u = ((u0 & 0x07) << 18) + ((u1 & 0x3F) << 12) + ((u2 & 0x3F) << 6) + (u3 & 0x3F);\n            u -= 0x10000;\n            let s1 = (u >> 10) + 0xD800;\n            let s2 = (u % 0x400) + 0xDC00;\n            str += String.fromCharCode(s1, s2);\n        }\n    }\n    return str;\n};\n\n/* bytes allowed unescaped in a uri */\nconst uri_allowed = (\";,/?:@&=+$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,-_.!~*'()#\").split('').reduce(function(uri_allowed, c) {\n    uri_allowed[c.charCodeAt(0)] = true;\n    return uri_allowed;\n}, {});\n\n/* utility function to convert a lua string to a js string with uri escaping */\nconst to_uristring = function(a) {\n    if (!is_luastring(a)) throw new TypeError(\"to_uristring expects a Uint8Array\");\n    let s = \"\";\n    for (let i=0; i<a.length; i++) {\n        let v = a[i];\n        if (uri_allowed[v]) {\n            s += String.fromCharCode(v);\n        } else {\n            s += \"%\" + (v<0x10?\"0\":\"\") + v.toString(16);\n        }\n    }\n    return s;\n};\n\nconst to_luastring_cache = {};\n\nconst to_luastring = function(str, cache) {\n    if (typeof str !== \"string\") throw new TypeError(\"to_luastring expects a javascript string\");\n\n    if (cache) {\n        let cached = to_luastring_cache[str];\n        if (is_luastring(cached)) return cached;\n    }\n\n    let len = str.length;\n    let outU8Array = Array(len); /* array is at *least* going to be length of string */\n    let outIdx = 0;\n    for (let i = 0; i < len; ++i) {\n        let u = str.charCodeAt(i);\n        if (u <= 0x7F) {\n            outU8Array[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n            outU8Array[outIdx++] = 0xC0 | (u >> 6);\n            outU8Array[outIdx++] = 0x80 | (u & 63);\n        } else {\n            /* This part is to work around possible lack of String.codePointAt */\n            if (u >= 0xD800 && u <= 0xDBFF && (i+1) < len) {\n                /* is first half of surrogate pair */\n                let v = str.charCodeAt(i+1);\n                if (v >= 0xDC00 && v <= 0xDFFF) {\n                    /* is valid low surrogate */\n                    i++;\n                    u = (u - 0xD800) * 0x400 + v + 0x2400;\n                }\n            }\n            if (u <= 0xFFFF) {\n                outU8Array[outIdx++] = 0xE0 | (u >> 12);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            } else {\n                outU8Array[outIdx++] = 0xF0 | (u >> 18);\n                outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            }\n        }\n    }\n    outU8Array = luastring_from(outU8Array);\n\n    if (cache) to_luastring_cache[str] = outU8Array;\n\n    return outU8Array;\n};\n\nconst from_userstring = function(str) {\n    if (!is_luastring(str)) {\n        if (typeof str === \"string\") {\n            str = to_luastring(str);\n        } else {\n            throw new TypeError(\"expects an array of bytes or javascript string\");\n        }\n    }\n    return str;\n};\n\nmodule.exports.luastring_from    = luastring_from;\nmodule.exports.luastring_indexOf = luastring_indexOf;\nmodule.exports.luastring_of      = luastring_of;\nmodule.exports.is_luastring      = is_luastring;\nmodule.exports.luastring_eq      = luastring_eq;\nmodule.exports.to_jsstring       = to_jsstring;\nmodule.exports.to_uristring      = to_uristring;\nmodule.exports.to_luastring      = to_luastring;\nmodule.exports.from_userstring   = from_userstring;\n\n\n/* mark for precompiled code ('<esc>Lua') */\nconst LUA_SIGNATURE = to_luastring(\"\\x1bLua\");\n\nconst LUA_VERSION_MAJOR   = \"5\";\nconst LUA_VERSION_MINOR   = \"3\";\nconst LUA_VERSION_NUM     = 503;\nconst LUA_VERSION_RELEASE = \"4\";\n\nconst LUA_VERSION         = \"Lua \" + LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nconst LUA_RELEASE         = LUA_VERSION + \".\" + LUA_VERSION_RELEASE;\nconst LUA_COPYRIGHT       = LUA_RELEASE + \"  Copyright (C) 1994-2017 Lua.org, PUC-Rio\";\nconst LUA_AUTHORS         = \"R. Ierusalimschy, L. H. de Figueiredo, W. Celes\";\n\nmodule.exports.LUA_SIGNATURE       = LUA_SIGNATURE;\nmodule.exports.LUA_VERSION_MAJOR   = LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR   = LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM     = LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE = LUA_VERSION_RELEASE;\nmodule.exports.LUA_VERSION         = LUA_VERSION;\nmodule.exports.LUA_RELEASE         = LUA_RELEASE;\nmodule.exports.LUA_COPYRIGHT       = LUA_COPYRIGHT;\nmodule.exports.LUA_AUTHORS         = LUA_AUTHORS;\n\n\nconst thread_status = {\n    LUA_OK:        0,\n    LUA_YIELD:     1,\n    LUA_ERRRUN:    2,\n    LUA_ERRSYNTAX: 3,\n    LUA_ERRMEM:    4,\n    LUA_ERRGCMM:   5,\n    LUA_ERRERR:    6\n};\n\nconst constant_types = {\n    LUA_TNONE:          -1,\n    LUA_TNIL:           0,\n    LUA_TBOOLEAN:       1,\n    LUA_TLIGHTUSERDATA: 2,\n    LUA_TNUMBER:        3,\n    LUA_TSTRING:        4,\n    LUA_TTABLE:         5,\n    LUA_TFUNCTION:      6,\n    LUA_TUSERDATA:      7,\n    LUA_TTHREAD:        8,\n    LUA_NUMTAGS:        9\n};\n\nconstant_types.LUA_TSHRSTR = constant_types.LUA_TSTRING | (0 << 4);  /* short strings */\nconstant_types.LUA_TLNGSTR = constant_types.LUA_TSTRING | (1 << 4);  /* long strings */\n\nconstant_types.LUA_TNUMFLT = constant_types.LUA_TNUMBER | (0 << 4);  /* float numbers */\nconstant_types.LUA_TNUMINT = constant_types.LUA_TNUMBER | (1 << 4);  /* integer numbers */\n\nconstant_types.LUA_TLCL = constant_types.LUA_TFUNCTION | (0 << 4);  /* Lua closure */\nconstant_types.LUA_TLCF = constant_types.LUA_TFUNCTION | (1 << 4);  /* light C function */\nconstant_types.LUA_TCCL = constant_types.LUA_TFUNCTION | (2 << 4);  /* C closure */\n\n/*\n** Comparison and arithmetic functions\n*/\n\nconst LUA_OPADD  = 0;   /* ORDER TM, ORDER OP */\nconst LUA_OPSUB  = 1;\nconst LUA_OPMUL  = 2;\nconst LUA_OPMOD  = 3;\nconst LUA_OPPOW  = 4;\nconst LUA_OPDIV  = 5;\nconst LUA_OPIDIV = 6;\nconst LUA_OPBAND = 7;\nconst LUA_OPBOR  = 8;\nconst LUA_OPBXOR = 9;\nconst LUA_OPSHL  = 10;\nconst LUA_OPSHR  = 11;\nconst LUA_OPUNM  = 12;\nconst LUA_OPBNOT = 13;\n\nconst LUA_OPEQ = 0;\nconst LUA_OPLT = 1;\nconst LUA_OPLE = 2;\n\nconst LUA_MINSTACK = 20;\n\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;\n\nconst lua_upvalueindex = function(i) {\n    return LUA_REGISTRYINDEX - i;\n};\n\n/* predefined values in the registry */\nconst LUA_RIDX_MAINTHREAD = 1;\nconst LUA_RIDX_GLOBALS    = 2;\nconst LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;\n\nclass lua_Debug {\n    constructor() {\n        this.event = NaN;\n        this.name = null;           /* (n) */\n        this.namewhat = null;       /* (n) 'global', 'local', 'field', 'method' */\n        this.what = null;           /* (S) 'Lua', 'C', 'main', 'tail' */\n        this.source = null;         /* (S) */\n        this.currentline = NaN;     /* (l) */\n        this.linedefined = NaN;     /* (S) */\n        this.lastlinedefined = NaN; /* (S) */\n        this.nups = NaN;            /* (u) number of upvalues */\n        this.nparams = NaN;         /* (u) number of parameters */\n        this.isvararg = NaN;        /* (u) */\n        this.istailcall = NaN;      /* (t) */\n        this.short_src = null;      /* (S) */\n        /* private part */\n        this.i_ci = null;           /* active function */\n    }\n}\n\n/*\n** Event codes\n*/\nconst LUA_HOOKCALL     = 0;\nconst LUA_HOOKRET      = 1;\nconst LUA_HOOKLINE     = 2;\nconst LUA_HOOKCOUNT    = 3;\nconst LUA_HOOKTAILCALL = 4;\n\n\n/*\n** Event masks\n*/\nconst LUA_MASKCALL  = (1 << LUA_HOOKCALL);\nconst LUA_MASKRET   = (1 << LUA_HOOKRET);\nconst LUA_MASKLINE  = (1 << LUA_HOOKLINE);\nconst LUA_MASKCOUNT = (1 << LUA_HOOKCOUNT);\n\nmodule.exports.LUA_HOOKCALL            = LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = -1;\nmodule.exports.LUA_OPADD               = LUA_OPADD;\nmodule.exports.LUA_OPBAND              = LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = LUA_OPLE;\nmodule.exports.LUA_OPLT                = LUA_OPLT;\nmodule.exports.LUA_OPMOD               = LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = LUA_REGISTRYINDEX;\nmodule.exports.LUA_RIDX_GLOBALS        = LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = LUA_RIDX_MAINTHREAD;\nmodule.exports.constant_types          = constant_types;\nmodule.exports.lua_Debug               = lua_Debug;\nmodule.exports.lua_upvalueindex        = lua_upvalueindex;\nmodule.exports.thread_status           = thread_status;\n","\"use strict\";\n\nconst defs   = require(\"./defs.js\");\nconst lapi   = require(\"./lapi.js\");\nconst ldebug = require(\"./ldebug.js\");\nconst ldo    = require(\"./ldo.js\");\nconst lstate = require(\"./lstate.js\");\n\nmodule.exports.LUA_AUTHORS             = defs.LUA_AUTHORS;\nmodule.exports.LUA_COPYRIGHT           = defs.LUA_COPYRIGHT;\nmodule.exports.LUA_ERRERR              = defs.thread_status.LUA_ERRERR;\nmodule.exports.LUA_ERRGCMM             = defs.thread_status.LUA_ERRGCMM;\nmodule.exports.LUA_ERRMEM              = defs.thread_status.LUA_ERRMEM;\nmodule.exports.LUA_ERRRUN              = defs.thread_status.LUA_ERRRUN;\nmodule.exports.LUA_ERRSYNTAX           = defs.thread_status.LUA_ERRSYNTAX;\nmodule.exports.LUA_HOOKCALL            = defs.LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = defs.LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = defs.LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = defs.LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = defs.LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = defs.LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = defs.LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = defs.LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = defs.LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = defs.LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = defs.LUA_MULTRET;\nmodule.exports.LUA_NUMTAGS             = defs.constant_types.LUA_NUMTAGS;\nmodule.exports.LUA_OK                  = defs.thread_status.LUA_OK;\nmodule.exports.LUA_OPADD               = defs.LUA_OPADD;\nmodule.exports.LUA_OPBAND              = defs.LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = defs.LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = defs.LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = defs.LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = defs.LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = defs.LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = defs.LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = defs.LUA_OPLE;\nmodule.exports.LUA_OPLT                = defs.LUA_OPLT;\nmodule.exports.LUA_OPMOD               = defs.LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = defs.LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = defs.LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = defs.LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = defs.LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = defs.LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = defs.LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = defs.LUA_REGISTRYINDEX;\nmodule.exports.LUA_RELEASE             = defs.LUA_RELEASE;\nmodule.exports.LUA_RIDX_GLOBALS        = defs.LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = defs.LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = defs.LUA_RIDX_MAINTHREAD;\nmodule.exports.LUA_SIGNATURE           = defs.LUA_SIGNATURE;\nmodule.exports.LUA_TNONE               = defs.constant_types.LUA_TNONE;\nmodule.exports.LUA_TNIL                = defs.constant_types.LUA_TNIL;\nmodule.exports.LUA_TBOOLEAN            = defs.constant_types.LUA_TBOOLEAN;\nmodule.exports.LUA_TLIGHTUSERDATA      = defs.constant_types.LUA_TLIGHTUSERDATA;\nmodule.exports.LUA_TNUMBER             = defs.constant_types.LUA_TNUMBER;\nmodule.exports.LUA_TSTRING             = defs.constant_types.LUA_TSTRING;\nmodule.exports.LUA_TTABLE              = defs.constant_types.LUA_TTABLE;\nmodule.exports.LUA_TFUNCTION           = defs.constant_types.LUA_TFUNCTION;\nmodule.exports.LUA_TUSERDATA           = defs.constant_types.LUA_TUSERDATA;\nmodule.exports.LUA_TTHREAD             = defs.constant_types.LUA_TTHREAD;\nmodule.exports.LUA_VERSION             = defs.LUA_VERSION;\nmodule.exports.LUA_VERSION_MAJOR       = defs.LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR       = defs.LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM         = defs.LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE     = defs.LUA_VERSION_RELEASE;\nmodule.exports.LUA_YIELD               = defs.thread_status.LUA_YIELD;\nmodule.exports.lua_Debug               = defs.lua_Debug;\nmodule.exports.lua_upvalueindex        = defs.lua_upvalueindex;\nmodule.exports.lua_absindex            = lapi.lua_absindex;\nmodule.exports.lua_arith               = lapi.lua_arith;\nmodule.exports.lua_atpanic             = lapi.lua_atpanic;\nmodule.exports.lua_atnativeerror       = lapi.lua_atnativeerror;\nmodule.exports.lua_call                = lapi.lua_call;\nmodule.exports.lua_callk               = lapi.lua_callk;\nmodule.exports.lua_checkstack          = lapi.lua_checkstack;\nmodule.exports.lua_close               = lstate.lua_close;\nmodule.exports.lua_compare             = lapi.lua_compare;\nmodule.exports.lua_concat              = lapi.lua_concat;\nmodule.exports.lua_copy                = lapi.lua_copy;\nmodule.exports.lua_createtable         = lapi.lua_createtable;\nmodule.exports.lua_dump                = lapi.lua_dump;\nmodule.exports.lua_error               = lapi.lua_error;\nmodule.exports.lua_gc                  = lapi.lua_gc;\nmodule.exports.lua_getallocf           = lapi.lua_getallocf;\nmodule.exports.lua_getextraspace       = lapi.lua_getextraspace;\nmodule.exports.lua_getfield            = lapi.lua_getfield;\nmodule.exports.lua_getglobal           = lapi.lua_getglobal;\nmodule.exports.lua_gethook             = ldebug.lua_gethook;\nmodule.exports.lua_gethookcount        = ldebug.lua_gethookcount;\nmodule.exports.lua_gethookmask         = ldebug.lua_gethookmask;\nmodule.exports.lua_geti                = lapi.lua_geti;\nmodule.exports.lua_getinfo             = ldebug.lua_getinfo;\nmodule.exports.lua_getlocal            = ldebug.lua_getlocal;\nmodule.exports.lua_getmetatable        = lapi.lua_getmetatable;\nmodule.exports.lua_getstack            = ldebug.lua_getstack;\nmodule.exports.lua_gettable            = lapi.lua_gettable;\nmodule.exports.lua_gettop              = lapi.lua_gettop;\nmodule.exports.lua_getupvalue          = lapi.lua_getupvalue;\nmodule.exports.lua_getuservalue        = lapi.lua_getuservalue;\nmodule.exports.lua_insert              = lapi.lua_insert;\nmodule.exports.lua_isboolean           = lapi.lua_isboolean;\nmodule.exports.lua_iscfunction         = lapi.lua_iscfunction;\nmodule.exports.lua_isfunction          = lapi.lua_isfunction;\nmodule.exports.lua_isinteger           = lapi.lua_isinteger;\nmodule.exports.lua_islightuserdata     = lapi.lua_islightuserdata;\nmodule.exports.lua_isnil               = lapi.lua_isnil;\nmodule.exports.lua_isnone              = lapi.lua_isnone;\nmodule.exports.lua_isnoneornil         = lapi.lua_isnoneornil;\nmodule.exports.lua_isnumber            = lapi.lua_isnumber;\nmodule.exports.lua_isproxy             = lapi.lua_isproxy;\nmodule.exports.lua_isstring            = lapi.lua_isstring;\nmodule.exports.lua_istable             = lapi.lua_istable;\nmodule.exports.lua_isthread            = lapi.lua_isthread;\nmodule.exports.lua_isuserdata          = lapi.lua_isuserdata;\nmodule.exports.lua_isyieldable         = ldo.lua_isyieldable;\nmodule.exports.lua_len                 = lapi.lua_len;\nmodule.exports.lua_load                = lapi.lua_load;\nmodule.exports.lua_newstate            = lstate.lua_newstate;\nmodule.exports.lua_newtable            = lapi.lua_newtable;\nmodule.exports.lua_newthread           = lstate.lua_newthread;\nmodule.exports.lua_newuserdata         = lapi.lua_newuserdata;\nmodule.exports.lua_next                = lapi.lua_next;\nmodule.exports.lua_pcall               = lapi.lua_pcall;\nmodule.exports.lua_pcallk              = lapi.lua_pcallk;\nmodule.exports.lua_pop                 = lapi.lua_pop;\nmodule.exports.lua_pushboolean         = lapi.lua_pushboolean;\nmodule.exports.lua_pushcclosure        = lapi.lua_pushcclosure;\nmodule.exports.lua_pushcfunction       = lapi.lua_pushcfunction;\nmodule.exports.lua_pushfstring         = lapi.lua_pushfstring;\nmodule.exports.lua_pushglobaltable     = lapi.lua_pushglobaltable;\nmodule.exports.lua_pushinteger         = lapi.lua_pushinteger;\nmodule.exports.lua_pushjsclosure       = lapi.lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction      = lapi.lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata   = lapi.lua_pushlightuserdata;\nmodule.exports.lua_pushliteral         = lapi.lua_pushliteral;\nmodule.exports.lua_pushlstring         = lapi.lua_pushlstring;\nmodule.exports.lua_pushnil             = lapi.lua_pushnil;\nmodule.exports.lua_pushnumber          = lapi.lua_pushnumber;\nmodule.exports.lua_pushstring          = lapi.lua_pushstring;\nmodule.exports.lua_pushthread          = lapi.lua_pushthread;\nmodule.exports.lua_pushvalue           = lapi.lua_pushvalue;\nmodule.exports.lua_pushvfstring        = lapi.lua_pushvfstring;\nmodule.exports.lua_rawequal            = lapi.lua_rawequal;\nmodule.exports.lua_rawget              = lapi.lua_rawget;\nmodule.exports.lua_rawgeti             = lapi.lua_rawgeti;\nmodule.exports.lua_rawgetp             = lapi.lua_rawgetp;\nmodule.exports.lua_rawlen              = lapi.lua_rawlen;\nmodule.exports.lua_rawset              = lapi.lua_rawset;\nmodule.exports.lua_rawseti             = lapi.lua_rawseti;\nmodule.exports.lua_rawsetp             = lapi.lua_rawsetp;\nmodule.exports.lua_register            = lapi.lua_register;\nmodule.exports.lua_remove              = lapi.lua_remove;\nmodule.exports.lua_replace             = lapi.lua_replace;\nmodule.exports.lua_resume              = ldo.lua_resume;\nmodule.exports.lua_rotate              = lapi.lua_rotate;\nmodule.exports.lua_setallof            = ldo.lua_setallof;\nmodule.exports.lua_setfield            = lapi.lua_setfield;\nmodule.exports.lua_setglobal           = lapi.lua_setglobal;\nmodule.exports.lua_sethook             = ldebug.lua_sethook;\nmodule.exports.lua_seti                = lapi.lua_seti;\nmodule.exports.lua_setlocal            = ldebug.lua_setlocal;\nmodule.exports.lua_setmetatable        = lapi.lua_setmetatable;\nmodule.exports.lua_settable            = lapi.lua_settable;\nmodule.exports.lua_settop              = lapi.lua_settop;\nmodule.exports.lua_setupvalue          = lapi.lua_setupvalue;\nmodule.exports.lua_setuservalue        = lapi.lua_setuservalue;\nmodule.exports.lua_status              = lapi.lua_status;\nmodule.exports.lua_stringtonumber      = lapi.lua_stringtonumber;\nmodule.exports.lua_toboolean           = lapi.lua_toboolean;\nmodule.exports.lua_todataview          = lapi.lua_todataview;\nmodule.exports.lua_tointeger           = lapi.lua_tointeger;\nmodule.exports.lua_tointegerx          = lapi.lua_tointegerx;\nmodule.exports.lua_tojsstring          = lapi.lua_tojsstring;\nmodule.exports.lua_tolstring           = lapi.lua_tolstring;\nmodule.exports.lua_tonumber            = lapi.lua_tonumber;\nmodule.exports.lua_tonumberx           = lapi.lua_tonumberx;\nmodule.exports.lua_topointer           = lapi.lua_topointer;\nmodule.exports.lua_toproxy             = lapi.lua_toproxy;\nmodule.exports.lua_tostring            = lapi.lua_tostring;\nmodule.exports.lua_tothread            = lapi.lua_tothread;\nmodule.exports.lua_touserdata          = lapi.lua_touserdata;\nmodule.exports.lua_type                = lapi.lua_type;\nmodule.exports.lua_typename            = lapi.lua_typename;\nmodule.exports.lua_upvalueid           = lapi.lua_upvalueid;\nmodule.exports.lua_upvaluejoin         = lapi.lua_upvaluejoin;\nmodule.exports.lua_version             = lapi.lua_version;\nmodule.exports.lua_xmove               = lapi.lua_xmove;\nmodule.exports.lua_yield               = ldo.lua_yield;\nmodule.exports.lua_yieldk              = ldo.lua_yieldk;\nmodule.exports.lua_tocfunction         = lapi.lua_tocfunction;\n","\"use strict\";\n\nconst conf = (process.env.FENGARICONF ? JSON.parse(process.env.FENGARICONF) : {});\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    to_luastring\n} = require('./defs.js');\n\n/*\n** LUA_PATH_SEP is the character that separates templates in a path.\n** LUA_PATH_MARK is the string that marks the substitution points in a\n** template.\n** LUA_EXEC_DIR in a Windows path is replaced by the executable's\n** directory.\n*/\nconst LUA_PATH_SEP  = \";\";\nmodule.exports.LUA_PATH_SEP = LUA_PATH_SEP;\n\nconst LUA_PATH_MARK = \"?\";\nmodule.exports.LUA_PATH_MARK = LUA_PATH_MARK;\n\nconst LUA_EXEC_DIR  = \"!\";\nmodule.exports.LUA_EXEC_DIR = LUA_EXEC_DIR;\n\n/*\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n** Lua libraries.\n@@ LUA_JSPATH_DEFAULT is the default path that Lua uses to look for\n** JS libraries.\n** CHANGE them if your machine has a non-conventional directory\n** hierarchy or if you want to install your libraries in\n** non-conventional directories.\n*/\nconst LUA_VDIR = LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VDIR = LUA_VDIR;\n\nif (typeof process === \"undefined\") {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_LDIR = \"./lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        /* LUA_JSDIR excluded as it is equal to LUA_LDIR */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else if (require('os').platform() === 'win32') {\n    const LUA_DIRSEP = \"\\\\\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    /*\n    ** In Windows, any exclamation mark ('!') in the path is replaced by the\n    ** path of the directory of the executable file of the current process.\n    */\n    const LUA_LDIR = \"!\\\\lua\\\\\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = \"!\\\\\";\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_SHRDIR = \"!\\\\..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\\";\n    module.exports.LUA_SHRDIR = LUA_SHRDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?\\\\init.lua;\" +\n        LUA_JSDIR + \"?.lua;\" + LUA_JSDIR + \"?\\\\init.lua;\" +\n        LUA_SHRDIR + \"?.lua;\" + LUA_SHRDIR + \"?\\\\init.lua;\" +\n        \".\\\\?.lua;.\\\\?\\\\init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" +\n        LUA_JSDIR + \"..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\?.js;\" +\n        LUA_JSDIR + \"loadall.js;.\\\\?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_ROOT = \"/usr/local/\";\n    module.exports.LUA_ROOT = LUA_ROOT;\n    const LUA_ROOT2 = \"/usr/\";\n\n    const LUA_LDIR = LUA_ROOT + \"share/lua/\" + LUA_VDIR + \"/\";\n    const LUA_LDIR2 = LUA_ROOT2 + \"share/lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n    const LUA_JSDIR2 = LUA_LDIR2;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        LUA_LDIR2 + \"?.lua;\" + LUA_LDIR2 + \"?/init.lua;\" +\n        /* LUA_JSDIR(2) excluded as it is equal to LUA_LDIR(2) */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;\" +\n        LUA_JSDIR2 + \"?.js;\" + LUA_JSDIR2 + \"loadall.js;\" +\n        \"./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n}\n\n/*\n@@ LUA_COMPAT_FLOATSTRING makes Lua format integral floats without a\n@@ a float mark ('.0').\n** This macro is not on by default even in compatibility mode,\n** because this is not really an incompatibility.\n*/\nconst LUA_COMPAT_FLOATSTRING = conf.LUA_COMPAT_FLOATSTRING || false;\n\nconst LUA_MAXINTEGER = 2147483647;\nconst LUA_MININTEGER = -2147483648;\n\n/*\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n** CHANGE it if you need a different limit. This limit is arbitrary;\n** its only purpose is to stop Lua from consuming unlimited stack\n** space (and to reserve some numbers for pseudo-indices).\n*/\nconst LUAI_MAXSTACK = conf.LUAI_MAXSTACK || 1000000;\n\n/*\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ of a function in debug information.\n** CHANGE it if you want a different size.\n*/\nconst LUA_IDSIZE = conf.LUA_IDSIZE || (60-1); /* fengari uses 1 less than lua as we don't embed the null byte */\n\nconst lua_integer2str = function(n) {\n    return String(n); /* should match behaviour of LUA_INTEGER_FMT */\n};\n\nconst lua_number2str = function(n) {\n    return String(Number(n.toPrecision(14))); /* should match behaviour of LUA_NUMBER_FMT */\n};\n\nconst lua_numbertointeger = function(n) {\n    return n >= LUA_MININTEGER && n < -LUA_MININTEGER ? n : false;\n};\n\nconst LUA_INTEGER_FRMLEN = \"\";\nconst LUA_NUMBER_FRMLEN = \"\";\n\nconst LUA_INTEGER_FMT = `%${LUA_INTEGER_FRMLEN}d`;\nconst LUA_NUMBER_FMT  = \"%.14g\";\n\nconst lua_getlocaledecpoint = function() {\n    /* we hard-code the decimal point to '.' as a user cannot change the\n       locale in most JS environments, and in that you can, a multi-byte\n       locale is common.\n    */\n    return 46 /* '.'.charCodeAt(0) */;\n};\n\nconst luai_apicheck = function(l, e) {\n    if (!e) throw Error(e);\n};\n\n/*\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n*/\nconst LUAL_BUFFERSIZE = conf.LUAL_BUFFERSIZE || 8192;\n\n// See: http://croquetweak.blogspot.fr/2014/08/deconstructing-floats-frexp-and-ldexp.html\nconst frexp = function(value) {\n    if (value === 0) return [value, 0];\n    var data = new DataView(new ArrayBuffer(8));\n    data.setFloat64(0, value);\n    var bits = (data.getUint32(0) >>> 20) & 0x7FF;\n    if (bits === 0) { // denormal\n        data.setFloat64(0, value * Math.pow(2, 64));  // exp + 64\n        bits = ((data.getUint32(0) >>> 20) & 0x7FF) - 64;\n    }\n    var exponent = bits - 1022;\n    var mantissa = ldexp(value, -exponent);\n    return [mantissa, exponent];\n};\n\nconst ldexp = function(mantissa, exponent) {\n    var steps = Math.min(3, Math.ceil(Math.abs(exponent) / 1023));\n    var result = mantissa;\n    for (var i = 0; i < steps; i++)\n        result *= Math.pow(2, Math.floor((exponent + i) / steps));\n    return result;\n};\n\nmodule.exports.LUAI_MAXSTACK          = LUAI_MAXSTACK;\nmodule.exports.LUA_COMPAT_FLOATSTRING = LUA_COMPAT_FLOATSTRING;\nmodule.exports.LUA_IDSIZE             = LUA_IDSIZE;\nmodule.exports.LUA_INTEGER_FMT        = LUA_INTEGER_FMT;\nmodule.exports.LUA_INTEGER_FRMLEN     = LUA_INTEGER_FRMLEN;\nmodule.exports.LUA_MAXINTEGER         = LUA_MAXINTEGER;\nmodule.exports.LUA_MININTEGER         = LUA_MININTEGER;\nmodule.exports.LUA_NUMBER_FMT         = LUA_NUMBER_FMT;\nmodule.exports.LUA_NUMBER_FRMLEN      = LUA_NUMBER_FRMLEN;\nmodule.exports.LUAL_BUFFERSIZE        = LUAL_BUFFERSIZE;\nmodule.exports.frexp                  = frexp;\nmodule.exports.ldexp                  = ldexp;\nmodule.exports.lua_getlocaledecpoint  = lua_getlocaledecpoint;\nmodule.exports.lua_integer2str        = lua_integer2str;\nmodule.exports.lua_number2str         = lua_number2str;\nmodule.exports.lua_numbertointeger    = lua_numbertointeger;\nmodule.exports.luai_apicheck          = luai_apicheck;\n","\"use strict\";\n\nconst { luai_apicheck } = require(\"./luaconf.js\");\n\nconst lua_assert = function(c) {\n    if (!c) throw Error(\"assertion failed\");\n};\nmodule.exports.lua_assert = lua_assert;\n\nmodule.exports.luai_apicheck = luai_apicheck || function(l, e) { return lua_assert(e); };\n\nconst api_check = function(l, e, msg) {\n    return luai_apicheck(l, e && msg);\n};\nmodule.exports.api_check = api_check;\n\nconst LUAI_MAXCCALLS = 200;\nmodule.exports.LUAI_MAXCCALLS = LUAI_MAXCCALLS;\n\n/* minimum size for string buffer */\nconst LUA_MINBUFFER = 32;\nmodule.exports.LUA_MINBUFFER = LUA_MINBUFFER;\n\nconst luai_nummod = function(L, a, b) {\n    let m = a % b;\n    if ((m*b) < 0)\n        m += b;\n    return m;\n};\nmodule.exports.luai_nummod = luai_nummod;\n\n// If later integers are more than 32bit, LUA_MAXINTEGER will then be != MAX_INT\nconst MAX_INT = 2147483647;\nmodule.exports.MAX_INT = MAX_INT;\nconst MIN_INT = -2147483648;\nmodule.exports.MIN_INT = MIN_INT;\n","/* Fengari specific functions\n *\n * This file includes fengari-specific data or and functionality for users to\n * manipulate fengari's string type.\n * The fields are exposed to the user on the 'fengari' entry point; however to\n * avoid a dependency on defs.js from lauxlib.js they are defined in this file.\n */\n\nconst defs = require(\"./defs.js\");\n\nconst FENGARI_VERSION_MAJOR   = \"0\";\nconst FENGARI_VERSION_MINOR   = \"1\";\nconst FENGARI_VERSION_NUM     = 1;\nconst FENGARI_VERSION_RELEASE = \"4\";\nconst FENGARI_VERSION         = \"Fengari \" + FENGARI_VERSION_MAJOR + \".\" + FENGARI_VERSION_MINOR;\nconst FENGARI_RELEASE         = FENGARI_VERSION + \".\" + FENGARI_VERSION_RELEASE;\nconst FENGARI_AUTHORS         = \"B. Giannangeli, Daurnimator\";\nconst FENGARI_COPYRIGHT       = FENGARI_RELEASE + \"  Copyright (C) 2017-2018 \" + FENGARI_AUTHORS + \"\\nBased on: \" + defs.LUA_COPYRIGHT;\n\nmodule.exports.FENGARI_AUTHORS         = FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = FENGARI_VERSION_RELEASE;\nmodule.exports.is_luastring            = defs.is_luastring;\nmodule.exports.luastring_eq            = defs.luastring_eq;\nmodule.exports.luastring_from          = defs.luastring_from;\nmodule.exports.luastring_indexOf       = defs.luastring_indexOf;\nmodule.exports.luastring_of            = defs.luastring_of;\nmodule.exports.to_jsstring             = defs.to_jsstring;\nmodule.exports.to_luastring            = defs.to_luastring;\nmodule.exports.to_uristring            = defs.to_uristring;\nmodule.exports.from_userstring         = defs.from_userstring;\n","\"use strict\";\n\nconst {\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPMUL,\n    LUA_OPPOW,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPSUB,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TSTRING,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    from_userstring,\n    luastring_indexOf,\n    luastring_of,\n    to_jsstring,\n    to_luastring\n} = require('./defs.js');\nconst {\n    lisdigit,\n    lisprint,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst ldebug  = require('./ldebug.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst {\n    LUA_COMPAT_FLOATSTRING,\n    ldexp,\n    lua_integer2str,\n    lua_number2str\n} = require('./luaconf.js');\nconst lvm     = require('./lvm.js');\nconst {\n    MAX_INT,\n    luai_nummod,\n    lua_assert\n} = require(\"./llimits.js\");\nconst ltm     = require('./ltm.js');\n\nconst LUA_TPROTO = LUA_NUMTAGS;\nconst LUA_TDEADKEY = LUA_NUMTAGS+1;\n\nclass TValue {\n\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    /* type tag of a TValue (bits 0-3 for tags + variant bits 4-5) */\n    ttype() {\n        return this.type & 0x3F;\n    }\n\n    /* type tag of a TValue with no variants (bits 0-3) */\n    ttnov() {\n        return this.type & 0x0F;\n    }\n\n    checktag(t) {\n        return this.type === t;\n    }\n\n    checktype(t) {\n        return this.ttnov() === t;\n    }\n\n    ttisnumber() {\n        return this.checktype(LUA_TNUMBER);\n    }\n\n    ttisfloat() {\n        return this.checktag(LUA_TNUMFLT);\n    }\n\n    ttisinteger() {\n        return this.checktag(LUA_TNUMINT);\n    }\n\n    ttisnil() {\n        return this.checktag(LUA_TNIL);\n    }\n\n    ttisboolean() {\n        return this.checktag(LUA_TBOOLEAN);\n    }\n\n    ttislightuserdata() {\n        return this.checktag(LUA_TLIGHTUSERDATA);\n    }\n\n    ttisstring() {\n        return this.checktype(LUA_TSTRING);\n    }\n\n    ttisshrstring() {\n        return this.checktag(LUA_TSHRSTR);\n    }\n\n    ttislngstring() {\n        return this.checktag(LUA_TLNGSTR);\n    }\n\n    ttistable() {\n        return this.checktag(LUA_TTABLE);\n    }\n\n    ttisfunction() {\n        return this.checktype(LUA_TFUNCTION);\n    }\n\n    ttisclosure() {\n        return (this.type & 0x1F) === LUA_TFUNCTION;\n    }\n\n    ttisCclosure() {\n        return this.checktag(LUA_TCCL);\n    }\n\n    ttisLclosure() {\n        return this.checktag(LUA_TLCL);\n    }\n\n    ttislcf() {\n        return this.checktag(LUA_TLCF);\n    }\n\n    ttisfulluserdata() {\n        return this.checktag(LUA_TUSERDATA);\n    }\n\n    ttisthread() {\n        return this.checktag(LUA_TTHREAD);\n    }\n\n    ttisdeadkey() {\n        return this.checktag(LUA_TDEADKEY);\n    }\n\n    l_isfalse() {\n        return this.ttisnil() || (this.ttisboolean() && this.value === false);\n    }\n\n    setfltvalue(x) {\n        this.type = LUA_TNUMFLT;\n        this.value = x;\n    }\n\n    chgfltvalue(x) {\n        lua_assert(this.type == LUA_TNUMFLT);\n        this.value = x;\n    }\n\n    setivalue(x) {\n        this.type = LUA_TNUMINT;\n        this.value = x;\n    }\n\n    chgivalue(x) {\n        lua_assert(this.type == LUA_TNUMINT);\n        this.value = x;\n    }\n\n    setnilvalue() {\n        this.type = LUA_TNIL;\n        this.value = null;\n    }\n\n    setfvalue(x) {\n        this.type = LUA_TLCF;\n        this.value = x;\n    }\n\n    setpvalue(x) {\n        this.type = LUA_TLIGHTUSERDATA;\n        this.value = x;\n    }\n\n    setbvalue(x) {\n        this.type = LUA_TBOOLEAN;\n        this.value = x;\n    }\n\n    setsvalue(x) {\n        this.type = LUA_TLNGSTR; /* LUA_TSHRSTR? */\n        this.value = x;\n    }\n\n    setuvalue(x) {\n        this.type = LUA_TUSERDATA;\n        this.value = x;\n    }\n\n    setthvalue(x) {\n        this.type = LUA_TTHREAD;\n        this.value = x;\n    }\n\n    setclLvalue(x) {\n        this.type = LUA_TLCL;\n        this.value = x;\n    }\n\n    setclCvalue(x) {\n        this.type = LUA_TCCL;\n        this.value = x;\n    }\n\n    sethvalue(x) {\n        this.type = LUA_TTABLE;\n        this.value = x;\n    }\n\n    setdeadvalue() {\n        this.type = LUA_TDEADKEY;\n        this.value = null;\n    }\n\n    setfrom(tv) { /* in lua C source setobj2t is often used for this */\n        this.type = tv.type;\n        this.value = tv.value;\n    }\n\n    tsvalue() {\n        lua_assert(this.ttisstring());\n        return this.value;\n    }\n\n    svalue() {\n        return this.tsvalue().getstr();\n    }\n\n    vslen() {\n        return this.tsvalue().tsslen();\n    }\n\n    jsstring(from, to) {\n        return to_jsstring(this.svalue(), from, to, true);\n    }\n}\n\nconst pushobj2s = function(L, tv) {\n    L.stack[L.top++] = new TValue(tv.type, tv.value);\n};\nconst pushsvalue2s = function(L, ts) {\n    L.stack[L.top++] = new TValue(LUA_TLNGSTR, ts);\n};\n/* from stack to (same) stack */\nconst setobjs2s = function(L, newidx, oldidx) {\n    L.stack[newidx].setfrom(L.stack[oldidx]);\n};\n/* to stack (not from same stack) */\nconst setobj2s = function(L, newidx, oldtv) {\n    L.stack[newidx].setfrom(oldtv);\n};\nconst setsvalue2s = function(L, newidx, ts) {\n    L.stack[newidx].setsvalue(ts);\n};\n\nconst luaO_nilobject = new TValue(LUA_TNIL, null);\nObject.freeze(luaO_nilobject);\nmodule.exports.luaO_nilobject = luaO_nilobject;\n\nclass LClosure {\n\n    constructor(L, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.p = null;\n        this.nupvalues = n;\n        this.upvals = new Array(n); /* list of upvalues. initialised in luaF_initupvals */\n    }\n\n}\n\nclass CClosure {\n\n    constructor(L, f, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.f = f;\n        this.nupvalues = n;\n        this.upvalue = new Array(n); /* list of upvalues as TValues */\n        while (n--) {\n            this.upvalue[n] = new TValue(LUA_TNIL, null);\n        }\n    }\n\n}\n\nclass Udata {\n\n    constructor(L, size) {\n        this.id = L.l_G.id_counter++;\n\n        this.metatable = null;\n        this.uservalue = new TValue(LUA_TNIL, null);\n        this.len = size;\n        this.data = Object.create(null); // ignores size argument\n    }\n\n}\n\n/*\n** Description of a local variable for function prototypes\n** (used for debug information)\n*/\nclass LocVar {\n    constructor() {\n        this.varname = null;\n        this.startpc = NaN;  /* first point where variable is active */\n        this.endpc = NaN;    /* first point where variable is dead */\n    }\n}\n\nconst RETS = to_luastring(\"...\");\nconst PRE  = to_luastring(\"[string \\\"\");\nconst POS  = to_luastring(\"\\\"]\");\n\nconst luaO_chunkid = function(source, bufflen) {\n    let l = source.length;\n    let out;\n    if (source[0] === 61 /* ('=').charCodeAt(0) */) {  /* 'literal' source */\n        if (l < bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* truncate it */\n            out = new Uint8Array(bufflen);\n            out.set(source.subarray(1, bufflen+1));\n        }\n    } else if (source[0] === 64 /* ('@').charCodeAt(0) */) {  /* file name */\n        if (l <= bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* add '...' before rest of name */\n            out = new Uint8Array(bufflen);\n            out.set(RETS);\n            bufflen -= RETS.length;\n            out.set(source.subarray(l - bufflen), RETS.length);\n        }\n    } else {  /* string; format as [string \"source\"] */\n        out = new Uint8Array(bufflen);\n        let nli = luastring_indexOf(source, 10 /* ('\\n').charCodeAt(0) */);  /* find first new line (if any) */\n        out.set(PRE);  /* add prefix */\n        let out_i = PRE.length;\n        bufflen -= PRE.length + RETS.length + POS.length;  /* save space for prefix+suffix */\n        if (l < bufflen && nli === -1) {  /* small one-line source? */\n            out.set(source, out_i);  /* keep it */\n            out_i += source.length;\n        } else {\n            if (nli !== -1) l = nli;  /* stop at first newline */\n            if (l > bufflen) l = bufflen;\n            out.set(source.subarray(0, l), out_i);\n            out_i += l;\n            out.set(RETS, out_i);\n            out_i += RETS.length;\n        }\n        out.set(POS, out_i);\n        out_i += POS.length;\n        out = out.subarray(0, out_i);\n    }\n    return out;\n};\n\nconst luaO_hexavalue = function(c) {\n    if (lisdigit(c)) return c - 48;\n    else return (c & 0xdf) - 55;\n};\n\nconst UTF8BUFFSZ = 8;\n\nconst luaO_utf8esc = function(buff, x) {\n    let n = 1;  /* number of bytes put in buffer (backwards) */\n    lua_assert(x <= 0x10FFFF);\n    if (x < 0x80)  /* ascii? */\n        buff[UTF8BUFFSZ - 1] = x;\n    else {  /* need continuation bytes */\n        let mfb = 0x3f;  /* maximum that fits in first byte */\n        do {\n            buff[UTF8BUFFSZ - (n++)] = 0x80 | (x & 0x3f);\n            x >>= 6;  /* remove added bits */\n            mfb >>= 1;  /* now there is one less bit available in first byte */\n        } while (x > mfb);  /* still needs continuation byte? */\n        buff[UTF8BUFFSZ - n] = (~mfb << 1) | x;  /* add first byte */\n    }\n    return n;\n};\n\n/* maximum number of significant digits to read (to avoid overflows\n   even with single floats) */\nconst MAXSIGDIG = 30;\n\n/*\n** convert an hexadecimal numeric string to a number, following\n** C99 specification for 'strtod'\n*/\nconst lua_strx2number = function(s) {\n    let i = 0;\n    let r = 0.0;  /* result (accumulator) */\n    let sigdig = 0;  /* number of significant digits */\n    let nosigdig = 0;  /* number of non-significant digits */\n    let e = 0;  /* exponent correction */\n    let neg;  /* 1 if number is negative */\n    let hasdot = false;  /* true after seen a dot */\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* check signal */\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (!(s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)))  /* check '0x' */\n        return null;  /* invalid format (no '0x') */\n    for (i += 2; ; i++) {  /* skip '0x' and read numeral */\n        if (s[i] === 46 /* ('.').charCodeAt(0) i.e. dot/lua_getlocaledecpoint(); */) {\n            if (hasdot) break;  /* second dot? stop loop */\n            else hasdot = true;\n        } else if (lisxdigit(s[i])) {\n            if (sigdig === 0 && s[i] === 48 /* ('0').charCodeAt(0) */)  /* non-significant digit (zero)? */\n                nosigdig++;\n            else if (++sigdig <= MAXSIGDIG)  /* can read it without overflow? */\n                r = (r * 16) + luaO_hexavalue(s[i]);\n            else e++; /* too many digits; ignore, but still count for exponent */\n            if (hasdot) e--;  /* decimal digit? correct exponent */\n        } else break;  /* neither a dot nor a digit */\n    }\n\n    if (nosigdig + sigdig === 0)  /* no digits? */\n        return null;  /* invalid format */\n    e *= 4;  /* each digit multiplies/divides value by 2^4 */\n    if (s[i] === 112 /* ('p').charCodeAt(0) */ || s[i] === 80 /* ('P').charCodeAt(0) */) {  /* exponent part? */\n        let exp1 = 0;  /* exponent value */\n        let neg1;  /* exponent signal */\n        i++;  /* skip 'p' */\n        if ((neg1 = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* signal */\n        else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n        if (!lisdigit(s[i]))\n            return null;  /* invalid; must have at least one digit */\n        while (lisdigit(s[i]))  /* read exponent */\n            exp1 = exp1 * 10 + s[i++] - 48 /* ('0').charCodeAt(0) */;\n        if (neg1) exp1 = -exp1;\n        e += exp1;\n    }\n    if (neg) r = -r;\n    return {\n        n: ldexp(r, e),\n        i: i\n    };\n};\n\nconst lua_str2number = function(s) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    /* use a regex to validate number and also to get length\n       parseFloat ignores trailing junk */\n    let r = /^[\\t\\v\\f \\n\\r]*[+-]?(?:[0-9]+\\.?[0-9]*|\\.[0-9]*)(?:[eE][+-]?[0-9]+)?/.exec(s);\n    if (!r)\n        return null;\n    let flt = parseFloat(r[0]);\n    return !isNaN(flt) ? { n: flt, i: r[0].length } : null;\n};\n\nconst l_str2dloc = function(s, mode) {\n    let result = mode === 'x' ? lua_strx2number(s) : lua_str2number(s); /* try to convert */\n    if (result === null) return null;\n    while (lisspace(s[result.i])) result.i++;  /* skip trailing spaces */\n    return (result.i === s.length || s[result.i] === 0) ? result : null;  /* OK if no trailing characters */\n};\n\nconst SIGILS = [\n    46  /* (\".\").charCodeAt(0) */,\n    120 /* (\"x\").charCodeAt(0) */,\n    88  /* (\"X\").charCodeAt(0) */,\n    110 /* (\"n\").charCodeAt(0) */,\n    78  /* (\"N\").charCodeAt(0) */\n];\nconst modes = {\n    [ 46]: \".\",\n    [120]: \"x\",\n    [ 88]: \"x\",\n    [110]: \"n\",\n    [ 78]: \"n\"\n};\nconst l_str2d = function(s) {\n    let l = s.length;\n    let pmode = 0;\n    for (let i=0; i<l; i++) {\n        let v = s[i];\n        if (SIGILS.indexOf(v) !== -1) {\n            pmode = v;\n            break;\n        }\n    }\n    let mode = modes[pmode];\n    if (mode === 'n')  /* reject 'inf' and 'nan' */\n        return null;\n    let end = l_str2dloc(s, mode);  /* try to convert */\n    // if (end === null) {   /* failed? may be a different locale */\n    //     throw new Error(\"Locale not available to handle number\"); // TODO\n    // }\n    return end;\n};\n\nconst MAXBY10  = Math.floor(MAX_INT / 10);\nconst MAXLASTD = MAX_INT % 10;\n\nconst l_str2int = function(s) {\n    let i = 0;\n    let a = 0;\n    let empty = true;\n    let neg;\n\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)) {  /* hex? */\n        i += 2;  /* skip '0x' */\n        for (; i < s.length && lisxdigit(s[i]); i++) {\n            a = (a * 16 + luaO_hexavalue(s[i]))|0;\n            empty = false;\n        }\n    } else {  /* decimal */\n        for (; i < s.length && lisdigit(s[i]); i++) {\n            let d = s[i] - 48 /* ('0').charCodeAt(0) */;\n            if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */\n                return null;  /* do not accept it (as integer) */\n            a = (a * 10 + d)|0;\n            empty = false;\n        }\n    }\n    while (i < s.length && lisspace(s[i])) i++;  /* skip trailing spaces */\n    if (empty || (i !== s.length && s[i] !== 0)) return null;  /* something wrong in the numeral */\n    else {\n        return {\n            n: (neg ? -a : a)|0,\n            i: i\n        };\n    }\n};\n\nconst luaO_str2num = function(s, o) {\n    let s2i = l_str2int(s);\n    if (s2i !== null) {   /* try as an integer */\n        o.setivalue(s2i.n);\n        return s2i.i+1;\n    } else {   /* else try as a float */\n        s2i = l_str2d(s);\n        if (s2i !== null) {\n            o.setfltvalue(s2i.n);\n            return s2i.i+1;\n        } else\n            return 0;  /* conversion failed */\n    }\n};\n\nconst luaO_tostring = function(L, obj) {\n    let buff;\n    if (obj.ttisinteger())\n        buff = to_luastring(lua_integer2str(obj.value));\n    else {\n        let str = lua_number2str(obj.value);\n        if (!LUA_COMPAT_FLOATSTRING && /^[-0123456789]+$/.test(str)) {  /* looks like an int? */\n            str += '.0'; /* adds '.0' to result: lua_getlocaledecpoint removed as optimisation */\n        }\n        buff = to_luastring(str);\n    }\n    obj.setsvalue(luaS_bless(L, buff));\n};\n\nconst pushstr = function(L, str) {\n    ldo.luaD_inctop(L);\n    setsvalue2s(L, L.top-1, luaS_new(L, str));\n};\n\nconst luaO_pushvfstring = function(L, fmt, argp) {\n    let n = 0;\n    let i = 0;\n    let a = 0;\n    let e;\n    for (;;) {\n        e = luastring_indexOf(fmt, 37 /* ('%').charCodeAt(0) */, i);\n        if (e == -1) break;\n        pushstr(L, fmt.subarray(i, e));\n        switch(fmt[e+1]) {\n            case 115 /* ('s').charCodeAt(0) */: {\n                let s = argp[a++];\n                if (s === null) s = to_luastring(\"(null)\", true);\n                else {\n                    s = from_userstring(s);\n                    /* respect null terminator */\n                    let i = luastring_indexOf(s, 0);\n                    if (i !== -1)\n                        s = s.subarray(0, i);\n                }\n                pushstr(L, s);\n                break;\n            }\n            case 99 /* ('c').charCodeAt(0) */: {\n                let buff = argp[a++];\n                if (lisprint(buff))\n                    pushstr(L, luastring_of(buff));\n                else\n                    luaO_pushfstring(L, to_luastring(\"<\\\\%d>\", true), buff);\n                break;\n            }\n            case 100 /* ('d').charCodeAt(0) */:\n            case 73 /* ('I').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setivalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 102 /* ('f').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setfltvalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 112 /* ('p').charCodeAt(0) */: {\n                let v = argp[a++];\n                if (v instanceof lstate.lua_State ||\n                    v instanceof ltable.Table ||\n                    v instanceof Udata ||\n                    v instanceof LClosure ||\n                    v instanceof CClosure) {\n                    pushstr(L, to_luastring(\"0x\"+v.id.toString(16)));\n                } else {\n                    switch(typeof v) {\n                        case \"undefined\":\n                            pushstr(L, to_luastring(\"undefined\"));\n                            break;\n                        case \"number\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"Number(\"+v+\")\"));\n                            break;\n                        case \"string\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"String(\"+JSON.stringify(v)+\")\"));\n                            break;\n                        case \"boolean\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(v?\"Boolean(true)\":\"Boolean(false)\"));\n                            break;\n                        case \"object\":\n                            if (v === null) { /* null is special */\n                                pushstr(L, to_luastring(\"null\"));\n                                break;\n                            }\n                            /* fall through */\n                        case \"function\": {\n                            let id = L.l_G.ids.get(v);\n                            if (!id) {\n                                id = L.l_G.id_counter++;\n                                L.l_G.ids.set(v, id);\n                            }\n                            pushstr(L, to_luastring(\"0x\"+id.toString(16)));\n                            break;\n                        }\n                        default:\n                            /* user provided object. no id available */\n                            pushstr(L, to_luastring(\"<id NYI>\"));\n                    }\n                }\n                break;\n            }\n            case 85 /* ('U').charCodeAt(0) */: {\n                let buff = new Uint8Array(UTF8BUFFSZ);\n                let l = luaO_utf8esc(buff, argp[a++]);\n                pushstr(L, buff.subarray(UTF8BUFFSZ - l));\n                break;\n            }\n            case 37 /* ('%').charCodeAt(0) */:\n                pushstr(L, to_luastring(\"%\", true));\n                break;\n            default:\n                ldebug.luaG_runerror(L, to_luastring(\"invalid option '%%%c' to 'lua_pushfstring'\"), fmt[e + 1]);\n        }\n        n += 2;\n        i = e + 2;\n    }\n    ldo.luaD_checkstack(L, 1);\n    pushstr(L, fmt.subarray(i));\n    if (n > 0) lvm.luaV_concat(L, n+1);\n    return L.stack[L.top-1].svalue();\n};\n\nconst luaO_pushfstring = function(L, fmt, ...argp) {\n    return luaO_pushvfstring(L, fmt, argp);\n};\n\n\n/*\n** converts an integer to a \"floating point byte\", represented as\n** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if\n** eeeee !== 0 and (xxx) otherwise.\n*/\nconst luaO_int2fb = function(x) {\n    let e = 0;  /* exponent */\n    if (x < 8) return x;\n    while (x >= (8 << 4)) {  /* coarse steps */\n        x = (x + 0xf) >> 4;  /* x = ceil(x / 16) */\n        e += 4;\n    }\n    while (x >= (8 << 1)) {  /* fine steps */\n        x = (x + 1) >> 1;  /* x = ceil(x / 2) */\n        e++;\n    }\n    return ((e+1) << 3) | (x - 8);\n};\n\nconst intarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return (v1 + v2)|0;\n        case LUA_OPSUB:  return (v1 - v2)|0;\n        case LUA_OPMUL:  return lvm.luaV_imul(v1, v2);\n        case LUA_OPMOD:  return lvm.luaV_mod(L, v1, v2);\n        case LUA_OPIDIV: return lvm.luaV_div(L, v1, v2);\n        case LUA_OPBAND: return (v1 & v2);\n        case LUA_OPBOR:  return (v1 | v2);\n        case LUA_OPBXOR: return (v1 ^ v2);\n        case LUA_OPSHL:  return lvm.luaV_shiftl(v1, v2);\n        case LUA_OPSHR:  return lvm.luaV_shiftl(v1, -v2);\n        case LUA_OPUNM:  return (0 - v1)|0;\n        case LUA_OPBNOT: return (~0 ^ v1);\n        default: lua_assert(0);\n    }\n};\n\n\nconst numarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return v1 + v2;\n        case LUA_OPSUB:  return v1 - v2;\n        case LUA_OPMUL:  return v1 * v2;\n        case LUA_OPDIV:  return v1 / v2;\n        case LUA_OPPOW:  return Math.pow(v1, v2);\n        case LUA_OPIDIV: return Math.floor(v1 / v2);\n        case LUA_OPUNM:  return -v1;\n        case LUA_OPMOD:  return luai_nummod(L, v1, v2);\n        default: lua_assert(0);\n    }\n};\n\nconst luaO_arith = function(L, op, p1, p2, p3) {\n    let res = (typeof p3 === \"number\") ? L.stack[p3] : p3;  /* FIXME */\n\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR:\n        case LUA_OPBNOT: {  /* operate only on integers */\n            let i1, i2;\n            if ((i1 = lvm.tointeger(p1)) !== false && (i2 = lvm.tointeger(p2)) !== false) {\n                res.setivalue(intarith(L, op, i1, i2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        case LUA_OPDIV: case LUA_OPPOW: {  /* operate only on floats */\n            let n1, n2;\n            if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        default: {  /* other operations */\n            let n1, n2;\n            if (p1.ttisinteger() && p2.ttisinteger()) {\n                res.setivalue(intarith(L, op, p1.value, p2.value));\n                return;\n            }\n            else if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n    }\n    /* could not perform raw operation; try metamethod */\n    lua_assert(L !== null);  /* should not fail when folding (compile time) */\n    ltm.luaT_trybinTM(L, p1, p2, p3, (op - LUA_OPADD) + ltm.TMS.TM_ADD);\n};\n\n\nmodule.exports.CClosure          = CClosure;\nmodule.exports.LClosure          = LClosure;\nmodule.exports.LUA_TDEADKEY      = LUA_TDEADKEY;\nmodule.exports.LUA_TPROTO        = LUA_TPROTO;\nmodule.exports.LocVar            = LocVar;\nmodule.exports.TValue            = TValue;\nmodule.exports.Udata             = Udata;\nmodule.exports.UTF8BUFFSZ        = UTF8BUFFSZ;\nmodule.exports.luaO_arith        = luaO_arith;\nmodule.exports.luaO_chunkid      = luaO_chunkid;\nmodule.exports.luaO_hexavalue    = luaO_hexavalue;\nmodule.exports.luaO_int2fb       = luaO_int2fb;\nmodule.exports.luaO_pushfstring  = luaO_pushfstring;\nmodule.exports.luaO_pushvfstring = luaO_pushvfstring;\nmodule.exports.luaO_str2num      = luaO_str2num;\nmodule.exports.luaO_tostring     = luaO_tostring;\nmodule.exports.luaO_utf8esc      = luaO_utf8esc;\nmodule.exports.numarith          = numarith;\nmodule.exports.pushobj2s         = pushobj2s;\nmodule.exports.pushsvalue2s      = pushsvalue2s;\nmodule.exports.setobjs2s         = setobjs2s;\nmodule.exports.setobj2s          = setobj2s;\nmodule.exports.setsvalue2s       = setsvalue2s;\n","\"use strict\";\n\nconst {\n    LUAL_BUFFERSIZE\n} = require('./luaconf.js');\nconst {\n    LUA_ERRERR,\n    LUA_MULTRET,\n    LUA_REGISTRYINDEX,\n    LUA_SIGNATURE,\n    LUA_TBOOLEAN,\n    LUA_TLIGHTUSERDATA,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION_NUM,\n    lua_Debug,\n    lua_absindex,\n    lua_atpanic,\n    lua_call,\n    lua_checkstack,\n    lua_concat,\n    lua_copy,\n    lua_createtable,\n    lua_error,\n    lua_getfield,\n    lua_getinfo,\n    lua_getmetatable,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isinteger,\n    lua_isnil,\n    lua_isnumber,\n    lua_isstring,\n    lua_istable,\n    lua_len,\n    lua_load,\n    lua_newstate,\n    lua_newtable,\n    lua_next,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_pushvfstring,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawgeti,\n    lua_rawlen,\n    lua_rawseti,\n    lua_remove,\n    lua_setfield,\n    lua_setglobal,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_tojsstring,\n    lua_tolstring,\n    lua_tonumber,\n    lua_tonumberx,\n    lua_topointer,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_typename,\n    lua_version\n} = require('./lua.js');\nconst {\n    from_userstring,\n    luastring_eq,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\n\n/* extra error code for 'luaL_loadfilex' */\nconst LUA_ERRFILE = LUA_ERRERR+1;\n\n/* key, in the registry, for table of loaded modules */\nconst LUA_LOADED_TABLE = to_luastring(\"_LOADED\");\n\n/* key, in the registry, for table of preloaded loaders */\nconst LUA_PRELOAD_TABLE = to_luastring(\"_PRELOAD\");\n\nconst LUA_FILEHANDLE = to_luastring(\"FILE*\");\n\nconst LUAL_NUMSIZES  = 4*16 + 8;\n\nconst __name = to_luastring(\"__name\");\nconst __tostring = to_luastring(\"__tostring\");\n\nconst empty = new Uint8Array(0);\n\nclass luaL_Buffer {\n    constructor() {\n        this.L = null;\n        this.b = empty;\n        this.n = 0;\n    }\n}\n\nconst LEVELS1 = 10;  /* size of the first part of the stack */\nconst LEVELS2 = 11;  /* size of the second part of the stack */\n\n/*\n** search for 'objidx' in table at index -1.\n** return 1 + string at top if find a good name.\n*/\nconst findfield = function(L, objidx, level) {\n    if (level === 0 || !lua_istable(L, -1))\n        return 0;  /* not found */\n\n    lua_pushnil(L);  /* start 'next' loop */\n\n    while (lua_next(L, -2)) {  /* for each pair in table */\n        if (lua_type(L, -2) === LUA_TSTRING) {  /* ignore non-string keys */\n            if (lua_rawequal(L, objidx, -1)) {  /* found object? */\n                lua_pop(L, 1);  /* remove value (but keep name) */\n                return 1;\n            } else if (findfield(L, objidx, level - 1)) {  /* try recursively */\n                lua_remove(L, -2);  /* remove table (but keep name) */\n                lua_pushliteral(L, \".\");\n                lua_insert(L, -2);  /* place '.' between the two names */\n                lua_concat(L, 3);\n                return 1;\n            }\n        }\n        lua_pop(L, 1);  /* remove value */\n    }\n\n    return 0;  /* not found */\n};\n\n/*\n** Search for a name for a function in all loaded modules\n*/\nconst pushglobalfuncname = function(L, ar) {\n    let top = lua_gettop(L);\n    lua_getinfo(L, to_luastring(\"f\"), ar);  /* push function */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    if (findfield(L, top + 1, 2)) {\n        let name = lua_tostring(L, -1);\n        if (name[0] === 95 /* '_'.charCodeAt(0) */ &&\n            name[1] === 71 /* 'G'.charCodeAt(0) */ &&\n            name[2] === 46 /* '.'.charCodeAt(0) */\n        ) {  /* name start with '_G.'? */\n            lua_pushstring(L, name.subarray(3));  /* push name without prefix */\n            lua_remove(L, -2);  /* remove original name */\n        }\n        lua_copy(L, -1, top + 1);  /* move name to proper place */\n        lua_pop(L, 2);  /* remove pushed values */\n        return 1;\n    } else {\n        lua_settop(L, top);  /* remove function and global table */\n        return 0;\n    }\n};\n\nconst pushfuncname = function(L, ar) {\n    if (pushglobalfuncname(L, ar)) {  /* try first a global name */\n        lua_pushfstring(L, to_luastring(\"function '%s'\"), lua_tostring(L, -1));\n        lua_remove(L, -2);  /* remove name */\n    }\n    else if (ar.namewhat.length !== 0)  /* is there a name from code? */\n        lua_pushfstring(L, to_luastring(\"%s '%s'\"), ar.namewhat, ar.name);  /* use it */\n    else if (ar.what && ar.what[0] === 109 /* 'm'.charCodeAt(0) */)  /* main? */\n        lua_pushliteral(L, \"main chunk\");\n    else if (ar.what && ar.what[0] === 76 /* 'L'.charCodeAt(0) */)  /* for Lua functions, use <file:line> */\n        lua_pushfstring(L, to_luastring(\"function <%s:%d>\"), ar.short_src, ar.linedefined);\n    else  /* nothing left... */\n        lua_pushliteral(L, \"?\");\n};\n\nconst lastlevel = function(L) {\n    let ar = new lua_Debug();\n    let li = 1;\n    let le = 1;\n    /* find an upper bound */\n    while (lua_getstack(L, le, ar)) { li = le; le *= 2; }\n    /* do a binary search */\n    while (li < le) {\n        let m = Math.floor((li + le)/2);\n        if (lua_getstack(L, m, ar)) li = m + 1;\n        else le = m;\n    }\n    return le - 1;\n};\n\nconst luaL_traceback = function(L, L1, msg, level) {\n    let ar = new lua_Debug();\n    let top = lua_gettop(L);\n    let last = lastlevel(L1);\n    let n1 = last - level > LEVELS1 + LEVELS2 ? LEVELS1 : -1;\n    if (msg)\n        lua_pushfstring(L, to_luastring(\"%s\\n\"), msg);\n    luaL_checkstack(L, 10, null);\n    lua_pushliteral(L, \"stack traceback:\");\n    while (lua_getstack(L1, level++, ar)) {\n        if (n1-- === 0) {  /* too many levels? */\n            lua_pushliteral(L, \"\\n\\t...\");  /* add a '...' */\n            level = last - LEVELS2 + 1;  /* and skip to last ones */\n        } else {\n            lua_getinfo(L1, to_luastring(\"Slnt\", true), ar);\n            lua_pushfstring(L, to_luastring(\"\\n\\t%s:\"), ar.short_src);\n            if (ar.currentline > 0)\n                lua_pushliteral(L, `${ar.currentline}:`);\n            lua_pushliteral(L, \" in \");\n            pushfuncname(L, ar);\n            if (ar.istailcall)\n                lua_pushliteral(L, \"\\n\\t(...tail calls..)\");\n            lua_concat(L, lua_gettop(L) - top);\n        }\n    }\n    lua_concat(L, lua_gettop(L) - top);\n};\n\nconst panic = function(L) {\n    let msg = \"PANIC: unprotected error in call to Lua API (\" + lua_tojsstring(L, -1) + \")\";\n    throw new Error(msg);\n};\n\nconst luaL_argerror = function(L, arg, extramsg) {\n    let ar = new lua_Debug();\n\n    if (!lua_getstack(L, 0, ar))  /* no stack frame? */\n        return luaL_error(L, to_luastring(\"bad argument #%d (%s)\"), arg, extramsg);\n\n    lua_getinfo(L, to_luastring(\"n\"), ar);\n\n    if (luastring_eq(ar.namewhat, to_luastring(\"method\"))) {\n        arg--;  /* do not count 'self' */\n        if (arg === 0)  /* error is in the self argument itself? */\n            return luaL_error(L, to_luastring(\"calling '%s' on bad self (%s)\"), ar.name, extramsg);\n    }\n\n    if (ar.name === null)\n        ar.name = pushglobalfuncname(L, ar) ? lua_tostring(L, -1) : to_luastring(\"?\");\n\n    return luaL_error(L, to_luastring(\"bad argument #%d to '%s' (%s)\"), arg, ar.name, extramsg);\n};\n\nconst typeerror = function(L, arg, tname) {\n    let typearg;\n    if (luaL_getmetafield(L, arg, __name) === LUA_TSTRING)\n        typearg = lua_tostring(L, -1);\n    else if (lua_type(L, arg) === LUA_TLIGHTUSERDATA)\n        typearg = to_luastring(\"light userdata\", true);\n    else\n        typearg = luaL_typename(L, arg);\n\n    let msg = lua_pushfstring(L, to_luastring(\"%s expected, got %s\"), tname, typearg);\n    return luaL_argerror(L, arg, msg);\n};\n\nconst luaL_where = function(L, level) {\n    let ar = new lua_Debug();\n    if (lua_getstack(L, level, ar)) {\n        lua_getinfo(L, to_luastring(\"Sl\", true), ar);\n        if (ar.currentline > 0) {\n            lua_pushfstring(L, to_luastring(\"%s:%d: \"), ar.short_src, ar.currentline);\n            return;\n        }\n    }\n    lua_pushstring(L, to_luastring(\"\"));\n};\n\nconst luaL_error = function(L, fmt, ...argp) {\n    luaL_where(L, 1);\n    lua_pushvfstring(L, fmt, argp);\n    lua_concat(L, 2);\n    return lua_error(L);\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_fileresult = function(L, stat, fname, e) {\n    if (stat) {\n        lua_pushboolean(L, 1);\n        return 1;\n    } else {\n        lua_pushnil(L);\n        let message, errno;\n        if (e) {\n            message = e.message;\n            errno = -e.errno;\n        } else {\n            message = \"Success\"; /* what strerror(0) returns */\n            errno = 0;\n        }\n        if (fname)\n            lua_pushfstring(L, to_luastring(\"%s: %s\"), fname, to_luastring(message));\n        else\n            lua_pushstring(L, to_luastring(message));\n        lua_pushinteger(L, errno);\n        return 3;\n    }\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_execresult = function(L, e) {\n    let what, stat;\n    if (e === null) {\n        lua_pushboolean(L, 1);\n        lua_pushliteral(L, \"exit\");\n        lua_pushinteger(L, 0);\n        return 3;\n    } else if (e.status) {\n        what = \"exit\";\n        stat = e.status;\n    } else if (e.signal) {\n        what = \"signal\";\n        stat = e.signal;\n    } else {\n        /* XXX: node seems to have e.errno as a string instead of a number */\n        return luaL_fileresult(L, 0, null, e);\n    }\n    lua_pushnil(L);\n    lua_pushliteral(L, what);\n    lua_pushinteger(L, stat);\n    return 3;\n};\n\nconst luaL_getmetatable = function(L, n) {\n    return lua_getfield(L, LUA_REGISTRYINDEX, n);\n};\n\nconst luaL_newmetatable = function(L, tname) {\n    if (luaL_getmetatable(L, tname) !== LUA_TNIL)  /* name already in use? */\n        return 0;  /* leave previous value on top, but return 0 */\n    lua_pop(L, 1);\n    lua_createtable(L, 0, 2);  /* create metatable */\n    lua_pushstring(L, tname);\n    lua_setfield(L, -2, __name);  /* metatable.__name = tname */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, LUA_REGISTRYINDEX, tname);  /* registry.name = metatable */\n    return 1;\n\n};\n\nconst luaL_setmetatable = function(L, tname) {\n    luaL_getmetatable(L, tname);\n    lua_setmetatable(L, -2);\n};\n\nconst luaL_testudata = function(L, ud, tname) {\n    let p = lua_touserdata(L, ud);\n    if (p !== null) {  /* value is a userdata? */\n        if (lua_getmetatable(L, ud)) {  /* does it have a metatable? */\n            luaL_getmetatable(L, tname);  /* get correct metatable */\n            if (!lua_rawequal(L, -1, -2))  /* not the same? */\n                p = null;  /* value is a userdata with wrong metatable */\n            lua_pop(L, 2);  /* remove both metatables */\n            return p;\n        }\n    }\n    return null;  /* value is not a userdata with a metatable */\n};\n\nconst luaL_checkudata = function(L, ud, tname) {\n    let p = luaL_testudata(L, ud, tname);\n    if (p === null) typeerror(L, ud, tname);\n    return p;\n};\n\nconst luaL_checkoption = function(L, arg, def, lst) {\n    let name = def !== null ? luaL_optstring(L, arg, def) : luaL_checkstring(L, arg);\n    for (let i = 0; lst[i]; i++)\n        if (luastring_eq(lst[i], name))\n            return i;\n    return luaL_argerror(L, arg, lua_pushfstring(L, to_luastring(\"invalid option '%s'\"), name));\n};\n\nconst tag_error = function(L, arg, tag) {\n    typeerror(L, arg, lua_typename(L, tag));\n};\n\nconst luaL_newstate = function() {\n    let L = lua_newstate();\n    if (L) lua_atpanic(L, panic);\n    return L;\n};\n\n\nconst luaL_typename = function(L, i) {\n    return lua_typename(L, lua_type(L, i));\n};\n\nconst luaL_argcheck = function(L, cond, arg, extramsg) {\n    if (!cond) luaL_argerror(L, arg, extramsg);\n};\n\nconst luaL_checkany = function(L, arg) {\n    if (lua_type(L, arg) === LUA_TNONE)\n        luaL_argerror(L, arg, to_luastring(\"value expected\", true));\n};\n\nconst luaL_checktype = function(L, arg, t) {\n    if (lua_type(L, arg) !== t)\n        tag_error(L, arg, t);\n};\n\nconst luaL_checklstring = function(L, arg) {\n    let s = lua_tolstring(L, arg);\n    if (s === null || s === undefined) tag_error(L, arg, LUA_TSTRING);\n    return s;\n};\n\nconst luaL_checkstring = luaL_checklstring;\n\nconst luaL_optlstring = function(L, arg, def) {\n    if (lua_type(L, arg) <= 0) {\n        return def === null ? null : from_userstring(def);\n    } else return luaL_checklstring(L, arg);\n};\n\nconst luaL_optstring = luaL_optlstring;\n\nconst interror = function(L, arg) {\n    if (lua_isnumber(L, arg))\n        luaL_argerror(L, arg, to_luastring(\"number has no integer representation\", true));\n    else\n        tag_error(L, arg, LUA_TNUMBER);\n};\n\nconst luaL_checknumber = function(L, arg) {\n    let d = lua_tonumberx(L, arg);\n    if (d === false)\n        tag_error(L, arg, LUA_TNUMBER);\n    return d;\n};\n\nconst luaL_optnumber = function(L, arg, def) {\n    return luaL_opt(L, luaL_checknumber, arg, def);\n};\n\nconst luaL_checkinteger = function(L, arg) {\n    let d = lua_tointegerx(L, arg);\n    if (d === false)\n        interror(L, arg);\n    return d;\n};\n\nconst luaL_optinteger = function(L, arg, def) {\n    return luaL_opt(L, luaL_checkinteger, arg, def);\n};\n\nconst luaL_prepbuffsize = function(B, sz) {\n    let newend = B.n + sz;\n    if (B.b.length < newend) {\n        let newsize = Math.max(B.b.length * 2, newend);  /* double buffer size */\n        let newbuff = new Uint8Array(newsize);  /* create larger buffer */\n        newbuff.set(B.b);  /* copy original content */\n        B.b = newbuff;\n    }\n    return B.b.subarray(B.n, newend);\n};\n\nconst luaL_buffinit = function(L, B) {\n    B.L = L;\n    B.b = empty;\n};\n\nconst luaL_buffinitsize = function(L, B, sz) {\n    luaL_buffinit(L, B);\n    return luaL_prepbuffsize(B, sz);\n};\n\nconst luaL_prepbuffer = function(B) {\n    return luaL_prepbuffsize(B, LUAL_BUFFERSIZE);\n};\n\nconst luaL_addlstring = function(B, s, l) {\n    if (l > 0) {\n        s = from_userstring(s);\n        let b = luaL_prepbuffsize(B, l);\n        b.set(s.subarray(0, l));\n        luaL_addsize(B, l);\n    }\n};\n\nconst luaL_addstring = function(B, s) {\n    s = from_userstring(s);\n    luaL_addlstring(B, s, s.length);\n};\n\nconst luaL_pushresult = function(B) {\n    lua_pushlstring(B.L, B.b, B.n);\n    /* delete old buffer */\n    B.n = 0;\n    B.b = empty;\n};\n\nconst luaL_addchar = function(B, c) {\n    luaL_prepbuffsize(B, 1);\n    B.b[B.n++] = c;\n};\n\nconst luaL_addsize = function(B, s) {\n    B.n += s;\n};\n\nconst luaL_pushresultsize = function(B, sz) {\n    luaL_addsize(B, sz);\n    luaL_pushresult(B);\n};\n\nconst luaL_addvalue = function(B) {\n    let L = B.L;\n    let s = lua_tostring(L, -1);\n    luaL_addlstring(B, s, s.length);\n    lua_pop(L, 1);  /* remove value */\n};\n\nconst luaL_opt = function(L, f, n, d) {\n    return lua_type(L, n) <= 0 ? d : f(L, n);\n};\n\nconst getS = function(L, ud) {\n    let s = ud.string;\n    ud.string = null;\n    return s;\n};\n\nconst luaL_loadbufferx = function(L, buff, size, name, mode) {\n    return lua_load(L, getS, {string: buff}, name, mode);\n};\n\nconst luaL_loadbuffer = function(L, s, sz, n) {\n    return luaL_loadbufferx(L, s, sz, n, null);\n};\n\nconst luaL_loadstring = function(L, s) {\n    return luaL_loadbuffer(L, s, s.length, s);\n};\n\nconst luaL_dostring = function(L, s) {\n    return (luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst luaL_getmetafield = function(L, obj, event) {\n    if (!lua_getmetatable(L, obj))  /* no metatable? */\n        return LUA_TNIL;\n    else {\n        lua_pushstring(L, event);\n        let tt = lua_rawget(L, -2);\n        if (tt === LUA_TNIL)  /* is metafield nil? */\n            lua_pop(L, 2);  /* remove metatable and metafield */\n        else\n            lua_remove(L, -2);  /* remove only metatable */\n        return tt;  /* return metafield type */\n    }\n};\n\nconst luaL_callmeta = function(L, obj, event) {\n    obj = lua_absindex(L, obj);\n    if (luaL_getmetafield(L, obj, event) === LUA_TNIL)\n        return false;\n\n    lua_pushvalue(L, obj);\n    lua_call(L, 1, 1);\n\n    return true;\n};\n\nconst luaL_len = function(L, idx) {\n    lua_len(L, idx);\n    let l = lua_tointegerx(L, -1);\n    if (l === false)\n        luaL_error(L, to_luastring(\"object length is not an integer\", true));\n    lua_pop(L, 1);  /* remove object */\n    return l;\n};\n\nconst p_I = to_luastring(\"%I\");\nconst p_f = to_luastring(\"%f\");\nconst luaL_tolstring = function(L, idx) {\n    if (luaL_callmeta(L, idx, __tostring)) {\n        if (!lua_isstring(L, -1))\n            luaL_error(L, to_luastring(\"'__tostring' must return a string\"));\n    } else {\n        let t = lua_type(L, idx);\n        switch(t) {\n            case LUA_TNUMBER: {\n                if (lua_isinteger(L, idx))\n                    lua_pushfstring(L, p_I, lua_tointeger(L, idx));\n                else\n                    lua_pushfstring(L, p_f, lua_tonumber(L, idx));\n                break;\n            }\n            case LUA_TSTRING:\n                lua_pushvalue(L, idx);\n                break;\n            case LUA_TBOOLEAN:\n                lua_pushliteral(L, (lua_toboolean(L, idx) ? \"true\" : \"false\"));\n                break;\n            case LUA_TNIL:\n                lua_pushliteral(L, \"nil\");\n                break;\n            default: {\n                let tt = luaL_getmetafield(L, idx, __name);\n                let kind = tt === LUA_TSTRING ? lua_tostring(L, -1) : luaL_typename(L, idx);\n                lua_pushfstring(L, to_luastring(\"%s: %p\"), kind, lua_topointer(L, idx));\n                if (tt !== LUA_TNIL)\n                    lua_remove(L, -2);\n                break;\n            }\n        }\n    }\n\n    return lua_tolstring(L, -1);\n};\n\n/*\n** Stripped-down 'require': After checking \"loaded\" table, calls 'openf'\n** to open a module, registers the result in 'package.loaded' table and,\n** if 'glb' is true, also registers the result in the global table.\n** Leaves resulting module on the top.\n*/\nconst luaL_requiref = function(L, modname, openf, glb) {\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, -1, modname); /* LOADED[modname] */\n    if (!lua_toboolean(L, -1)) {  /* package not already loaded? */\n        lua_pop(L, 1);  /* remove field */\n        lua_pushcfunction(L, openf);\n        lua_pushstring(L, modname);  /* argument to open function */\n        lua_call(L, 1, 1);  /* call 'openf' to open module */\n        lua_pushvalue(L, -1);  /* make copy of module (call result) */\n        lua_setfield(L, -3, modname);  /* LOADED[modname] = module */\n    }\n    lua_remove(L, -2);  /* remove LOADED table */\n    if (glb) {\n        lua_pushvalue(L, -1);  /* copy of module */\n        lua_setglobal(L, modname);  /* _G[modname] = module */\n    }\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i < l; i++) {\n        for (let j = 0; j < sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\nconst luaL_gsub = function(L, s, p, r) {\n    let wild;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while ((wild = find_subarray(s, p)) >= 0) {\n        luaL_addlstring(b, s, wild);  /* push prefix */\n        luaL_addstring(b, r);  /* push replacement in place of pattern */\n        s = s.subarray(wild + p.length);  /* continue after 'p' */\n    }\n    luaL_addstring(b, s);  /* push last suffix */\n    luaL_pushresult(b);\n    return lua_tostring(L, -1);\n};\n\n/*\n** ensure that stack[idx][fname] has a table and push that table\n** into the stack\n*/\nconst luaL_getsubtable = function(L, idx, fname) {\n    if (lua_getfield(L, idx, fname) === LUA_TTABLE)\n        return true;  /* table already there */\n    else {\n        lua_pop(L, 1);  /* remove previous result */\n        idx = lua_absindex(L, idx);\n        lua_newtable(L);\n        lua_pushvalue(L, -1);  /* copy to be left at top */\n        lua_setfield(L, idx, fname);  /* assign new table to field */\n        return false;  /* false, because did not find table there */\n    }\n};\n\n/*\n** set functions from list 'l' into table at top - 'nup'; each\n** function gets the 'nup' elements at the top as upvalues.\n** Returns with only the table at the stack.\n*/\nconst luaL_setfuncs = function(L, l, nup) {\n    luaL_checkstack(L, nup, to_luastring(\"too many upvalues\", true));\n    for (let lib in l) {  /* fill the table with given functions */\n        for (let i = 0; i < nup; i++)  /* copy upvalues to the top */\n            lua_pushvalue(L, -nup);\n        lua_pushcclosure(L, l[lib], nup);  /* closure with those upvalues */\n        lua_setfield(L, -(nup + 2), to_luastring(lib));\n    }\n    lua_pop(L, nup);  /* remove upvalues */\n};\n\n/*\n** Ensures the stack has at least 'space' extra slots, raising an error\n** if it cannot fulfill the request. (The error handling needs a few\n** extra slots to format the error message. In case of an error without\n** this extra space, Lua will generate the same 'stack overflow' error,\n** but without 'msg'.)\n*/\nconst luaL_checkstack = function(L, space, msg) {\n    if (!lua_checkstack(L, space)) {\n        if (msg)\n            luaL_error(L, to_luastring(\"stack overflow (%s)\"), msg);\n        else\n            luaL_error(L, to_luastring('stack overflow', true));\n    }\n};\n\nconst luaL_newlibtable = function(L) {\n    lua_createtable(L);\n};\n\nconst luaL_newlib = function(L, l) {\n    lua_createtable(L);\n    luaL_setfuncs(L, l, 0);\n};\n\n/* predefined references */\nconst LUA_NOREF  = -2;\nconst LUA_REFNIL = -1;\n\nconst luaL_ref = function(L, t) {\n    let ref;\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* remove from stack */\n        return LUA_REFNIL;  /* 'nil' has a unique fixed reference */\n    }\n    t = lua_absindex(L, t);\n    lua_rawgeti(L, t, 0);  /* get first free element */\n    ref = lua_tointeger(L, -1);  /* ref = t[freelist] */\n    lua_pop(L, 1);  /* remove it from stack */\n    if (ref !== 0) {  /* any free element? */\n        lua_rawgeti(L, t, ref);  /* remove it from list */\n        lua_rawseti(L, t, 0);  /* (t[freelist] = t[ref]) */\n    }\n    else  /* no free elements */\n        ref = lua_rawlen(L, t) + 1;  /* get a new reference */\n    lua_rawseti(L, t, ref);\n    return ref;\n};\n\n\nconst luaL_unref = function(L, t, ref) {\n    if (ref >= 0) {\n        t = lua_absindex(L, t);\n        lua_rawgeti(L, t, 0);\n        lua_rawseti(L, t, ref);  /* t[ref] = t[freelist] */\n        lua_pushinteger(L, ref);\n        lua_rawseti(L, t, 0);  /* t[freelist] = ref */\n    }\n};\n\n\nconst errfile = function(L, what, fnameindex, error) {\n    let serr = error.message;\n    let filename = lua_tostring(L, fnameindex).subarray(1);\n    lua_pushfstring(L, to_luastring(\"cannot %s %s: %s\"), to_luastring(what), filename, to_luastring(serr));\n    lua_remove(L, fnameindex);\n    return LUA_ERRFILE;\n};\n\nlet getc;\n\nconst utf8_bom = [0XEF, 0XBB, 0XBF];  /* UTF-8 BOM mark */\nconst skipBOM = function(lf) {\n    lf.n = 0;\n    let c;\n    let p = 0;\n    do {\n        c = getc(lf);\n        if (c === null || c !== utf8_bom[p]) return c;\n        p++;\n        lf.buff[lf.n++] = c;  /* to be read by the parser */\n    } while (p < utf8_bom.length);\n    lf.n = 0;  /* prefix matched; discard it */\n    return getc(lf);  /* return next character */\n};\n\n/*\n** reads the first character of file 'f' and skips an optional BOM mark\n** in its beginning plus its first line if it starts with '#'. Returns\n** true if it skipped the first line.  In any case, '*cp' has the\n** first \"valid\" character of the file (after the optional BOM and\n** a first-line comment).\n*/\nconst skipcomment = function(lf) {\n    let c = skipBOM(lf);\n    if (c === 35 /* '#'.charCodeAt(0) */) {  /* first line is a comment (Unix exec. file)? */\n        do {  /* skip first line */\n            c = getc(lf);\n        } while (c && c !== 10 /* '\\n'.charCodeAt(0) */);\n\n        return {\n            skipped: true,\n            c: getc(lf)  /* skip end-of-line, if present */\n        };\n    } else {\n        return {\n            skipped: false,\n            c: c\n        };\n    }\n};\n\nlet luaL_loadfilex;\n\nif (typeof process === \"undefined\") {\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = new Uint8Array(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n\n        if (lf.f !== null && lf.n > 0) {  /* are there pre-read characters to be read? */\n            let bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n            lf.f = lf.f.subarray(lf.pos);  /* we won't use lf.buff anymore */\n            return lf.buff.subarray(0, bytes);\n        }\n\n        let f = lf.f;\n        lf.f = null;\n        return f;\n    };\n\n    getc = function(lf) {\n        return lf.pos < lf.f.length ? lf.f[lf.pos++] : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            throw new Error(\"Can't read stdin in the browser\");\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            let path = to_uristring(filename);\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", path, false);\n            /*\n            Synchronous xhr in main thread always returns a js string.\n            Some browsers make console noise if you even attempt to set responseType\n            */\n            if (typeof window === \"undefined\") {\n                xhr.responseType = \"arraybuffer\";\n            }\n            xhr.send();\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                if (typeof xhr.response === \"string\") {\n                    lf.f = to_luastring(xhr.response);\n                } else {\n                    lf.f = new Uint8Array(xhr.response);\n                }\n            } else {\n                lf.err = xhr.status;\n                return errfile(L, \"open\", fnameindex, { message: `${xhr.status}: ${xhr.statusText}` });\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n} else {\n    const fs = require('fs');\n\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = Buffer.alloc(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n        let bytes = 0;\n        if (lf.n > 0) {  /* are there pre-read characters to be read? */\n            bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n        } else {  /* read a block from file */\n            try {\n                bytes = fs.readSync(lf.f, lf.buff, 0, lf.buff.length, lf.pos); /* read block */\n            } catch(e) {\n                lf.err = e;\n                bytes = 0;\n            }\n            lf.pos += bytes;\n        }\n        if (bytes > 0)\n            return lf.buff.subarray(0, bytes);\n        else return null;\n    };\n\n    getc = function(lf) {\n        let b = Buffer.alloc(1);\n        let bytes;\n        try {\n            bytes = fs.readSync(lf.f, b, 0, 1, lf.pos);\n        } catch(e) {\n            lf.err = e;\n            return null;\n        }\n        lf.pos += bytes;\n        return bytes > 0 ? b.readUInt8() : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            lua_pushliteral(L, \"=stdin\");\n            lf.f = process.stdin.fd;\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            try {\n                lf.f = fs.openSync(filename, \"r\");\n            } catch (e) {\n                return errfile(L, \"open\", fnameindex, e);\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (filename) try { fs.closeSync(lf.f); } catch(e) {}  /* close file (even in case of errors) */\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n}\n\nconst luaL_loadfile = function(L, filename) {\n    return luaL_loadfilex(L, filename, null);\n};\n\nconst luaL_dofile = function(L, filename) {\n    return (luaL_loadfile(L, filename) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst lua_writestringerror = function() {\n    for (let i=0; i<arguments.length; i++) {\n        let a = arguments[i];\n        if (typeof process === \"undefined\") {\n            /* split along new lines for separate console.error invocations */\n            do {\n                /* regexp uses [\\d\\D] to work around matching new lines\n                   the 's' flag is non-standard */\n                let r = /([^\\n]*)\\n?([\\d\\D]*)/.exec(a);\n                console.error(r[1]);\n                a = r[2];\n            } while (a !== \"\");\n        } else {\n            process.stderr.write(a);\n        }\n    }\n};\n\nconst luaL_checkversion_ = function(L, ver, sz) {\n    let v = lua_version(L);\n    if (sz != LUAL_NUMSIZES)  /* check numeric types */\n        luaL_error(L, to_luastring(\"core and library have incompatible numeric types\"));\n    if (v != lua_version(null))\n        luaL_error(L, to_luastring(\"multiple Lua VMs detected\"));\n    else if (v !== ver)\n        luaL_error(L, to_luastring(\"version mismatch: app. needs %f, Lua core provides %f\"), ver, v);\n};\n\n/* There is no point in providing this function... */\nconst luaL_checkversion = function(L) {\n    luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES);\n};\n\nmodule.exports.LUA_ERRFILE          = LUA_ERRFILE;\nmodule.exports.LUA_FILEHANDLE       = LUA_FILEHANDLE;\nmodule.exports.LUA_LOADED_TABLE     = LUA_LOADED_TABLE;\nmodule.exports.LUA_NOREF            = LUA_NOREF;\nmodule.exports.LUA_PRELOAD_TABLE    = LUA_PRELOAD_TABLE;\nmodule.exports.LUA_REFNIL           = LUA_REFNIL;\nmodule.exports.luaL_Buffer          = luaL_Buffer;\nmodule.exports.luaL_addchar         = luaL_addchar;\nmodule.exports.luaL_addlstring      = luaL_addlstring;\nmodule.exports.luaL_addsize         = luaL_addsize;\nmodule.exports.luaL_addstring       = luaL_addstring;\nmodule.exports.luaL_addvalue        = luaL_addvalue;\nmodule.exports.luaL_argcheck        = luaL_argcheck;\nmodule.exports.luaL_argerror        = luaL_argerror;\nmodule.exports.luaL_buffinit        = luaL_buffinit;\nmodule.exports.luaL_buffinitsize    = luaL_buffinitsize;\nmodule.exports.luaL_callmeta        = luaL_callmeta;\nmodule.exports.luaL_checkany        = luaL_checkany;\nmodule.exports.luaL_checkinteger    = luaL_checkinteger;\nmodule.exports.luaL_checklstring    = luaL_checklstring;\nmodule.exports.luaL_checknumber     = luaL_checknumber;\nmodule.exports.luaL_checkoption     = luaL_checkoption;\nmodule.exports.luaL_checkstack      = luaL_checkstack;\nmodule.exports.luaL_checkstring     = luaL_checkstring;\nmodule.exports.luaL_checktype       = luaL_checktype;\nmodule.exports.luaL_checkudata      = luaL_checkudata;\nmodule.exports.luaL_checkversion    = luaL_checkversion;\nmodule.exports.luaL_checkversion_   = luaL_checkversion_;\nmodule.exports.luaL_dofile          = luaL_dofile;\nmodule.exports.luaL_dostring        = luaL_dostring;\nmodule.exports.luaL_error           = luaL_error;\nmodule.exports.luaL_execresult      = luaL_execresult;\nmodule.exports.luaL_fileresult      = luaL_fileresult;\nmodule.exports.luaL_getmetafield    = luaL_getmetafield;\nmodule.exports.luaL_getmetatable    = luaL_getmetatable;\nmodule.exports.luaL_getsubtable     = luaL_getsubtable;\nmodule.exports.luaL_gsub            = luaL_gsub;\nmodule.exports.luaL_len             = luaL_len;\nmodule.exports.luaL_loadbuffer      = luaL_loadbuffer;\nmodule.exports.luaL_loadbufferx     = luaL_loadbufferx;\nmodule.exports.luaL_loadfile        = luaL_loadfile;\nmodule.exports.luaL_loadfilex       = luaL_loadfilex;\nmodule.exports.luaL_loadstring      = luaL_loadstring;\nmodule.exports.luaL_newlib          = luaL_newlib;\nmodule.exports.luaL_newlibtable     = luaL_newlibtable;\nmodule.exports.luaL_newmetatable    = luaL_newmetatable;\nmodule.exports.luaL_newstate        = luaL_newstate;\nmodule.exports.luaL_opt             = luaL_opt;\nmodule.exports.luaL_optinteger      = luaL_optinteger;\nmodule.exports.luaL_optlstring      = luaL_optlstring;\nmodule.exports.luaL_optnumber       = luaL_optnumber;\nmodule.exports.luaL_optstring       = luaL_optstring;\nmodule.exports.luaL_prepbuffer      = luaL_prepbuffer;\nmodule.exports.luaL_prepbuffsize    = luaL_prepbuffsize;\nmodule.exports.luaL_pushresult      = luaL_pushresult;\nmodule.exports.luaL_pushresultsize  = luaL_pushresultsize;\nmodule.exports.luaL_ref             = luaL_ref;\nmodule.exports.luaL_requiref        = luaL_requiref;\nmodule.exports.luaL_setfuncs        = luaL_setfuncs;\nmodule.exports.luaL_setmetatable    = luaL_setmetatable;\nmodule.exports.luaL_testudata       = luaL_testudata;\nmodule.exports.luaL_tolstring       = luaL_tolstring;\nmodule.exports.luaL_traceback       = luaL_traceback;\nmodule.exports.luaL_typename        = luaL_typename;\nmodule.exports.luaL_unref           = luaL_unref;\nmodule.exports.luaL_where           = luaL_where;\nmodule.exports.lua_writestringerror = lua_writestringerror;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCALL,\n    LUA_HOOKRET,\n    LUA_HOOKTAILCALL,\n    LUA_MASKCALL,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_MINSTACK,\n    LUA_MULTRET,\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TNIL\n    },\n    thread_status: {\n        LUA_ERRMEM,\n        LUA_ERRERR,\n        LUA_ERRRUN,\n        LUA_ERRSYNTAX,\n        LUA_OK,\n        LUA_YIELD\n    },\n    lua_Debug,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst lapi     = require('./lapi.js');\nconst ldebug   = require('./ldebug.js');\nconst lfunc    = require('./lfunc.js');\nconst {\n    api_check,\n    lua_assert,\n    LUAI_MAXCCALLS\n} = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst lstate   = require('./lstate.js');\nconst { luaS_newliteral } = require('./lstring.js');\nconst ltm      = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lundump  = require('./lundump.js');\nconst lvm      = require('./lvm.js');\nconst { MBuffer } = require('./lzio.js');\n\nconst adjust_top = function(L, newtop) {\n    if (L.top < newtop) {\n        while (L.top < newtop)\n            L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n    } else {\n        while (L.top > newtop)\n            delete L.stack[--L.top];\n    }\n};\n\nconst seterrorobj = function(L, errcode, oldtop) {\n    let current_top = L.top;\n\n    /* extend stack so that L.stack[oldtop] is sure to exist */\n    while (L.top < oldtop + 1)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    switch (errcode) {\n        case LUA_ERRMEM: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"not enough memory\"));\n            break;\n        }\n        case LUA_ERRERR: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"error in error handling\"));\n            break;\n        }\n        default: {\n            lobject.setobjs2s(L, oldtop, current_top - 1);\n        }\n    }\n\n    while (L.top > oldtop + 1)\n        delete L.stack[--L.top];\n};\n\nconst ERRORSTACKSIZE = LUAI_MAXSTACK + 200;\n\nconst luaD_reallocstack = function(L, newsize) {\n    lua_assert(newsize <= LUAI_MAXSTACK || newsize == ERRORSTACKSIZE);\n    lua_assert(L.stack_last == L.stack.length - lstate.EXTRA_STACK);\n    L.stack.length = newsize;\n    L.stack_last = newsize - lstate.EXTRA_STACK;\n};\n\nconst luaD_growstack = function(L, n) {\n    let size = L.stack.length;\n    if (size > LUAI_MAXSTACK)\n        luaD_throw(L, LUA_ERRERR);\n    else {\n        let needed = L.top + n + lstate.EXTRA_STACK;\n        let newsize = 2 * size;\n        if (newsize > LUAI_MAXSTACK) newsize = LUAI_MAXSTACK;\n        if (newsize < needed) newsize = needed;\n        if (newsize > LUAI_MAXSTACK) {  /* stack overflow? */\n            luaD_reallocstack(L, ERRORSTACKSIZE);\n            ldebug.luaG_runerror(L, to_luastring(\"stack overflow\", true));\n        }\n        else\n            luaD_reallocstack(L, newsize);\n    }\n};\n\nconst luaD_checkstack = function(L, n) {\n    if (L.stack_last - L.top <= n)\n        luaD_growstack(L, n);\n};\n\nconst stackinuse = function(L) {\n    let lim = L.top;\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {\n        if (lim < ci.top) lim = ci.top;\n    }\n    lua_assert(lim <= L.stack_last);\n    return lim + 1; /* part of stack in use */\n};\n\nconst luaD_shrinkstack = function(L) {\n    let inuse = stackinuse(L);\n    let goodsize = inuse + Math.floor(inuse / 8) + 2*lstate.EXTRA_STACK;\n    if (goodsize > LUAI_MAXSTACK)\n        goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n    if (L.stack.length > LUAI_MAXSTACK)  /* had been handling stack overflow? */\n        lstate.luaE_freeCI(L);  /* free all CIs (list grew because of an error) */\n    /* if thread is currently not handling a stack overflow and its\n     good size is smaller than current size, shrink its stack */\n    if (inuse <= (LUAI_MAXSTACK - lstate.EXTRA_STACK) && goodsize < L.stack.length)\n        luaD_reallocstack(L, goodsize);\n};\n\nconst luaD_inctop = function(L) {\n    luaD_checkstack(L, 1);\n    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Prepares a function call: checks the stack, creates a new CallInfo\n** entry, fills in the relevant information, calls hook if needed.\n** If function is a JS function, does the call, too. (Otherwise, leave\n** the execution ('luaV_execute') to the caller, to allow stackless\n** calls.) Returns true iff function has been executed (JS function).\n*/\nconst luaD_precall = function(L, off, nresults) {\n    let func = L.stack[off];\n\n    switch(func.type) {\n        case LUA_TCCL:\n        case LUA_TLCF: {\n            let f = func.type === LUA_TCCL ? func.value.f : func.value;\n\n            luaD_checkstack(L, LUA_MINSTACK);\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.top = L.top + LUA_MINSTACK;\n            lua_assert(ci.top <= L.stack_last);\n            ci.callstatus = 0;\n            if (L.hookmask & LUA_MASKCALL)\n                luaD_hook(L, LUA_HOOKCALL, -1);\n            let n = f(L); /* do the actual call */\n            if (typeof n !== \"number\" || n < 0 || (n|0) !== n)\n                throw Error(\"invalid return value from JS function (expected integer)\");\n            lapi.api_checknelems(L, n);\n\n            luaD_poscall(L, ci, L.top - n, n);\n\n            return true;\n        }\n        case LUA_TLCL: {\n            let base;\n            let p = func.value.p;\n            let n = L.top - off - 1;\n            let fsize = p.maxstacksize;\n            luaD_checkstack(L, fsize);\n            if (p.is_vararg) {\n                base = adjust_varargs(L, p, n);\n            } else {\n                for (; n < p.numparams; n++)\n                    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null); // complete missing arguments\n                base = off + 1;\n            }\n\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.l_base = base;\n            ci.top = base + fsize;\n            adjust_top(L, ci.top);\n            ci.l_code = p.code;\n            ci.l_savedpc = 0;\n            ci.callstatus = lstate.CIST_LUA;\n            if (L.hookmask & LUA_MASKCALL)\n                callhook(L, ci);\n            return false;\n        }\n        default:\n            luaD_checkstack(L, 1);\n            tryfuncTM(L, off, func);\n            return luaD_precall(L, off, nresults);\n    }\n};\n\nconst luaD_poscall = function(L, ci, firstResult, nres) {\n    let wanted = ci.nresults;\n\n    if (L.hookmask & (LUA_MASKRET | LUA_MASKLINE)) {\n        if (L.hookmask & LUA_MASKRET)\n            luaD_hook(L, LUA_HOOKRET, -1);\n        L.oldpc = ci.previous.l_savedpc;  /* 'oldpc' for caller function */\n    }\n\n    let res = ci.funcOff;\n    L.ci = ci.previous;\n    L.ci.next = null;\n    return moveresults(L, firstResult, res, nres, wanted);\n};\n\nconst moveresults = function(L, firstResult, res, nres, wanted) {\n    switch (wanted) {\n        case 0:\n            break;\n        case 1: {\n            if (nres === 0)\n                L.stack[res].setnilvalue();\n            else {\n                lobject.setobjs2s(L, res, firstResult); /* move it to proper place */\n            }\n            break;\n        }\n        case LUA_MULTRET: {\n            for (let i = 0; i < nres; i++)\n                lobject.setobjs2s(L, res + i, firstResult + i);\n            for (let i=L.top; i>=(res + nres); i--)\n                delete L.stack[i];\n            L.top = res + nres;\n            return false;\n        }\n        default: {\n            let i;\n            if (wanted <= nres) {\n                for (i = 0; i < wanted; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n            } else {\n                for (i = 0; i < nres; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n                for (; i < wanted; i++) {\n                    if (res+i >= L.top)\n                        L.stack[res + i] = new lobject.TValue(LUA_TNIL, null);\n                    else\n                        L.stack[res + i].setnilvalue();\n                }\n            }\n            break;\n        }\n    }\n    let newtop = res + wanted; /* top points after the last result */\n    for (let i=L.top; i>=newtop; i--)\n        delete L.stack[i];\n    L.top = newtop;\n    return true;\n};\n\n/*\n** Call a hook for the given event. Make sure there is a hook to be\n** called. (Both 'L->hook' and 'L->hookmask', which triggers this\n** function, can be changed asynchronously by signals.)\n*/\nconst luaD_hook = function(L, event, line) {\n    let hook = L.hook;\n    if (hook && L.allowhook) {  /* make sure there is a hook */\n        let ci = L.ci;\n        let top = L.top;\n        let ci_top = ci.top;\n        let ar = new lua_Debug();\n        ar.event = event;\n        ar.currentline = line;\n        ar.i_ci = ci;\n        luaD_checkstack(L, LUA_MINSTACK);  /* ensure minimum stack size */\n        ci.top = L.top + LUA_MINSTACK;\n        lua_assert(ci.top <= L.stack_last);\n        L.allowhook = 0;  /* cannot call hooks inside a hook */\n        ci.callstatus |= lstate.CIST_HOOKED;\n        hook(L, ar);\n        lua_assert(!L.allowhook);\n        L.allowhook = 1;\n        ci.top = ci_top;\n        adjust_top(L, top);\n        ci.callstatus &= ~lstate.CIST_HOOKED;\n    }\n};\n\nconst callhook = function(L, ci) {\n    let hook = LUA_HOOKCALL;\n    ci.l_savedpc++;  /* hooks assume 'pc' is already incremented */\n    if ((ci.previous.callstatus & lstate.CIST_LUA) &&\n      ci.previous.l_code[ci.previous.l_savedpc - 1].opcode == lopcodes.OpCodesI.OP_TAILCALL) {\n        ci.callstatus |= lstate.CIST_TAIL;\n        hook = LUA_HOOKTAILCALL;\n    }\n    luaD_hook(L, hook, -1);\n    ci.l_savedpc--;  /* correct 'pc' */\n};\n\nconst adjust_varargs = function(L, p, actual) {\n    let nfixargs = p.numparams;\n    /* move fixed parameters to final position */\n    let fixed = L.top - actual; /* first fixed argument */\n    let base = L.top; /* final position of first argument */\n\n    let i;\n    for (i = 0; i < nfixargs && i < actual; i++) {\n        lobject.pushobj2s(L, L.stack[fixed + i]);\n        L.stack[fixed + i].setnilvalue();\n    }\n\n    for (; i < nfixargs; i++)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    return base;\n};\n\nconst tryfuncTM = function(L, off, func) {\n    let tm = ltm.luaT_gettmbyobj(L, func, ltm.TMS.TM_CALL);\n    if (!tm.ttisfunction(tm))\n        ldebug.luaG_typeerror(L, func, to_luastring(\"call\", true));\n    /* Open a hole inside the stack at 'func' */\n    lobject.pushobj2s(L, L.stack[L.top-1]); /* push top of stack again */\n    for (let p = L.top-2; p > off; p--)\n        lobject.setobjs2s(L, p, p-1); /* move other items up one */\n    lobject.setobj2s(L, off, tm); /* tag method is the new function to be called */\n};\n\n/*\n** Check appropriate error for stack overflow (\"regular\" overflow or\n** overflow while handling stack overflow). If 'nCalls' is larger than\n** LUAI_MAXCCALLS (which means it is handling a \"regular\" overflow) but\n** smaller than 9/8 of LUAI_MAXCCALLS, does not report an error (to\n** allow overflow handling to work)\n*/\nconst stackerror = function(L) {\n    if (L.nCcalls === LUAI_MAXCCALLS)\n        ldebug.luaG_runerror(L, to_luastring(\"JS stack overflow\", true));\n    else if (L.nCcalls >= LUAI_MAXCCALLS + (LUAI_MAXCCALLS >> 3))\n        luaD_throw(L, LUA_ERRERR);  /* error while handing stack error */\n};\n\n/*\n** Call a function (JS or Lua). The function to be called is at func.\n** The arguments are on the stack, right after the function.\n** When returns, all the results are on the stack, starting at the original\n** function position.\n*/\nconst luaD_call = function(L, off, nResults) {\n    if (++L.nCcalls >= LUAI_MAXCCALLS)\n        stackerror(L);\n    if (!luaD_precall(L, off, nResults))\n        lvm.luaV_execute(L);\n    L.nCcalls--;\n};\n\nconst luaD_throw = function(L, errcode) {\n    if (L.errorJmp) {  /* thread has an error handler? */\n        L.errorJmp.status = errcode;  /* set status */\n        throw L.errorJmp;\n    } else {  /* thread has no error handler */\n        let g = L.l_G;\n        L.status = errcode;  /* mark it as dead */\n        if (g.mainthread.errorJmp) {  /* main thread has a handler? */\n            g.mainthread.stack[g.mainthread.top++] = L.stack[L.top - 1];  /* copy error obj. */\n            luaD_throw(g.mainthread, errcode);  /* re-throw in main thread */\n        } else {  /* no handler at all; abort */\n            let panic = g.panic;\n            if (panic) {  /* panic function? */\n                seterrorobj(L, errcode, L.top);  /* assume EXTRA_STACK */\n                if (L.ci.top < L.top)\n                    L.ci.top = L.top;  /* pushing msg. can break this invariant */\n                panic(L);  /* call panic function (last chance to jump out) */\n            }\n            throw new Error(`Aborted ${errcode}`);\n        }\n    }\n};\n\nconst luaD_rawrunprotected = function(L, f, ud) {\n    let oldnCcalls = L.nCcalls;\n    let lj = {\n        status: LUA_OK,\n        previous: L.errorJmp /* chain new error handler */\n    };\n    L.errorJmp = lj;\n\n    try {\n        f(L, ud);\n    } catch (e) {\n        if (lj.status === LUA_OK) {\n            /* error was not thrown via luaD_throw, i.e. it is a JS error */\n            /* run user error handler (if it exists) */\n            let atnativeerror = L.l_G.atnativeerror;\n            if (atnativeerror) {\n                try {\n                    lj.status = LUA_OK;\n\n                    lapi.lua_pushcfunction(L, atnativeerror);\n                    lapi.lua_pushlightuserdata(L, e);\n                    luaD_callnoyield(L, L.top - 2, 1);\n\n                    /* Now run the message handler (if it exists) */\n                    /* copy of luaG_errormsg without the throw */\n                    if (L.errfunc !== 0) {  /* is there an error handling function? */\n                        let errfunc = L.errfunc;\n                        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n                        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n                        luaD_callnoyield(L, L.top - 2, 1);\n                    }\n\n                    lj.status = LUA_ERRRUN;\n                } catch(e2) {\n                    if (lj.status === LUA_OK) {\n                        /* also failed */\n                        lj.status = -1;\n                    }\n                }\n            } else {\n                lj.status = -1;\n            }\n        }\n    }\n\n    L.errorJmp = lj.previous;\n    L.nCcalls = oldnCcalls;\n\n    return lj.status;\n\n};\n\n/*\n** Completes the execution of an interrupted C function, calling its\n** continuation function.\n*/\nconst finishCcall = function(L, status) {\n    let ci = L.ci;\n\n    /* must have a continuation and must be able to call it */\n    lua_assert(ci.c_k !== null && L.nny === 0);\n    /* error status can only happen in a protected call */\n    lua_assert(ci.callstatus & lstate.CIST_YPCALL || status === LUA_YIELD);\n\n    if (ci.callstatus & lstate.CIST_YPCALL) {  /* was inside a pcall? */\n        ci.callstatus &= ~lstate.CIST_YPCALL;  /* continuation is also inside it */\n        L.errfunc = ci.c_old_errfunc;  /* with the same error function */\n    }\n\n    /* finish 'lua_callk'/'lua_pcall'; CIST_YPCALL and 'errfunc' already\n       handled */\n    if (ci.nresults === LUA_MULTRET && L.ci.top < L.top) L.ci.top = L.top;\n    let c_k = ci.c_k; /* don't want to call as method */\n    let n = c_k(L, status, ci.c_ctx);  /* call continuation function */\n    lapi.api_checknelems(L, n);\n    luaD_poscall(L, ci, L.top - n, n);  /* finish 'luaD_precall' */\n};\n\n/*\n** Executes \"full continuation\" (everything in the stack) of a\n** previously interrupted coroutine until the stack is empty (or another\n** interruption long-jumps out of the loop). If the coroutine is\n** recovering from an error, 'ud' points to the error status, which must\n** be passed to the first continuation function (otherwise the default\n** status is LUA_YIELD).\n*/\nconst unroll = function(L, ud) {\n    if (ud !== null)  /* error status? */\n        finishCcall(L, ud);  /* finish 'lua_pcallk' callee */\n\n    while (L.ci !== L.base_ci) {  /* something in the stack */\n        if (!(L.ci.callstatus & lstate.CIST_LUA))  /* C function? */\n            finishCcall(L, LUA_YIELD);  /* complete its execution */\n        else {  /* Lua function */\n            lvm.luaV_finishOp(L);  /* finish interrupted instruction */\n            lvm.luaV_execute(L);  /* execute down to higher C 'boundary' */\n        }\n    }\n};\n\n/*\n** Try to find a suspended protected call (a \"recover point\") for the\n** given thread.\n*/\nconst findpcall = function(L) {\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {  /* search for a pcall */\n        if (ci.callstatus & lstate.CIST_YPCALL)\n            return ci;\n    }\n\n    return null;  /* no pending pcall */\n};\n\n/*\n** Recovers from an error in a coroutine. Finds a recover point (if\n** there is one) and completes the execution of the interrupted\n** 'luaD_pcall'. If there is no recover point, returns zero.\n*/\nconst recover = function(L, status) {\n    let ci = findpcall(L);\n    if (ci === null) return 0;  /* no recovery point */\n    /* \"finish\" luaD_pcall */\n    let oldtop = ci.extra;\n    lfunc.luaF_close(L, oldtop);\n    seterrorobj(L, status, oldtop);\n    L.ci = ci;\n    L.allowhook = ci.callstatus & lstate.CIST_OAH;  /* restore original 'allowhook' */\n    L.nny = 0;  /* should be zero to be yieldable */\n    luaD_shrinkstack(L);\n    L.errfunc = ci.c_old_errfunc;\n    return 1;  /* continue running the coroutine */\n};\n\n/*\n** Signal an error in the call to 'lua_resume', not in the execution\n** of the coroutine itself. (Such errors should not be handled by any\n** coroutine error handler and should not kill the coroutine.)\n*/\nconst resume_error = function(L, msg, narg) {\n    let ts = luaS_newliteral(L, msg);\n    if (narg === 0) {\n        lobject.pushsvalue2s(L, ts);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    } else {\n        /* remove args from the stack */\n        for (let i=1; i<narg; i++)\n            delete L.stack[--L.top];\n        lobject.setsvalue2s(L, L.top-1, ts);  /* push error message */\n    }\n    return LUA_ERRRUN;\n};\n\n/*\n** Do the work for 'lua_resume' in protected mode. Most of the work\n** depends on the status of the coroutine: initial state, suspended\n** inside a hook, or regularly suspended (optionally with a continuation\n** function), plus erroneous cases: non-suspended coroutine or dead\n** coroutine.\n*/\nconst resume = function(L, n) {\n    let firstArg = L.top - n;  /* first argument */\n    let ci = L.ci;\n    if (L.status === LUA_OK) {  /* starting a coroutine? */\n        if (!luaD_precall(L, firstArg - 1, LUA_MULTRET))  /* Lua function? */\n            lvm.luaV_execute(L);  /* call it */\n    } else {  /* resuming from previous yield */\n        lua_assert(L.status === LUA_YIELD);\n        L.status = LUA_OK;  /* mark that it is running (again) */\n        ci.funcOff = ci.extra;\n        ci.func = L.stack[ci.funcOff];\n\n        if (ci.callstatus & lstate.CIST_LUA)  /* yielded inside a hook? */\n            lvm.luaV_execute(L);  /* just continue running Lua code */\n        else {  /* 'common' yield */\n            if (ci.c_k !== null) {  /* does it have a continuation function? */\n                n = ci.c_k(L, LUA_YIELD, ci.c_ctx); /* call continuation */\n                lapi.api_checknelems(L, n);\n                firstArg = L.top - n;  /* yield results come from continuation */\n            }\n\n            luaD_poscall(L, ci, firstArg, n);  /* finish 'luaD_precall' */\n        }\n\n        unroll(L, null);  /* run continuation */\n    }\n};\n\nconst lua_resume = function(L, from, nargs) {\n    let oldnny = L.nny;  /* save \"number of non-yieldable\" calls */\n\n    if (L.status === LUA_OK) {  /* may be starting a coroutine */\n        if (L.ci !== L.base_ci)  /* not in base level? */\n            return resume_error(L, \"cannot resume non-suspended coroutine\", nargs);\n    } else if (L.status !== LUA_YIELD)\n        return resume_error(L, \"cannot resume dead coroutine\", nargs);\n\n    L.nCcalls = from ? from.nCcalls + 1 : 1;\n    if (L.nCcalls >= LUAI_MAXCCALLS)\n        return resume_error(L, \"JS stack overflow\", nargs);\n\n    L.nny = 0;  /* allow yields */\n\n    lapi.api_checknelems(L, L.status === LUA_OK ? nargs + 1: nargs);\n\n    let status = luaD_rawrunprotected(L, resume, nargs);\n    if (status === -1)  /* error calling 'lua_resume'? */\n        status = LUA_ERRRUN;\n    else {  /* continue running after recoverable errors */\n        while (status > LUA_YIELD && recover(L, status)) {\n            /* unroll continuation */\n            status = luaD_rawrunprotected(L, unroll, status);\n        }\n\n        if (status > LUA_YIELD) {  /* unrecoverable error? */\n            L.status = status;  /* mark thread as 'dead' */\n            seterrorobj(L, status, L.top);  /* push error message */\n            L.ci.top = L.top;\n        } else\n            lua_assert(status === L.status);  /* normal end or yield */\n    }\n\n    L.nny = oldnny;  /* restore 'nny' */\n    L.nCcalls--;\n    lua_assert(L.nCcalls === (from ? from.nCcalls : 0));\n    return status;\n};\n\nconst lua_isyieldable = function(L) {\n    return L.nny === 0;\n};\n\nconst lua_yieldk = function(L, nresults, ctx, k) {\n    let ci = L.ci;\n    lapi.api_checknelems(L, nresults);\n\n    if (L.nny > 0) {\n        if (L !== L.l_G.mainthread)\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield across a JS-call boundary\", true));\n        else\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield from outside a coroutine\", true));\n    }\n\n    L.status = LUA_YIELD;\n    ci.extra = ci.funcOff;  /* save current 'func' */\n    if (ci.callstatus & lstate.CIST_LUA)  /* inside a hook? */\n        api_check(L, k === null, \"hooks cannot continue after yielding\");\n    else {\n        ci.c_k = k;\n        if (k !== null)  /* is there a continuation? */\n            ci.c_ctx = ctx;  /* save context */\n        ci.funcOff = L.top - nresults - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        luaD_throw(L, LUA_YIELD);\n    }\n\n    lua_assert(ci.callstatus & lstate.CIST_HOOKED);  /* must be inside a hook */\n    return 0;  /* return to 'luaD_hook' */\n};\n\nconst lua_yield = function(L, n) {\n    lua_yieldk(L, n, 0, null);\n};\n\nconst luaD_pcall = function(L, func, u, old_top, ef) {\n    let old_ci = L.ci;\n    let old_allowhooks = L.allowhook;\n    let old_nny = L.nny;\n    let old_errfunc = L.errfunc;\n    L.errfunc = ef;\n\n    let status = luaD_rawrunprotected(L, func, u);\n\n    if (status !== LUA_OK) {\n        lfunc.luaF_close(L, old_top);\n        seterrorobj(L, status, old_top);\n        L.ci = old_ci;\n        L.allowhook = old_allowhooks;\n        L.nny = old_nny;\n        luaD_shrinkstack(L);\n    }\n\n    L.errfunc = old_errfunc;\n\n    return status;\n};\n\n/*\n** Similar to 'luaD_call', but does not allow yields during the call\n*/\nconst luaD_callnoyield = function(L, off, nResults) {\n    L.nny++;\n    luaD_call(L, off, nResults);\n    L.nny--;\n};\n\n/*\n** Execute a protected parser.\n*/\nclass SParser {\n    constructor(z, name, mode) {  /* data to 'f_parser' */\n        this.z = z;\n        this.buff = new MBuffer();  /* dynamic structure used by the scanner */\n        this.dyd = new lparser.Dyndata();  /* dynamic structures used by the parser */\n        this.mode = mode;\n        this.name = name;\n    }\n}\n\nconst checkmode = function(L, mode, x) {\n    if (mode && luastring_indexOf(mode, x[0]) === -1) {\n        lobject.luaO_pushfstring(L,\n            to_luastring(\"attempt to load a %s chunk (mode is '%s')\"), x, mode);\n        luaD_throw(L, LUA_ERRSYNTAX);\n    }\n};\n\nconst f_parser = function(L, p) {\n    let cl;\n    let c = p.z.zgetc();  /* read first character */\n    if (c === LUA_SIGNATURE[0]) {\n        checkmode(L, p.mode, to_luastring(\"binary\", true));\n        cl = lundump.luaU_undump(L, p.z, p.name);\n    } else {\n        checkmode(L, p.mode, to_luastring(\"text\", true));\n        cl = lparser.luaY_parser(L, p.z, p.buff, p.dyd, p.name, c);\n    }\n\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    lfunc.luaF_initupvals(L, cl);\n};\n\nconst luaD_protectedparser = function(L, z, name, mode) {\n    let p = new SParser(z, name, mode);\n    L.nny++;  /* cannot yield during parsing */\n    let status = luaD_pcall(L, f_parser, p, L.top, L.errfunc);\n    L.nny--;\n    return status;\n};\n\nmodule.exports.adjust_top           = adjust_top;\nmodule.exports.luaD_call            = luaD_call;\nmodule.exports.luaD_callnoyield     = luaD_callnoyield;\nmodule.exports.luaD_checkstack      = luaD_checkstack;\nmodule.exports.luaD_growstack       = luaD_growstack;\nmodule.exports.luaD_hook            = luaD_hook;\nmodule.exports.luaD_inctop          = luaD_inctop;\nmodule.exports.luaD_pcall           = luaD_pcall;\nmodule.exports.luaD_poscall         = luaD_poscall;\nmodule.exports.luaD_precall         = luaD_precall;\nmodule.exports.luaD_protectedparser = luaD_protectedparser;\nmodule.exports.luaD_rawrunprotected = luaD_rawrunprotected;\nmodule.exports.luaD_reallocstack    = luaD_reallocstack;\nmodule.exports.luaD_throw           = luaD_throw;\nmodule.exports.lua_isyieldable      = lua_isyieldable;\nmodule.exports.lua_resume           = lua_resume;\nmodule.exports.lua_yield            = lua_yield;\nmodule.exports.lua_yieldk           = lua_yieldk;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst ldebug  = require('./ldebug.js');\nconst lobject = require('./lobject.js');\nconst {\n    luaS_hashlongstr,\n    TString\n} = require('./lstring.js');\nconst lstate  = require('./lstate.js');\n\n/* used to prevent conflicts with lightuserdata keys */\nlet lightuserdata_hashes = new WeakMap();\nconst get_lightuserdata_hash = function(v) {\n    let hash = lightuserdata_hashes.get(v);\n    if (!hash) {\n        /* Hash should be something unique that is a valid WeakMap key\n           so that it ends up in dead_weak when removed from a table */\n        hash = {};\n        lightuserdata_hashes.set(v, hash);\n    }\n    return hash;\n};\n\nconst table_hash = function(L, key) {\n    switch(key.type) {\n        case LUA_TNIL:\n            return ldebug.luaG_runerror(L, to_luastring(\"table index is nil\", true));\n        case LUA_TNUMFLT:\n            if (isNaN(key.value))\n                return ldebug.luaG_runerror(L, to_luastring(\"table index is NaN\", true));\n            /* fall through */\n        case LUA_TNUMINT: /* takes advantage of floats and integers being same in JS */\n        case LUA_TBOOLEAN:\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TLCF:\n        case LUA_TCCL:\n        case LUA_TUSERDATA:\n        case LUA_TTHREAD:\n            return key.value;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return luaS_hashlongstr(key.tsvalue());\n        case LUA_TLIGHTUSERDATA: {\n            let v = key.value;\n            switch(typeof v) {\n                case \"string\":\n                    /* possible conflict with LUA_TSTRING.\n                       prefix this string with \"*\" so they don't clash */\n                    return \"*\" + v;\n                case \"number\":\n                    /* possible conflict with LUA_TNUMBER.\n                       turn into string and prefix with \"#\" to avoid clash with other strings */\n                    return \"#\" + v;\n                case \"boolean\":\n                    /* possible conflict with LUA_TBOOLEAN. use strings ?true and ?false instead */\n                    return v?\"?true\":\"?false\";\n                case \"function\":\n                    /* possible conflict with LUA_TLCF.\n                       indirect via a weakmap */\n                    return get_lightuserdata_hash(v);\n                case \"object\":\n                    /* v could be a lua_State, CClosure, LClosure, Table or Userdata from this state as returned by lua_topointer */\n                    if ((v instanceof lstate.lua_State && v.l_G === L.l_G) ||\n                        v instanceof Table ||\n                        v instanceof lobject.Udata ||\n                        v instanceof lobject.LClosure ||\n                        v instanceof lobject.CClosure) {\n                        /* indirect via a weakmap */\n                        return get_lightuserdata_hash(v);\n                    }\n                    /* fall through */\n                default:\n                    return v;\n            }\n        }\n        default:\n            throw new Error(\"unknown key type: \" + key.type);\n    }\n};\n\nclass Table {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.strong = new Map();\n        this.dead_strong = new Map();\n        this.dead_weak = void 0; /* initialised when needed */\n        this.f = void 0; /* first entry */\n        this.l = void 0; /* last entry */\n        this.metatable = null;\n        this.flags = ~0;\n    }\n}\n\nconst invalidateTMcache = function(t) {\n    t.flags = 0;\n};\n\nconst add = function(t, hash, key, value) {\n    t.dead_strong.clear();\n    t.dead_weak = void 0;\n    let prev = null;\n    let entry = {\n        key: key,\n        value: value,\n        p: prev = t.l,\n        n: void 0\n    };\n    if (!t.f) t.f = entry;\n    if (prev) prev.n = entry;\n    t.strong.set(hash, entry);\n    t.l = entry;\n};\n\nconst is_valid_weakmap_key = function(k) {\n    return typeof k === 'object' ? k !== null : typeof k === 'function';\n};\n\n/* Move out of 'strong' part and into 'dead' part. */\nconst mark_dead = function(t, hash) {\n    let e = t.strong.get(hash);\n    if (e) {\n        e.key.setdeadvalue();\n        e.value = void 0;\n        let next = e.n;\n        let prev = e.p;\n        e.p = void 0; /* no need to know previous item any more */\n        if(prev) prev.n = next;\n        if(next) next.p = prev;\n        if(t.f === e) t.f = next;\n        if(t.l === e) t.l = prev;\n        t.strong.delete(hash);\n        if (is_valid_weakmap_key(hash)) {\n            if (!t.dead_weak) t.dead_weak = new WeakMap();\n            t.dead_weak.set(hash, e);\n        } else {\n            /* can't be used as key in weakmap */\n            t.dead_strong.set(hash, e);\n        }\n    }\n};\n\nconst luaH_new = function(L) {\n    return new Table(L);\n};\n\nconst getgeneric = function(t, hash) {\n    let v = t.strong.get(hash);\n    return v ? v.value : lobject.luaO_nilobject;\n};\n\nconst luaH_getint = function(t, key) {\n    lua_assert(typeof key == \"number\" && (key|0) === key);\n    return getgeneric(t, key);\n};\n\nconst luaH_getstr = function(t, key) {\n    lua_assert(key instanceof TString);\n    return getgeneric(t, luaS_hashlongstr(key));\n};\n\nconst luaH_get = function(L, t, key) {\n    lua_assert(key instanceof lobject.TValue);\n    if (key.ttisnil() || (key.ttisfloat() && isNaN(key.value)))\n        return lobject.luaO_nilobject;\n    return getgeneric(t, table_hash(L, key));\n};\n\nconst luaH_setint = function(t, key, value) {\n    lua_assert(typeof key == \"number\" && (key|0) === key && value instanceof lobject.TValue);\n    let hash = key; /* table_hash known result */\n    if (value.ttisnil()) {\n        mark_dead(t, hash);\n        return;\n    }\n    let e = t.strong.get(hash);\n    if (e) {\n        let tv = e.value;\n        tv.setfrom(value);\n    } else {\n        let k = new lobject.TValue(LUA_TNUMINT, key);\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\nconst luaH_setfrom = function(L, t, key, value) {\n    lua_assert(key instanceof lobject.TValue);\n    let hash = table_hash(L, key);\n    if (value.ttisnil()) { /* delete */\n        mark_dead(t, hash);\n        return;\n    }\n\n    let e = t.strong.get(hash);\n    if (e) {\n        e.value.setfrom(value);\n    } else {\n        let k;\n        let kv = key.value;\n        if ((key.ttisfloat() && (kv|0) === kv)) { /* does index fit in an integer? */\n            /* insert it as an integer */\n            k = new lobject.TValue(LUA_TNUMINT, kv);\n        } else {\n            k = new lobject.TValue(key.type, kv);\n        }\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\n/*\n** Try to find a boundary in table 't'. A 'boundary' is an integer index\n** such that t[i] is non-nil and t[i+1] is nil (and 0 if t[1] is nil).\n*/\nconst luaH_getn = function(t) {\n    let i = 0;\n    let j = t.strong.size + 1; /* use known size of Map to bound search */\n    /* now do a binary search between them */\n    while (j - i > 1) {\n        let m = Math.floor((i+j)/2);\n        if (luaH_getint(t, m).ttisnil()) j = m;\n        else i = m;\n    }\n    return i;\n};\n\nconst luaH_next = function(L, table, keyI) {\n    let keyO = L.stack[keyI];\n\n    let entry;\n    if (keyO.type === LUA_TNIL) {\n        entry = table.f;\n        if (!entry)\n            return false;\n    } else {\n        /* First find current key */\n        let hash = table_hash(L, keyO);\n        /* Look in main part of table */\n        entry = table.strong.get(hash);\n        if (entry) {\n            entry = entry.n;\n            if (!entry)\n                return false;\n        } else {\n            /* Try dead keys */\n            entry = (table.dead_weak && table.dead_weak.get(hash)) || table.dead_strong.get(hash);\n            if (!entry)\n                /* item not in table */\n                return ldebug.luaG_runerror(L, to_luastring(\"invalid key to 'next'\"));\n            /* Iterate until either out of keys, or until finding a non-dead key */\n            do {\n                entry = entry.n;\n                if (!entry)\n                    return false;\n            } while (entry.key.ttisdeadkey());\n        }\n    }\n    lobject.setobj2s(L, keyI, entry.key);\n    lobject.setobj2s(L, keyI+1, entry.value);\n    return true;\n};\n\nmodule.exports.invalidateTMcache = invalidateTMcache;\nmodule.exports.luaH_get     = luaH_get;\nmodule.exports.luaH_getint  = luaH_getint;\nmodule.exports.luaH_getn    = luaH_getn;\nmodule.exports.luaH_getstr  = luaH_getstr;\nmodule.exports.luaH_setfrom = luaH_setfrom;\nmodule.exports.luaH_setint  = luaH_setint;\nmodule.exports.luaH_new     = luaH_new;\nmodule.exports.luaH_next    = luaH_next;\nmodule.exports.Table        = Table;\n","\"use strict\";\n\nconst {\n    is_luastring,\n    luastring_eq,\n    luastring_from,\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass TString {\n\n    constructor(L, str) {\n        this.hash = null;\n        this.realstring = str;\n    }\n\n    getstr() {\n        return this.realstring;\n    }\n\n    tsslen() {\n        return this.realstring.length;\n    }\n\n}\n\nconst luaS_eqlngstr = function(a, b) {\n    lua_assert(a instanceof TString);\n    lua_assert(b instanceof TString);\n    return a == b || luastring_eq(a.realstring, b.realstring);\n};\n\n/* converts strings (arrays) to a consistent map key\n   make sure this doesn't conflict with any of the anti-collision strategies in ltable */\nconst luaS_hash = function(str) {\n    lua_assert(is_luastring(str));\n    let len = str.length;\n    let s = \"|\";\n    for (let i=0; i<len; i++)\n        s += str[i].toString(16);\n    return s;\n};\n\nconst luaS_hashlongstr = function(ts) {\n    lua_assert(ts instanceof TString);\n    if(ts.hash === null) {\n        ts.hash = luaS_hash(ts.getstr());\n    }\n    return ts.hash;\n};\n\n/* variant that takes ownership of array */\nconst luaS_bless = function(L, str) {\n    lua_assert(str instanceof Uint8Array);\n    return new TString(L, str);\n};\n\n/* makes a copy */\nconst luaS_new = function(L, str) {\n    return luaS_bless(L, luastring_from(str));\n};\n\n/* takes a js string */\nconst luaS_newliteral = function(L, str) {\n    return luaS_bless(L, to_luastring(str));\n};\n\nmodule.exports.luaS_eqlngstr    = luaS_eqlngstr;\nmodule.exports.luaS_hash        = luaS_hash;\nmodule.exports.luaS_hashlongstr = luaS_hashlongstr;\nmodule.exports.luaS_bless       = luaS_bless;\nmodule.exports.luaS_new         = luaS_new;\nmodule.exports.luaS_newliteral  = luaS_newliteral;\nmodule.exports.TString          = TString;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCOUNT,\n    LUA_HOOKLINE,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TNIL,\n        LUA_TTABLE\n    },\n    thread_status: {\n        LUA_ERRRUN,\n        LUA_YIELD\n    },\n    from_userstring,\n    luastring_eq,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst {\n    api_check,\n    lua_assert\n} = require('./llimits.js');\nconst { LUA_IDSIZE } = require('./luaconf.js');\nconst lapi     = require('./lapi.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lstate   = require('./lstate.js');\nconst ltable   = require('./ltable.js');\nconst ltm      = require('./ltm.js');\nconst lvm      = require('./lvm.js');\n\nconst currentpc = function(ci) {\n    lua_assert(ci.callstatus & lstate.CIST_LUA);\n    return ci.l_savedpc - 1;\n};\n\nconst currentline = function(ci) {\n    return ci.func.value.p.lineinfo.length !== 0 ? ci.func.value.p.lineinfo[currentpc(ci)] : -1;\n};\n\n/*\n** If function yielded, its 'func' can be in the 'extra' field. The\n** next function restores 'func' to its correct value for debugging\n** purposes. (It exchanges 'func' and 'extra'; so, when called again,\n** after debugging, it also \"re-restores\" ** 'func' to its altered value.\n*/\nconst swapextra = function(L) {\n    if (L.status === LUA_YIELD) {\n        let ci = L.ci;  /* get function that yielded */\n        let temp = ci.funcOff;  /* exchange its 'func' and 'extra' values */\n        ci.func = L.stack[ci.extra];\n        ci.funcOff = ci.extra;\n        ci.extra = temp;\n    }\n};\n\nconst lua_sethook = function(L, func, mask, count) {\n    if (func === null || mask === 0) {  /* turn off hooks? */\n        mask = 0;\n        func = null;\n    }\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        L.oldpc = L.ci.l_savedpc;\n    L.hook = func;\n    L.basehookcount = count;\n    L.hookcount = L.basehookcount;\n    L.hookmask = mask;\n};\n\nconst lua_gethook = function(L) {\n    return L.hook;\n};\n\n\nconst lua_gethookmask = function(L) {\n    return L.hookmask;\n};\n\n\nconst lua_gethookcount = function(L) {\n    return L.basehookcount;\n};\n\nconst lua_getstack = function(L, level, ar) {\n    let ci;\n    let status;\n    if (level < 0) return 0;  /* invalid (negative) level */\n    for (ci = L.ci; level > 0 && ci !== L.base_ci; ci = ci.previous)\n        level--;\n    if (level === 0 && ci !== L.base_ci) {  /* level found? */\n        status = 1;\n        ar.i_ci = ci;\n    } else\n        status = 0;  /* no such level */\n    return status;\n};\n\nconst upvalname = function(p, uv) {\n    lua_assert(uv < p.upvalues.length);\n    let s = p.upvalues[uv].name;\n    if (s === null) return to_luastring(\"?\", true);\n    return s.getstr();\n};\n\nconst findvararg = function(ci, n) {\n    let nparams = ci.func.value.p.numparams;\n    if (n >= ci.l_base - ci.funcOff - nparams)\n        return null;  /* no such vararg */\n    else {\n        return {\n            pos: ci.funcOff + nparams + n,\n            name: to_luastring(\"(*vararg)\", true)  /* generic name for any vararg */\n        };\n    }\n};\n\nconst findlocal = function(L, ci, n) {\n    let base, name = null;\n\n    if (ci.callstatus & lstate.CIST_LUA) {\n        if (n < 0)  /* access to vararg values? */\n            return findvararg(ci, -n);\n        else {\n            base = ci.l_base;\n            name = lfunc.luaF_getlocalname(ci.func.value.p, n, currentpc(ci));\n        }\n    } else\n        base = ci.funcOff + 1;\n\n    if (name === null) {  /* no 'standard' name? */\n        let limit = ci === L.ci ? L.top : ci.next.funcOff;\n        if (limit - base >= n && n > 0)  /* is 'n' inside 'ci' stack? */\n            name = to_luastring(\"(*temporary)\", true);  /* generic name for any valid slot */\n        else\n            return null;  /* no name */\n    }\n    return {\n        pos: base + (n - 1),\n        name: name\n    };\n};\n\nconst lua_getlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    if (ar === null) {  /* information about non-active function? */\n        if (!L.stack[L.top - 1].ttisLclosure())  /* not a Lua function? */\n            name = null;\n        else  /* consider live variables at function start (parameters) */\n            name = lfunc.luaF_getlocalname(L.stack[L.top - 1].value.p, n, 0);\n    } else {  /* active function; get information through 'ar' */\n        let local = findlocal(L, ar.i_ci, n);\n        if (local) {\n            name = local.name;\n            lobject.pushobj2s(L, L.stack[local.pos]);\n            api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        } else {\n            name = null;\n        }\n    }\n    swapextra(L);\n    return name;\n};\n\nconst lua_setlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    let local = findlocal(L, ar.i_ci, n);\n    if (local) {\n        name = local.name;\n        lobject.setobjs2s(L, local.pos, L.top - 1);\n        delete L.stack[--L.top];  /* pop value */\n    } else {\n        name = null;\n    }\n    swapextra(L);\n    return name;\n};\n\nconst funcinfo = function(ar, cl) {\n    if (cl === null || cl instanceof lobject.CClosure) {\n        ar.source = to_luastring(\"=[JS]\", true);\n        ar.linedefined = -1;\n        ar.lastlinedefined = -1;\n        ar.what = to_luastring(\"J\", true);\n    } else {\n        let p = cl.p;\n        ar.source = p.source ? p.source.getstr() : to_luastring(\"=?\", true);\n        ar.linedefined = p.linedefined;\n        ar.lastlinedefined = p.lastlinedefined;\n        ar.what = ar.linedefined === 0 ? to_luastring(\"main\", true) : to_luastring(\"Lua\", true);\n    }\n\n    ar.short_src = lobject.luaO_chunkid(ar.source, LUA_IDSIZE);\n};\n\nconst collectvalidlines = function(L, f) {\n    if (f === null || f instanceof lobject.CClosure) {\n        L.stack[L.top] = new lobject.TValue(LUA_TNIL, null);\n        lapi.api_incr_top(L);\n    } else {\n        let lineinfo = f.p.lineinfo;\n        let t = ltable.luaH_new(L);\n        L.stack[L.top] = new lobject.TValue(LUA_TTABLE, t);\n        lapi.api_incr_top(L);\n        let v = new lobject.TValue(LUA_TBOOLEAN, true);\n        for (let i = 0; i < lineinfo.length; i++)\n            ltable.luaH_setint(t, lineinfo[i], v);\n    }\n};\n\nconst getfuncname = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n    if (ci === null)\n        return null;\n    else if (ci.callstatus & lstate.CIST_FIN) {  /* is this a finalizer? */\n        r.name = to_luastring(\"__gc\", true);\n        r.funcname = to_luastring(\"metamethod\", true);  /* report it as such */\n        return r;\n    }\n    /* calling function is a known Lua function? */\n    else if (!(ci.callstatus & lstate.CIST_TAIL) && ci.previous.callstatus & lstate.CIST_LUA)\n        return funcnamefromcode(L, ci.previous);\n    else return null;  /* no way to find a name */\n};\n\nconst auxgetinfo = function(L, what, ar, f, ci) {\n    let status = 1;\n    for (; what.length > 0; what = what.subarray(1)) {\n        switch (what[0]) {\n            case 83 /* ('S').charCodeAt(0) */: {\n                funcinfo(ar, f);\n                break;\n            }\n            case 108 /* ('l').charCodeAt(0) */: {\n                ar.currentline = ci && ci.callstatus & lstate.CIST_LUA ? currentline(ci) : -1;\n                break;\n            }\n            case 117 /* ('u').charCodeAt(0) */: {\n                ar.nups = f === null ? 0 : f.nupvalues;\n                if (f === null || f instanceof lobject.CClosure) {\n                    ar.isvararg = true;\n                    ar.nparams = 0;\n                } else {\n                    ar.isvararg = f.p.is_vararg;\n                    ar.nparams = f.p.numparams;\n                }\n                break;\n            }\n            case 116 /* ('t').charCodeAt(0) */: {\n                ar.istailcall = ci ? ci.callstatus & lstate.CIST_TAIL : 0;\n                break;\n            }\n            case 110 /* ('n').charCodeAt(0) */: {\n                let r = getfuncname(L, ci);\n                if (r === null) {\n                    ar.namewhat = to_luastring(\"\", true);\n                    ar.name = null;\n                } else {\n                    ar.namewhat = r.funcname;\n                    ar.name = r.name;\n                }\n                break;\n            }\n            case 76 /* ('L').charCodeAt(0) */:\n            case 102 /* ('f').charCodeAt(0) */:  /* handled by lua_getinfo */\n                break;\n            default: status = 0;  /* invalid option */\n        }\n    }\n\n    return status;\n};\n\nconst lua_getinfo = function(L, what, ar) {\n    what = from_userstring(what);\n    let status, cl, ci, func;\n    swapextra(L);\n    if (what[0] === 62 /* ('>').charCodeAt(0) */) {\n        ci = null;\n        func = L.stack[L.top - 1];\n        api_check(L, func.ttisfunction(), \"function expected\");\n        what = what.subarray(1);  /* skip the '>' */\n        L.top--;  /* pop function */\n    } else {\n        ci = ar.i_ci;\n        func = ci.func;\n        lua_assert(ci.func.ttisfunction());\n    }\n\n    cl = func.ttisclosure() ? func.value : null;\n    status = auxgetinfo(L, what, ar, cl, ci);\n    if (luastring_indexOf(what, 102 /* ('f').charCodeAt(0) */) >= 0) {\n        lobject.pushobj2s(L, func);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n\n    swapextra(L);\n    if (luastring_indexOf(what, 76 /* ('L').charCodeAt(0) */) >= 0)\n        collectvalidlines(L, cl);\n\n    return status;\n};\n\nconst kname = function(p, pc, c) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    if (lopcodes.ISK(c)) {  /* is 'c' a constant? */\n        let kvalue = p.k[lopcodes.INDEXK(c)];\n        if (kvalue.ttisstring()) {  /* literal constant? */\n            r.name = kvalue.svalue();  /* it is its own name */\n            return r;\n        }\n        /* else no reasonable name found */\n    } else {  /* 'c' is a register */\n        let what = getobjname(p, pc, c); /* search for 'c' */\n        if (what && what.funcname[0] === 99 /* ('c').charCodeAt(0) */) {  /* found a constant name? */\n            return what;  /* 'name' already filled */\n        }\n        /* else no reasonable name found */\n    }\n    r.name = to_luastring(\"?\", true);\n    return r;  /* no reasonable name found */\n};\n\nconst filterpc = function(pc, jmptarget) {\n    if (pc < jmptarget)  /* is code conditional (inside a jump)? */\n        return -1;  /* cannot know who sets that register */\n    else return pc;  /* current position sets that register */\n};\n\n/*\n** try to find last instruction before 'lastpc' that modified register 'reg'\n*/\nconst findsetreg = function(p, lastpc, reg) {\n    let setreg = -1;  /* keep last instruction that changed 'reg' */\n    let jmptarget = 0;  /* any code before this address is conditional */\n    let OCi = lopcodes.OpCodesI;\n    for (let pc = 0; pc < lastpc; pc++) {\n        let i = p.code[pc];\n        let a = i.A;\n        switch (i.opcode) {\n            case OCi.OP_LOADNIL: {\n                let b = i.B;\n                if (a <= reg && reg <= a + b)  /* set registers from 'a' to 'a+b' */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_TFORCALL: {\n                if (reg >= a + 2)  /* affect all regs above its base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_CALL:\n            case OCi.OP_TAILCALL: {\n                if (reg >= a)  /* affect all registers above base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_JMP: {\n                let b = i.sBx;\n                let dest = pc + 1 + b;\n                /* jump is forward and do not skip 'lastpc'? */\n                if (pc < dest && dest <= lastpc) {\n                    if (dest > jmptarget)\n                        jmptarget = dest;  /* update 'jmptarget' */\n                }\n                break;\n            }\n            default:\n                if (lopcodes.testAMode(i.opcode) && reg === a)\n                    setreg = filterpc(pc, jmptarget);\n                break;\n        }\n    }\n\n    return setreg;\n};\n\n\nconst getobjname = function(p, lastpc, reg) {\n    let r = {\n        name: lfunc.luaF_getlocalname(p, reg + 1, lastpc),\n        funcname: null\n    };\n\n    if (r.name) {  /* is a local? */\n        r.funcname = to_luastring(\"local\", true);\n        return r;\n    }\n\n    /* else try symbolic execution */\n    let pc = findsetreg(p, lastpc, reg);\n    let OCi = lopcodes.OpCodesI;\n    if (pc !== -1) {  /* could find instruction? */\n        let i = p.code[pc];\n        switch (i.opcode) {\n            case OCi.OP_MOVE: {\n                let b = i.B;  /* move from 'b' to 'a' */\n                if (b < i.A)\n                    return getobjname(p, pc, b);  /* get name for 'b' */\n                break;\n            }\n            case OCi.OP_GETTABUP:\n            case OCi.OP_GETTABLE: {\n                let k = i.C;  /* key index */\n                let t = i.B;  /* table index */\n                let vn = i.opcode === OCi.OP_GETTABLE ? lfunc.luaF_getlocalname(p, t + 1, pc) : upvalname(p, t);\n                r.name = kname(p, pc, k).name;\n                r.funcname = (vn && luastring_eq(vn, llex.LUA_ENV)) ? to_luastring(\"global\", true) : to_luastring(\"field\", true);\n                return r;\n            }\n            case OCi.OP_GETUPVAL: {\n                r.name = upvalname(p, i.B);\n                r.funcname = to_luastring(\"upvalue\", true);\n                return r;\n            }\n            case OCi.OP_LOADK:\n            case OCi.OP_LOADKX: {\n                let b = i.opcode === OCi.OP_LOADK ? i.Bx : p.code[pc + 1].Ax;\n                if (p.k[b].ttisstring()) {\n                    r.name = p.k[b].svalue();\n                    r.funcname = to_luastring(\"constant\", true);\n                    return r;\n                }\n                break;\n            }\n            case OCi.OP_SELF: {\n                let k = i.C;\n                r.name = kname(p, pc, k).name;\n                r.funcname = to_luastring(\"method\", true);\n                return r;\n            }\n            default: break;\n        }\n    }\n\n    return null;\n};\n\n/*\n** Try to find a name for a function based on the code that called it.\n** (Only works when function was called by a Lua function.)\n** Returns what the name is (e.g., \"for iterator\", \"method\",\n** \"metamethod\") and sets '*name' to point to the name.\n*/\nconst funcnamefromcode = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    let tm = 0;  /* (initial value avoids warnings) */\n    let p = ci.func.value.p;  /* calling function */\n    let pc = currentpc(ci);  /* calling instruction index */\n    let i = p.code[pc];  /* calling instruction */\n    let OCi = lopcodes.OpCodesI;\n\n    if (ci.callstatus & lstate.CIST_HOOKED) {\n        r.name = to_luastring(\"?\", true);\n        r.funcname = to_luastring(\"hook\", true);\n        return r;\n    }\n\n    switch (i.opcode) {\n        case OCi.OP_CALL:\n        case OCi.OP_TAILCALL:\n            return getobjname(p, pc, i.A);  /* get function name */\n        case OCi.OP_TFORCALL:\n            r.name = to_luastring(\"for iterator\", true);\n            r.funcname = to_luastring(\"for iterator\", true);\n            return r;\n        /* other instructions can do calls through metamethods */\n        case OCi.OP_SELF:\n        case OCi.OP_GETTABUP:\n        case OCi.OP_GETTABLE:\n            tm = ltm.TMS.TM_INDEX;\n            break;\n        case OCi.OP_SETTABUP:\n        case OCi.OP_SETTABLE:\n            tm = ltm.TMS.TM_NEWINDEX;\n            break;\n        case OCi.OP_ADD:    tm = ltm.TMS.TM_ADD;    break;\n        case OCi.OP_SUB:    tm = ltm.TMS.TM_SUB;    break;\n        case OCi.OP_MUL:    tm = ltm.TMS.TM_MUL;    break;\n        case OCi.OP_MOD:    tm = ltm.TMS.TM_MOD;    break;\n        case OCi.OP_POW:    tm = ltm.TMS.TM_POW;    break;\n        case OCi.OP_DIV:    tm = ltm.TMS.TM_DIV;    break;\n        case OCi.OP_IDIV:   tm = ltm.TMS.TM_IDIV;   break;\n        case OCi.OP_BAND:   tm = ltm.TMS.TM_BAND;   break;\n        case OCi.OP_BOR:    tm = ltm.TMS.TM_BOR;    break;\n        case OCi.OP_BXOR:   tm = ltm.TMS.TM_BXOR;   break;\n        case OCi.OP_SHL:    tm = ltm.TMS.TM_SHL;    break;\n        case OCi.OP_SHR:    tm = ltm.TMS.TM_SHR;    break;\n        case OCi.OP_UNM:    tm = ltm.TMS.TM_UNM;    break;\n        case OCi.OP_BNOT:   tm = ltm.TMS.TM_BNOT;   break;\n        case OCi.OP_LEN:    tm = ltm.TMS.TM_LEN;    break;\n        case OCi.OP_CONCAT: tm = ltm.TMS.TM_CONCAT; break;\n        case OCi.OP_EQ:     tm = ltm.TMS.TM_EQ;     break;\n        case OCi.OP_LT:     tm = ltm.TMS.TM_LT;     break;\n        case OCi.OP_LE:     tm = ltm.TMS.TM_LE;     break;\n        default:\n            return null;  /* cannot find a reasonable name */\n    }\n\n    r.name = L.l_G.tmname[tm].getstr();\n    r.funcname = to_luastring(\"metamethod\", true);\n    return r;\n};\n\nconst isinstack = function(L, ci, o) {\n    for (let i = ci.l_base; i < ci.top; i++) {\n        if (L.stack[i] === o)\n            return i;\n    }\n\n    return false;\n};\n\n/*\n** Checks whether value 'o' came from an upvalue. (That can only happen\n** with instructions OP_GETTABUP/OP_SETTABUP, which operate directly on\n** upvalues.)\n*/\nconst getupvalname = function(L, ci, o) {\n    let c = ci.func.value;\n    for (let i = 0; i < c.nupvalues; i++) {\n        if (c.upvals[i] === o) {\n            return {\n                name: upvalname(c.p, i),\n                funcname: to_luastring('upvalue', true)\n            };\n        }\n    }\n\n    return null;\n};\n\nconst varinfo = function(L, o) {\n    let ci = L.ci;\n    let kind = null;\n    if (ci.callstatus & lstate.CIST_LUA) {\n        kind = getupvalname(L, ci, o);  /* check whether 'o' is an upvalue */\n        let stkid = isinstack(L, ci, o);\n        if (!kind && stkid)  /* no? try a register */\n            kind = getobjname(ci.func.value.p, currentpc(ci), stkid - ci.l_base);\n    }\n\n    return kind ? lobject.luaO_pushfstring(L, to_luastring(\" (%s '%s')\", true), kind.funcname, kind.name) : to_luastring(\"\", true);\n};\n\nconst luaG_typeerror = function(L, o, op) {\n    let t = ltm.luaT_objtypename(L, o);\n    luaG_runerror(L, to_luastring(\"attempt to %s a %s value%s\", true), op, t, varinfo(L, o));\n};\n\nconst luaG_concaterror = function(L, p1, p2) {\n    if (p1.ttisstring() || lvm.cvt2str(p1)) p1 = p2;\n    luaG_typeerror(L, p1, to_luastring('concatenate', true));\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_opinterror = function(L, p1, p2, msg) {\n    if (lvm.tonumber(p1) === false)\n        p2 = p1;\n    luaG_typeerror(L, p2, msg);\n};\n\nconst luaG_ordererror = function(L, p1, p2) {\n    let t1 = ltm.luaT_objtypename(L, p1);\n    let t2 = ltm.luaT_objtypename(L, p2);\n    if (luastring_eq(t1, t2))\n        luaG_runerror(L, to_luastring(\"attempt to compare two %s values\", true), t1);\n    else\n        luaG_runerror(L, to_luastring(\"attempt to compare %s with %s\", true), t1, t2);\n};\n\n/* add src:line information to 'msg' */\nconst luaG_addinfo = function(L, msg, src, line) {\n    let buff;\n    if (src)\n        buff = lobject.luaO_chunkid(src.getstr(), LUA_IDSIZE);\n    else\n        buff = to_luastring(\"?\", true);\n\n    return lobject.luaO_pushfstring(L, to_luastring(\"%s:%d: %s\", true), buff, line, msg);\n};\n\nconst luaG_runerror = function(L, fmt, ...argp) {\n    let ci = L.ci;\n    let msg = lobject.luaO_pushvfstring(L, fmt, argp);\n    if (ci.callstatus & lstate.CIST_LUA)  /* if Lua function, add source:line information */\n        luaG_addinfo(L, msg, ci.func.value.p.source, currentline(ci));\n    luaG_errormsg(L);\n};\n\nconst luaG_errormsg = function(L) {\n    if (L.errfunc !== 0) {  /* is there an error handling function? */\n        let errfunc = L.errfunc;\n        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n        ldo.luaD_callnoyield(L, L.top - 2, 1);\n    }\n\n    ldo.luaD_throw(L, LUA_ERRRUN);\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_tointerror = function(L, p1, p2) {\n    let temp = lvm.tointeger(p1);\n    if (temp === false)\n        p2 = p1;\n    luaG_runerror(L, to_luastring(\"number%s has no integer representation\", true), varinfo(L, p2));\n};\n\nconst luaG_traceexec = function(L) {\n    let ci = L.ci;\n    let mask = L.hookmask;\n    let counthook = (--L.hookcount === 0 && (mask & LUA_MASKCOUNT));\n    if (counthook)\n        L.hookcount = L.basehookcount;  /* reset count */\n    else if (!(mask & LUA_MASKLINE))\n        return;  /* no line hook and count != 0; nothing to be done */\n    if (ci.callstatus & lstate.CIST_HOOKYIELD) {  /* called hook last time? */\n        ci.callstatus &= ~lstate.CIST_HOOKYIELD;  /* erase mark */\n        return;  /* do not call hook again (VM yielded, so it did not move) */\n    }\n    if (counthook)\n        ldo.luaD_hook(L, LUA_HOOKCOUNT, -1);  /* call count hook */\n    if (mask & LUA_MASKLINE) {\n        let p = ci.func.value.p;\n        let npc = ci.l_savedpc - 1; // pcRel(ci.u.l.savedpc, p);\n        let newline = p.lineinfo.length !== 0 ? p.lineinfo[npc] : -1;\n        if (npc === 0 ||  /* call linehook when enter a new function, */\n            ci.l_savedpc <= L.oldpc ||  /* when jump back (loop), or when */\n            newline !== (p.lineinfo.length !== 0 ? p.lineinfo[L.oldpc - 1] : -1))  /* enter a new line */\n            ldo.luaD_hook(L, LUA_HOOKLINE, newline);  /* call line hook */\n    }\n    L.oldpc = ci.l_savedpc;\n    if (L.status === LUA_YIELD) {  /* did hook yield? */\n        if (counthook)\n            L.hookcount = 1;  /* undo decrement to zero */\n        ci.l_savedpc--;  /* undo increment (resume will increment it again) */\n        ci.callstatus |= lstate.CIST_HOOKYIELD;  /* mark that it yielded */\n        ci.funcOff = L.top - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        ldo.luaD_throw(L, LUA_YIELD);\n    }\n};\n\nmodule.exports.luaG_addinfo     = luaG_addinfo;\nmodule.exports.luaG_concaterror = luaG_concaterror;\nmodule.exports.luaG_errormsg    = luaG_errormsg;\nmodule.exports.luaG_opinterror  = luaG_opinterror;\nmodule.exports.luaG_ordererror  = luaG_ordererror;\nmodule.exports.luaG_runerror    = luaG_runerror;\nmodule.exports.luaG_tointerror  = luaG_tointerror;\nmodule.exports.luaG_traceexec   = luaG_traceexec;\nmodule.exports.luaG_typeerror   = luaG_typeerror;\nmodule.exports.lua_gethook      = lua_gethook;\nmodule.exports.lua_gethookcount = lua_gethookcount;\nmodule.exports.lua_gethookmask  = lua_gethookmask;\nmodule.exports.lua_getinfo      = lua_getinfo;\nmodule.exports.lua_getlocal     = lua_getlocal;\nmodule.exports.lua_getstack     = lua_getstack;\nmodule.exports.lua_sethook      = lua_sethook;\nmodule.exports.lua_setlocal     = lua_setlocal;\n","\"use strict\";\n\nconst {\n    LUA_MINSTACK,\n    LUA_RIDX_GLOBALS,\n    LUA_RIDX_MAINTHREAD,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TNIL,\n        LUA_TTABLE,\n        LUA_TTHREAD\n    },\n    thread_status: {\n        LUA_OK\n    }\n} = require('./defs.js');\nconst lobject              = require('./lobject.js');\nconst ldo                  = require('./ldo.js');\nconst lapi                 = require('./lapi.js');\nconst ltable               = require('./ltable.js');\nconst ltm                  = require('./ltm.js');\n\nconst EXTRA_STACK = 5;\n\nconst BASIC_STACK_SIZE = 2 * LUA_MINSTACK;\n\nclass CallInfo {\n\n    constructor() {\n        this.func = null;\n        this.funcOff = NaN;\n        this.top = NaN;\n        this.previous = null;\n        this.next = null;\n\n        /* only for Lua functions */\n        this.l_base = NaN; /* base for this function */\n        this.l_code = null; /* reference to this.func.p.code */\n        this.l_savedpc = NaN; /* offset into l_code */\n        /* only for JS functions */\n        this.c_k = null;  /* continuation in case of yields */\n        this.c_old_errfunc = null;\n        this.c_ctx = null;  /* context info. in case of yields */\n\n        this.nresults = NaN;\n        this.callstatus = NaN;\n    }\n\n}\n\nclass lua_State {\n\n    constructor(g) {\n        this.id = g.id_counter++;\n\n        this.base_ci = new CallInfo(); /* CallInfo for first level (C calling Lua) */\n        this.top = NaN; /* first free slot in the stack */\n        this.stack_last = NaN; /* last free slot in the stack */\n        this.oldpc = NaN; /* last pc traced */\n\n        /* preinit_thread */\n        this.l_G = g;\n        this.stack = null;\n        this.ci = null;\n        this.errorJmp = null;\n        this.nCcalls = 0;\n        this.hook = null;\n        this.hookmask = 0;\n        this.basehookcount = 0;\n        this.allowhook = 1;\n        this.hookcount = this.basehookcount;\n        this.nny = 1;\n        this.status = LUA_OK;\n        this.errfunc = 0;\n    }\n\n}\n\nclass global_State {\n\n    constructor() {\n        this.id_counter = 1; /* used to give objects unique ids */\n        this.ids = new WeakMap();\n\n        this.mainthread = null;\n        this.l_registry = new lobject.TValue(LUA_TNIL, null);\n        this.panic = null;\n        this.atnativeerror = null;\n        this.version = null;\n        this.tmname = new Array(ltm.TMS.TM_N);\n        this.mt = new Array(LUA_NUMTAGS);\n    }\n\n}\n\nconst luaE_extendCI = function(L) {\n    let ci = new CallInfo();\n    L.ci.next = ci;\n    ci.previous = L.ci;\n    ci.next = null;\n    L.ci = ci;\n    return ci;\n};\n\nconst luaE_freeCI = function(L) {\n    let ci = L.ci;\n    ci.next = null;\n};\n\nconst stack_init = function(L1, L) {\n    L1.stack = new Array(BASIC_STACK_SIZE);\n    L1.top = 0;\n    L1.stack_last = BASIC_STACK_SIZE - EXTRA_STACK;\n    /* initialize first ci */\n    let ci = L1.base_ci;\n    ci.next = ci.previous = null;\n    ci.callstatus = 0;\n    ci.funcOff = L1.top;\n    ci.func = L1.stack[L1.top];\n    L1.stack[L1.top++] = new lobject.TValue(LUA_TNIL, null);\n    ci.top = L1.top + LUA_MINSTACK;\n    L1.ci = ci;\n};\n\nconst freestack = function(L) {\n    L.ci = L.base_ci;\n    luaE_freeCI(L);\n    L.stack = null;\n};\n\n/*\n** Create registry table and its predefined values\n*/\nconst init_registry = function(L, g) {\n    let registry = ltable.luaH_new(L);\n    g.l_registry.sethvalue(registry);\n    ltable.luaH_setint(registry, LUA_RIDX_MAINTHREAD, new lobject.TValue(LUA_TTHREAD, L));\n    ltable.luaH_setint(registry, LUA_RIDX_GLOBALS, new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L)));\n};\n\n/*\n** open parts of the state that may cause memory-allocation errors.\n** ('g->version' !== NULL flags that the state was completely build)\n*/\nconst f_luaopen = function(L) {\n    let g = L.l_G;\n    stack_init(L, L);\n    init_registry(L, g);\n    ltm.luaT_init(L);\n    g.version = lapi.lua_version(null);\n};\n\nconst lua_newthread = function(L) {\n    let g = L.l_G;\n    let L1 = new lua_State(g);\n    L.stack[L.top] = new lobject.TValue(LUA_TTHREAD, L1);\n    lapi.api_incr_top(L);\n    L1.hookmask = L.hookmask;\n    L1.basehookcount = L.basehookcount;\n    L1.hook = L.hook;\n    L1.hookcount = L1.basehookcount;\n    stack_init(L1, L);\n    return L1;\n};\n\nconst luaE_freethread = function(L, L1) {\n    freestack(L1);\n};\n\nconst lua_newstate = function() {\n    let g = new global_State();\n    let L = new lua_State(g);\n    g.mainthread = L;\n\n    if (ldo.luaD_rawrunprotected(L, f_luaopen, null) !== LUA_OK) {\n        L = null;\n    }\n\n    return L;\n};\n\nconst close_state = function(L) {\n    freestack(L);\n};\n\nconst lua_close = function(L) {\n    L = L.l_G.mainthread;  /* only the main thread can be closed */\n    close_state(L);\n};\n\nmodule.exports.lua_State       = lua_State;\nmodule.exports.CallInfo        = CallInfo;\nmodule.exports.CIST_OAH        = (1<<0);  /* original value of 'allowhook' */\nmodule.exports.CIST_LUA        = (1<<1);  /* call is running a Lua function */\nmodule.exports.CIST_HOOKED     = (1<<2);  /* call is running a debug hook */\nmodule.exports.CIST_FRESH      = (1<<3);  /* call is running on a fresh invocation of luaV_execute */\nmodule.exports.CIST_YPCALL     = (1<<4);  /* call is a yieldable protected call */\nmodule.exports.CIST_TAIL       = (1<<5);  /* call was tail called */\nmodule.exports.CIST_HOOKYIELD  = (1<<6);  /* last hook called yielded */\nmodule.exports.CIST_LEQ        = (1<<7);  /* using __lt for __le */\nmodule.exports.CIST_FIN        = (1<<8);   /* call is running a finalizer */\nmodule.exports.EXTRA_STACK     = EXTRA_STACK;\nmodule.exports.lua_close       = lua_close;\nmodule.exports.lua_newstate    = lua_newstate;\nmodule.exports.lua_newthread   = lua_newthread;\nmodule.exports.luaE_extendCI   = luaE_extendCI;\nmodule.exports.luaE_freeCI     = luaE_freeCI;\nmodule.exports.luaE_freethread = luaE_freethread;\n","\"use strict\";\n\nconst { constant_types: { LUA_TNIL } } = require('./defs.js');\nconst lobject = require('./lobject.js');\n\nclass Proto {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.k = [];              // constants used by the function\n        this.p = [];              // functions defined inside the function\n        this.code = [];           // opcodes\n        this.cache = null;        // last-created closure with this prototype\n        this.lineinfo = [];       // map from opcodes to source lines (debug information)\n        this.upvalues = [];       // upvalue information\n        this.numparams = 0;       // number of fixed parameters\n        this.is_vararg = false;\n        this.maxstacksize = 0;    // number of registers needed by this function\n        this.locvars = [];        // information about local variables (debug information)\n        this.linedefined = 0;     // debug information\n        this.lastlinedefined = 0; // debug information\n        this.source = null;       // used for debug information\n    }\n}\n\nconst luaF_newLclosure = function(L, n) {\n    return new lobject.LClosure(L, n);\n};\n\n\nconst luaF_findupval = function(L, level) {\n    return L.stack[level];\n};\n\nconst luaF_close = function(L, level) {\n    /* Create new TValues on stack;\n     * any closures will keep referencing old TValues */\n    for (let i=level; i<L.top; i++) {\n        let old = L.stack[i];\n        L.stack[i] = new lobject.TValue(old.type, old.value);\n    }\n};\n\n/*\n** fill a closure with new upvalues\n*/\nconst luaF_initupvals = function(L, cl) {\n    for (let i = 0; i < cl.nupvalues; i++)\n        cl.upvals[i] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Look for n-th local variable at line 'line' in function 'func'.\n** Returns null if not found.\n*/\nconst luaF_getlocalname = function(f, local_number, pc) {\n    for (let i = 0; i < f.locvars.length && f.locvars[i].startpc <= pc; i++) {\n        if (pc < f.locvars[i].endpc) {  /* is variable active? */\n            local_number--;\n            if (local_number === 0)\n                return f.locvars[i].varname.getstr();\n        }\n    }\n    return null;  /* not found */\n};\n\nmodule.exports.MAXUPVAL          = 255;\nmodule.exports.Proto             = Proto;\nmodule.exports.luaF_findupval    = luaF_findupval;\nmodule.exports.luaF_close        = luaF_close;\nmodule.exports.luaF_getlocalname = luaF_getlocalname;\nmodule.exports.luaF_initupvals   = luaF_initupvals;\nmodule.exports.luaF_newLclosure  = luaF_newLclosure;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\nconst lvm     = require('./lvm.js');\n\nconst luaT_typenames_ = [\n    \"no value\",\n    \"nil\",\n    \"boolean\",\n    \"userdata\",\n    \"number\",\n    \"string\",\n    \"table\",\n    \"function\",\n    \"userdata\",\n    \"thread\",\n    \"proto\" /* this last case is used for tests only */\n].map(e => to_luastring(e));\n\nconst ttypename = function(t) {\n    return luaT_typenames_[t + 1];\n};\n\n\n/*\n* WARNING: if you change the order of this enumeration,\n* grep \"ORDER TM\" and \"ORDER OP\"\n*/\nconst TMS = {\n    TM_INDEX:    0,\n    TM_NEWINDEX: 1,\n    TM_GC:       2,\n    TM_MODE:     3,\n    TM_LEN:      4,\n    TM_EQ:       5,  /* last tag method with fast access */\n    TM_ADD:      6,\n    TM_SUB:      7,\n    TM_MUL:      8,\n    TM_MOD:      9,\n    TM_POW:     10,\n    TM_DIV:     11,\n    TM_IDIV:    12,\n    TM_BAND:    13 ,\n    TM_BOR:     14,\n    TM_BXOR:    15,\n    TM_SHL:     16,\n    TM_SHR:     17,\n    TM_UNM:     18,\n    TM_BNOT:    19,\n    TM_LT:      20,\n    TM_LE:      21,\n    TM_CONCAT:  22,\n    TM_CALL:    23,\n    TM_N:       24  /* number of elements in the enum */\n};\n\nconst luaT_init = function(L) {\n    L.l_G.tmname[TMS.TM_INDEX]    = new luaS_new(L, to_luastring(\"__index\", true));\n    L.l_G.tmname[TMS.TM_NEWINDEX] = new luaS_new(L, to_luastring(\"__newindex\", true));\n    L.l_G.tmname[TMS.TM_GC]       = new luaS_new(L, to_luastring(\"__gc\", true));\n    L.l_G.tmname[TMS.TM_MODE]     = new luaS_new(L, to_luastring(\"__mode\", true));\n    L.l_G.tmname[TMS.TM_LEN]      = new luaS_new(L, to_luastring(\"__len\", true));\n    L.l_G.tmname[TMS.TM_EQ]       = new luaS_new(L, to_luastring(\"__eq\", true));\n    L.l_G.tmname[TMS.TM_ADD]      = new luaS_new(L, to_luastring(\"__add\", true));\n    L.l_G.tmname[TMS.TM_SUB]      = new luaS_new(L, to_luastring(\"__sub\", true));\n    L.l_G.tmname[TMS.TM_MUL]      = new luaS_new(L, to_luastring(\"__mul\", true));\n    L.l_G.tmname[TMS.TM_MOD]      = new luaS_new(L, to_luastring(\"__mod\", true));\n    L.l_G.tmname[TMS.TM_POW]      = new luaS_new(L, to_luastring(\"__pow\", true));\n    L.l_G.tmname[TMS.TM_DIV]      = new luaS_new(L, to_luastring(\"__div\", true));\n    L.l_G.tmname[TMS.TM_IDIV]     = new luaS_new(L, to_luastring(\"__idiv\", true));\n    L.l_G.tmname[TMS.TM_BAND]     = new luaS_new(L, to_luastring(\"__band\", true));\n    L.l_G.tmname[TMS.TM_BOR]      = new luaS_new(L, to_luastring(\"__bor\", true));\n    L.l_G.tmname[TMS.TM_BXOR]     = new luaS_new(L, to_luastring(\"__bxor\", true));\n    L.l_G.tmname[TMS.TM_SHL]      = new luaS_new(L, to_luastring(\"__shl\", true));\n    L.l_G.tmname[TMS.TM_SHR]      = new luaS_new(L, to_luastring(\"__shr\", true));\n    L.l_G.tmname[TMS.TM_UNM]      = new luaS_new(L, to_luastring(\"__unm\", true));\n    L.l_G.tmname[TMS.TM_BNOT]     = new luaS_new(L, to_luastring(\"__bnot\", true));\n    L.l_G.tmname[TMS.TM_LT]       = new luaS_new(L, to_luastring(\"__lt\", true));\n    L.l_G.tmname[TMS.TM_LE]       = new luaS_new(L, to_luastring(\"__le\", true));\n    L.l_G.tmname[TMS.TM_CONCAT]   = new luaS_new(L, to_luastring(\"__concat\", true));\n    L.l_G.tmname[TMS.TM_CALL]     = new luaS_new(L, to_luastring(\"__call\", true));\n};\n\n/*\n** Return the name of the type of an object. For tables and userdata\n** with metatable, use their '__name' metafield, if present.\n*/\nconst __name = to_luastring('__name', true);\nconst luaT_objtypename = function(L, o) {\n    let mt;\n    if ((o.ttistable() && (mt = o.value.metatable) !== null) ||\n        (o.ttisfulluserdata() && (mt = o.value.metatable) !== null)) {\n        let name = ltable.luaH_getstr(mt, luaS_bless(L, __name));\n        if (name.ttisstring())\n            return name.svalue();\n    }\n    return ttypename(o.ttnov());\n};\n\nconst luaT_callTM = function(L, f, p1, p2, p3, hasres) {\n    let func = L.top;\n\n    lobject.pushobj2s(L, f); /* push function (assume EXTRA_STACK) */\n    lobject.pushobj2s(L, p1); /* 1st argument */\n    lobject.pushobj2s(L, p2); /* 2nd argument */\n\n    if (!hasres)  /* no result? 'p3' is third argument */\n        lobject.pushobj2s(L, p3); /* 3rd argument */\n\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        ldo.luaD_call(L, func, hasres);\n    else\n        ldo.luaD_callnoyield(L, func, hasres);\n\n    if (hasres) {  /* if has result, move it to its place */\n        let tv = L.stack[L.top-1];\n        delete L.stack[--L.top];\n        p3.setfrom(tv);\n    }\n};\n\nconst luaT_callbinTM = function(L, p1, p2, res, event) {\n    let tm = luaT_gettmbyobj(L, p1, event);\n    if (tm.ttisnil())\n        tm = luaT_gettmbyobj(L, p2, event);\n    if (tm.ttisnil()) return false;\n    luaT_callTM(L, tm, p1, p2, res, 1);\n    return true;\n};\n\nconst luaT_trybinTM = function(L, p1, p2, res, event) {\n    if (!luaT_callbinTM(L, p1, p2, res, event)) {\n        switch (event) {\n            case TMS.TM_CONCAT:\n                return ldebug.luaG_concaterror(L, p1, p2);\n            case TMS.TM_BAND: case TMS.TM_BOR: case TMS.TM_BXOR:\n            case TMS.TM_SHL: case TMS.TM_SHR: case TMS.TM_BNOT: {\n                let n1 = lvm.tonumber(p1);\n                let n2 = lvm.tonumber(p2);\n                if (n1 !== false && n2 !== false)\n                    return ldebug.luaG_tointerror(L, p1, p2);\n                else\n                    return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform bitwise operation on\", true));\n            }\n            default:\n                return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform arithmetic on\", true));\n        }\n    }\n};\n\nconst luaT_callorderTM = function(L, p1, p2, event) {\n    let res = new lobject.TValue();\n    if (!luaT_callbinTM(L, p1, p2, res, event))\n        return null;\n    else\n        return !res.l_isfalse();\n};\n\nconst fasttm = function(l, et, e) {\n    return et === null ? null :\n        (et.flags & (1 << e)) ? null : luaT_gettm(et, e, l.l_G.tmname[e]);\n};\n\nconst luaT_gettm = function(events, event, ename) {\n    const tm = ltable.luaH_getstr(events, ename);\n    lua_assert(event <= TMS.TM_EQ);\n    if (tm.ttisnil()) {  /* no tag method? */\n        events.flags |= 1<<event;  /* cache this fact */\n        return null;\n    }\n    else return tm;\n};\n\nconst luaT_gettmbyobj = function(L, o, event) {\n    let mt;\n    switch(o.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = o.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[o.ttnov()];\n    }\n\n    return mt ? ltable.luaH_getstr(mt, L.l_G.tmname[event]) : lobject.luaO_nilobject;\n};\n\nmodule.exports.fasttm           = fasttm;\nmodule.exports.TMS              = TMS;\nmodule.exports.luaT_callTM      = luaT_callTM;\nmodule.exports.luaT_callbinTM   = luaT_callbinTM;\nmodule.exports.luaT_trybinTM    = luaT_trybinTM;\nmodule.exports.luaT_callorderTM = luaT_callorderTM;\nmodule.exports.luaT_gettm       = luaT_gettm;\nmodule.exports.luaT_gettmbyobj  = luaT_gettmbyobj;\nmodule.exports.luaT_init        = luaT_init;\nmodule.exports.luaT_objtypename = luaT_objtypename;\nmodule.exports.ttypename        = ttypename;\n","\"use strict\";\n\nconst {\n    LUA_MASKLINE,\n    LUA_MASKCOUNT,\n    LUA_MULTRET,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLCF,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst {\n    INDEXK,\n    ISK,\n    LFIELDS_PER_FLUSH,\n    OpCodesI: {\n        OP_ADD,\n        OP_BAND,\n        OP_BNOT,\n        OP_BOR,\n        OP_BXOR,\n        OP_CALL,\n        OP_CLOSURE,\n        OP_CONCAT,\n        OP_DIV,\n        OP_EQ,\n        OP_EXTRAARG,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETTABLE,\n        OP_GETTABUP,\n        OP_GETUPVAL,\n        OP_IDIV,\n        OP_JMP,\n        OP_LE,\n        OP_LEN,\n        OP_LOADBOOL,\n        OP_LOADK,\n        OP_LOADKX,\n        OP_LOADNIL,\n        OP_LT,\n        OP_MOD,\n        OP_MOVE,\n        OP_MUL,\n        OP_NEWTABLE,\n        OP_NOT,\n        OP_POW,\n        OP_RETURN,\n        OP_SELF,\n        OP_SETLIST,\n        OP_SETTABLE,\n        OP_SETTABUP,\n        OP_SETUPVAL,\n        OP_SHL,\n        OP_SHR,\n        OP_SUB,\n        OP_TAILCALL,\n        OP_TEST,\n        OP_TESTSET,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_UNM,\n        OP_VARARG\n    }\n} = require('./lopcodes.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst {\n    lua_assert,\n    luai_nummod\n} = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst lfunc   = require('./lfunc.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_eqlngstr,\n    luaS_hashlongstr\n} = require('./lstring.js');\nconst ldo     = require('./ldo.js');\nconst ltm     = require('./ltm.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\n\n/*\n** finish execution of an opcode interrupted by an yield\n*/\nconst luaV_finishOp = function(L) {\n    let ci = L.ci;\n    let base = ci.l_base;\n    let inst = ci.l_code[ci.l_savedpc - 1];  /* interrupted instruction */\n    let op = inst.opcode;\n\n    switch (op) {  /* finish its execution */\n        case OP_ADD: case OP_SUB: case OP_MUL: case OP_DIV: case OP_IDIV:\n        case OP_BAND: case OP_BOR: case OP_BXOR: case OP_SHL: case OP_SHR:\n        case OP_MOD: case OP_POW:\n        case OP_UNM: case OP_BNOT: case OP_LEN:\n        case OP_GETTABUP: case OP_GETTABLE: case OP_SELF: {\n            lobject.setobjs2s(L, base + inst.A, L.top-1);\n            delete L.stack[--L.top];\n            break;\n        }\n        case OP_LE: case OP_LT: case OP_EQ: {\n            let res = !L.stack[L.top - 1].l_isfalse();\n            delete L.stack[--L.top];\n            if (ci.callstatus & lstate.CIST_LEQ) {  /* \"<=\" using \"<\" instead? */\n                lua_assert(op === OP_LE);\n                ci.callstatus ^= lstate.CIST_LEQ;  /* clear mark */\n                res = !res;  /* negate result */\n            }\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_JMP);\n            if (res !== (inst.A ? true : false))  /* condition failed? */\n                ci.l_savedpc++;  /* skip jump instruction */\n            break;\n        }\n        case OP_CONCAT: {\n            let top = L.top - 1;  /* top when 'luaT_trybinTM' was called */\n            let b = inst.B;  /* first element to concatenate */\n            let total = top - 1 - (base + b);  /* yet to concatenate */\n            lobject.setobjs2s(L, top - 2, top);  /* put TM result in proper position */\n            if (total > 1) {  /* are there elements to concat? */\n                L.top = top - 1;  /* top is one after last element (at top-2) */\n                luaV_concat(L, total);  /* concat them (may yield again) */\n            }\n            /* move final result to final position */\n            lobject.setobjs2s(L, ci.l_base + inst.A, L.top - 1);\n            ldo.adjust_top(L, ci.top);  /* restore top */\n            break;\n        }\n        case OP_TFORCALL: {\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_TFORLOOP);\n            ldo.adjust_top(L, ci.top);  /* correct top */\n            break;\n        }\n        case OP_CALL: {\n            if (inst.C - 1 >= 0)  /* nresults >= 0? */\n                ldo.adjust_top(L, ci.top);  /* adjust results */\n            break;\n        }\n    }\n};\n\nconst RA = function(L, base, i) {\n    return base + i.A;\n};\n\nconst RB = function(L, base, i) {\n    return base + i.B;\n};\n\n// const RC = function(L, base, i) {\n//     return base + i.C;\n// };\n\nconst RKB = function(L, base, k, i) {\n    return ISK(i.B) ? k[INDEXK(i.B)] : L.stack[base + i.B];\n};\n\nconst RKC = function(L, base, k, i) {\n    return ISK(i.C) ? k[INDEXK(i.C)] : L.stack[base + i.C];\n};\n\nconst luaV_execute = function(L) {\n    let ci = L.ci;\n\n    ci.callstatus |= lstate.CIST_FRESH;\n    newframe:\n    for (;;) {\n        lua_assert(ci === L.ci);\n        let cl = ci.func.value;\n        let k = cl.p.k;\n        let base = ci.l_base;\n\n        let i = ci.l_code[ci.l_savedpc++];\n\n        if (L.hookmask & (LUA_MASKLINE | LUA_MASKCOUNT)) {\n            ldebug.luaG_traceexec(L);\n        }\n\n        let ra = RA(L, base, i);\n        let opcode = i.opcode;\n\n        switch (opcode) {\n            case OP_MOVE: {\n                lobject.setobjs2s(L, ra, RB(L, base, i));\n                break;\n            }\n            case OP_LOADK: {\n                let konst = k[i.Bx];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADKX: {\n                lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                let konst = k[ci.l_code[ci.l_savedpc++].Ax];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADBOOL: {\n                L.stack[ra].setbvalue(i.B !== 0);\n\n                if (i.C !== 0)\n                    ci.l_savedpc++; /* skip next instruction (if C) */\n\n                break;\n            }\n            case OP_LOADNIL: {\n                for (let j = 0; j <= i.B; j++)\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_GETUPVAL: {\n                let b = i.B;\n                lobject.setobj2s(L, ra, cl.upvals[b]);\n                break;\n            }\n            case OP_GETTABUP: {\n                let upval = cl.upvals[i.B];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, upval, rc, ra);\n                break;\n            }\n            case OP_GETTABLE: {\n                let rb = L.stack[RB(L, base, i)];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, rb, rc, ra);\n                break;\n            }\n            case OP_SETTABUP: {\n                let upval = cl.upvals[i.A];\n                let rb = RKB(L, base, k, i);\n                let rc = RKC(L, base, k, i);\n                settable(L, upval, rb, rc);\n                break;\n            }\n            case OP_SETUPVAL: {\n                let uv = cl.upvals[i.B];\n                uv.setfrom(L.stack[ra]);\n                break;\n            }\n            case OP_SETTABLE: {\n                let table = L.stack[ra];\n                let key = RKB(L, base, k, i);\n                let v = RKC(L, base, k, i);\n\n                settable(L, table, key, v);\n                break;\n            }\n            case OP_NEWTABLE: {\n                L.stack[ra].sethvalue(ltable.luaH_new(L));\n                break;\n            }\n            case OP_SELF: {\n                let rb = RB(L, base, i);\n                let rc = RKC(L, base, k, i);\n                lobject.setobjs2s(L, ra + 1, rb);\n                luaV_gettable(L, L.stack[rb], rc, ra);\n                break;\n            }\n            case OP_ADD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value + op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 + numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_ADD);\n                }\n                break;\n            }\n            case OP_SUB: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value - op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 - numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SUB);\n                }\n                break;\n            }\n            case OP_MUL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_imul(op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 * numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MUL);\n                }\n                break;\n            }\n            case OP_MOD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_mod(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(luai_nummod(L, numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MOD);\n                }\n                break;\n            }\n            case OP_POW: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.pow(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_POW);\n                }\n                break;\n            }\n            case OP_DIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 / numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_DIV);\n                }\n                break;\n            }\n            case OP_IDIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_div(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.floor(numberop1 / numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_IDIV);\n                }\n                break;\n            }\n            case OP_BAND: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 & numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BAND);\n                }\n                break;\n            }\n            case OP_BOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 | numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BOR);\n                }\n                break;\n            }\n            case OP_BXOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 ^ numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BXOR);\n                }\n                break;\n            }\n            case OP_SHL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHL);\n                }\n                break;\n            }\n            case OP_SHR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, -numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHR);\n                }\n                break;\n            }\n            case OP_UNM: {\n                let op = L.stack[RB(L, base, i)];\n                let numberop;\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue((-op.value)|0);\n                } else if ((numberop = tonumber(op)) !== false) {\n                    L.stack[ra].setfltvalue(-numberop);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_UNM);\n                }\n                break;\n            }\n            case OP_BNOT: {\n                let op = L.stack[RB(L, base, i)];\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue(~op.value);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_BNOT);\n                }\n                break;\n            }\n            case OP_NOT: {\n                let op = L.stack[RB(L, base, i)];\n                L.stack[ra].setbvalue(op.l_isfalse());\n                break;\n            }\n            case OP_LEN: {\n                luaV_objlen(L, L.stack[ra], L.stack[RB(L, base, i)]);\n                break;\n            }\n            case OP_CONCAT: {\n                let b = i.B;\n                let c = i.C;\n                L.top = base + c + 1; /* mark the end of concat operands */\n                luaV_concat(L, c - b + 1);\n                let rb = base + b;\n                lobject.setobjs2s(L, ra, rb);\n                ldo.adjust_top(L, ci.top); /* restore top */\n                break;\n            }\n            case OP_JMP: {\n                dojump(L, ci, i, 0);\n                break;\n            }\n            case OP_EQ: {\n                if (luaV_equalobj(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LT: {\n                if (luaV_lessthan(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LE: {\n                if (luaV_lessequal(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TEST: {\n                if (i.C ? L.stack[ra].l_isfalse() : !L.stack[ra].l_isfalse())\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TESTSET: {\n                let rbIdx = RB(L, base, i);\n                let rb = L.stack[rbIdx];\n                if (i.C ? rb.l_isfalse() : !rb.l_isfalse())\n                    ci.l_savedpc++;\n                else {\n                    lobject.setobjs2s(L, ra, rbIdx);\n                    donextjump(L, ci);\n                }\n                break;\n            }\n            case OP_CALL: {\n                let b = i.B;\n                let nresults = i.C - 1;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, nresults)) {\n                    if (nresults >= 0)\n                        ldo.adjust_top(L, ci.top);  /* adjust results */\n                } else {\n                    ci = L.ci;\n                    continue newframe;\n                }\n\n                break;\n            }\n            case OP_TAILCALL: {\n                let b = i.B;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, LUA_MULTRET)) { // JS function\n                } else {\n                    /* tail call: put called frame (n) in place of caller one (o) */\n                    let nci = L.ci;\n                    let oci = nci.previous;\n                    let nfunc = nci.func;\n                    let nfuncOff = nci.funcOff;\n                    let ofuncOff = oci.funcOff;\n                    let lim = nci.l_base + nfunc.value.p.numparams;\n                    if (cl.p.p.length > 0) lfunc.luaF_close(L, oci.l_base);\n                    for (let aux = 0; nfuncOff + aux < lim; aux++)\n                        lobject.setobjs2s(L, ofuncOff + aux, nfuncOff + aux);\n                    oci.l_base = ofuncOff + (nci.l_base - nfuncOff);\n                    oci.top = ofuncOff + (L.top - nfuncOff);\n                    ldo.adjust_top(L, oci.top);  /* correct top */\n                    oci.l_code = nci.l_code;\n                    oci.l_savedpc = nci.l_savedpc;\n                    oci.callstatus |= lstate.CIST_TAIL;\n                    oci.next = null;\n                    ci = L.ci = oci;\n\n                    lua_assert(L.top === oci.l_base + L.stack[ofuncOff].value.p.maxstacksize);\n\n                    continue newframe;\n                }\n                break;\n            }\n            case OP_RETURN: {\n                if (cl.p.p.length > 0) lfunc.luaF_close(L, base);\n                let b = ldo.luaD_poscall(L, ci, ra, (i.B !== 0 ? i.B - 1 : L.top - ra));\n\n                if (ci.callstatus & lstate.CIST_FRESH)\n                    return; /* external invocation: return */\n                /* invocation via reentry: continue execution */\n                ci = L.ci;\n                if (b) ldo.adjust_top(L, ci.top);\n                lua_assert(ci.callstatus & lstate.CIST_LUA);\n                lua_assert(ci.l_code[ci.l_savedpc - 1].opcode === OP_CALL);\n                continue newframe;\n            }\n            case OP_FORLOOP: {\n                if (L.stack[ra].ttisinteger()) { /* integer loop? */\n                    let step = L.stack[ra + 2].value;\n                    let idx = (L.stack[ra].value + step)|0;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgivalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setivalue(idx);\n                    }\n                } else { /* floating loop */\n                    let step = L.stack[ra + 2].value;\n                    let idx = L.stack[ra].value + step;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgfltvalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setfltvalue(idx);\n                    }\n                }\n                break;\n            }\n            case OP_FORPREP: {\n                let init = L.stack[ra];\n                let plimit = L.stack[ra + 1];\n                let pstep = L.stack[ra + 2];\n                let forlim;\n\n                if (init.ttisinteger() && pstep.ttisinteger() && (forlim = forlimit(plimit, pstep.value))) {\n                    /* all values are integer */\n                    let initv = forlim.stopnow ? 0 : init.value;\n                    plimit.value = forlim.ilimit;\n                    init.value = (initv - pstep.value)|0;\n                } else { /* try making all values floats */\n                    let nlimit, nstep, ninit;\n                    if ((nlimit = tonumber(plimit)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' limit must be a number\", true));\n                    L.stack[ra + 1].setfltvalue(nlimit);\n                    if ((nstep = tonumber(pstep)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' step must be a number\", true));\n                    L.stack[ra + 2].setfltvalue(nstep);\n                    if ((ninit = tonumber(init)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' initial value must be a number\", true));\n                    L.stack[ra].setfltvalue(ninit - nstep);\n                }\n\n                ci.l_savedpc += i.sBx;\n                break;\n            }\n            case OP_TFORCALL: {\n                let cb = ra + 3; /* call base */\n                lobject.setobjs2s(L, cb+2, ra+2);\n                lobject.setobjs2s(L, cb+1, ra+1);\n                lobject.setobjs2s(L, cb, ra);\n                ldo.adjust_top(L, cb+3);  /* func. + 2 args (state and index) */\n                ldo.luaD_call(L, cb, i.C);\n                ldo.adjust_top(L, ci.top);\n                /* go straight to OP_TFORLOOP */\n                i = ci.l_code[ci.l_savedpc++];\n                ra = RA(L, base, i);\n                lua_assert(i.opcode === OP_TFORLOOP);\n            }\n            /* fall through */\n            case OP_TFORLOOP: {\n                if (!L.stack[ra + 1].ttisnil()) { /* continue loop? */\n                    lobject.setobjs2s(L, ra, ra + 1); /* save control variable */\n                    ci.l_savedpc += i.sBx; /* jump back */\n                }\n                break;\n            }\n            case OP_SETLIST: {\n                let n = i.B;\n                let c = i.C;\n\n                if (n === 0) n = L.top - ra - 1;\n\n                if (c === 0) {\n                    lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                    c = ci.l_code[ci.l_savedpc++].Ax;\n                }\n\n                let h = L.stack[ra].value;\n                let last = ((c - 1) * LFIELDS_PER_FLUSH) + n;\n\n                for (; n > 0; n--) {\n                    ltable.luaH_setint(h, last--, L.stack[ra + n]);\n                }\n                ldo.adjust_top(L, ci.top);  /* correct top (in case of previous open call) */\n                break;\n            }\n            case OP_CLOSURE: {\n                let p = cl.p.p[i.Bx];\n                let ncl = getcached(p, cl.upvals, L.stack, base);  /* cached closure */\n                if (ncl === null)  /* no match? */\n                    pushclosure(L, p, cl.upvals, base, ra);  /* create a new one */\n                else\n                    L.stack[ra].setclLvalue(ncl);\n                break;\n            }\n            case OP_VARARG: {\n                let b = i.B - 1;\n                let n = base - ci.funcOff - cl.p.numparams - 1;\n                let j;\n\n                if (n < 0) /* less arguments than parameters? */\n                    n = 0; /* no vararg arguments */\n\n                if (b < 0) {\n                    b = n;  /* get all var. arguments */\n                    ldo.luaD_checkstack(L, n);\n                    ldo.adjust_top(L, ra + n);\n                }\n\n                for (j = 0; j < b && j < n; j++)\n                    lobject.setobjs2s(L, ra + j, base - n + j);\n\n                for (; j < b; j++) /* complete required results with nil */\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_EXTRAARG: {\n                throw Error(\"invalid opcode\");\n            }\n        }\n    }\n};\n\nconst dojump = function(L, ci, i, e) {\n    let a = i.A;\n    if (a !== 0) lfunc.luaF_close(L, ci.l_base + a - 1);\n    ci.l_savedpc += i.sBx + e;\n};\n\nconst donextjump = function(L, ci) {\n    dojump(L, ci, ci.l_code[ci.l_savedpc], 1);\n};\n\n\nconst luaV_lessthan = function(L, l, r) {\n    if (l.ttisnumber() && r.ttisnumber())\n        return LTnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) < 0 ? 1 : 0;\n    else {\n        let res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LT);\n        if (res === null)\n            ldebug.luaG_ordererror(L, l, r);\n        return res ? 1 : 0;\n    }\n};\n\nconst luaV_lessequal = function(L, l, r) {\n    let res;\n\n    if (l.ttisnumber() && r.ttisnumber())\n        return LEnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) <= 0 ? 1 : 0;\n    else {\n        res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LE);\n        if (res !== null)\n            return res ? 1 : 0;\n    }\n    /* try 'lt': */\n    L.ci.callstatus |= lstate.CIST_LEQ; /* mark it is doing 'lt' for 'le' */\n    res = ltm.luaT_callorderTM(L, r, l, ltm.TMS.TM_LT);\n    L.ci.callstatus ^= lstate.CIST_LEQ; /* clear mark */\n    if (res === null)\n        ldebug.luaG_ordererror(L, l, r);\n    return res ? 0 : 1; /* result is negated */\n};\n\nconst luaV_equalobj = function(L, t1, t2) {\n    if (t1.ttype() !== t2.ttype()) { /* not the same variant? */\n        if (t1.ttnov() !== t2.ttnov() || t1.ttnov() !== LUA_TNUMBER)\n            return 0; /* only numbers can be equal with different variants */\n        else { /* two numbers with different variants */\n            /* OPTIMIZATION: instead of calling luaV_tointeger we can just let JS do the comparison */\n            return (t1.value === t2.value) ? 1 : 0;\n        }\n    }\n\n    let tm;\n\n    /* values have same type and same variant */\n    switch(t1.ttype()) {\n        case LUA_TNIL:\n            return 1;\n        case LUA_TBOOLEAN:\n            return t1.value == t2.value ? 1 : 0; // Might be 1 or true\n        case LUA_TLIGHTUSERDATA:\n        case LUA_TNUMINT:\n        case LUA_TNUMFLT:\n        case LUA_TLCF:\n            return t1.value === t2.value ? 1 : 0;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR: {\n            return luaS_eqlngstr(t1.tsvalue(), t2.tsvalue()) ? 1 : 0;\n        }\n        case LUA_TUSERDATA:\n        case LUA_TTABLE:\n            if (t1.value === t2.value) return 1;\n            else if (L === null) return 0;\n\n            tm = ltm.fasttm(L, t1.value.metatable, ltm.TMS.TM_EQ);\n            if (tm === null)\n                tm = ltm.fasttm(L, t2.value.metatable, ltm.TMS.TM_EQ);\n            break;\n        default:\n            return t1.value === t2.value ? 1 : 0;\n    }\n\n    if (tm === null) /* no TM? */\n        return 0;\n\n    let tv = new lobject.TValue(); /* doesn't use the stack */\n    ltm.luaT_callTM(L, tm, t1, t2, tv, 1);\n    return tv.l_isfalse() ? 0 : 1;\n};\n\nconst luaV_rawequalobj = function(t1, t2) {\n    return luaV_equalobj(null, t1, t2);\n};\n\nconst forlimit = function(obj, step) {\n    let stopnow = false;\n    let ilimit = luaV_tointeger(obj, step < 0 ? 2 : 1);\n    if (ilimit === false) {\n        let n = tonumber(obj);\n        if (n === false)\n            return false;\n\n        if (0 < n) {\n            ilimit = LUA_MAXINTEGER;\n            if (step < 0) stopnow = true;\n        } else {\n            ilimit = LUA_MININTEGER;\n            if (step >= 0) stopnow = true;\n        }\n    }\n\n    return {\n        stopnow: stopnow,\n        ilimit: ilimit\n    };\n};\n\n/*\n** try to convert a value to an integer, rounding according to 'mode':\n** mode === 0: accepts only integral values\n** mode === 1: takes the floor of the number\n** mode === 2: takes the ceil of the number\n*/\nconst luaV_tointeger = function(obj, mode) {\n    if (obj.ttisfloat()) {\n        let n = obj.value;\n        let f = Math.floor(n);\n\n        if (n !== f) { /* not an integral value? */\n            if (mode === 0)\n                return false;  /* fails if mode demands integral value */\n            else if (mode > 1)  /* needs ceil? */\n                f += 1;  /* convert floor to ceil (remember: n !== f) */\n        }\n\n        return lua_numbertointeger(f);\n    } else if (obj.ttisinteger()) {\n        return obj.value;\n    } else if (cvt2num(obj)) {\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(obj.svalue(), v) === (obj.vslen() + 1))\n            return luaV_tointeger(v, mode);\n    }\n\n    return false;\n};\n\nconst tointeger = function(o) {\n    return o.ttisinteger() ? o.value : luaV_tointeger(o, 0);\n};\n\nconst tonumber = function(o) {\n    if (o.ttnov() === LUA_TNUMBER)\n        return o.value;\n\n    if (cvt2num(o)) {  /* string convertible to number? */\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(o.svalue(), v) === (o.vslen() + 1))\n            return v.value;\n    }\n\n    return false;\n};\n\n/*\n** Return 'l < r', for numbers.\n** As fengari uses javascript numbers for both floats and integers and has\n** correct semantics, we can just compare values.\n*/\nconst LTnum = function(l, r) {\n    return l.value < r.value;\n};\n\n/*\n** Return 'l <= r', for numbers.\n*/\nconst LEnum = function(l, r) {\n    return l.value <= r.value;\n};\n\n/*\n** Compare two strings 'ls' x 'rs', returning an integer smaller-equal-\n** -larger than zero if 'ls' is smaller-equal-larger than 'rs'.\n*/\nconst l_strcmp = function(ls, rs) {\n    let l = luaS_hashlongstr(ls);\n    let r = luaS_hashlongstr(rs);\n    /* In fengari we assume string hash has same collation as byte values */\n    if (l === r)\n        return 0;\n    else if (l < r)\n        return -1;\n    else\n        return 1;\n};\n\n/*\n** Main operation 'ra' = #rb'.\n*/\nconst luaV_objlen = function(L, ra, rb) {\n    let tm;\n    switch(rb.ttype()) {\n        case LUA_TTABLE: {\n            let h = rb.value;\n            tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_LEN);\n            if (tm !== null) break; /* metamethod? break switch to call it */\n            ra.setivalue(ltable.luaH_getn(h)); /* else primitive len */\n            return;\n        }\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            ra.setivalue(rb.vslen());\n            return;\n        default: {\n            tm = ltm.luaT_gettmbyobj(L, rb, ltm.TMS.TM_LEN);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, rb, to_luastring(\"get length of\", true));\n            break;\n        }\n    }\n\n    ltm.luaT_callTM(L, tm, rb, rb, ra, 1);\n};\n\n/* Shim taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul */\nconst luaV_imul = Math.imul || function(a, b) {\n    let aHi = (a >>> 16) & 0xffff;\n    let aLo = a & 0xffff;\n    let bHi = (b >>> 16) & 0xffff;\n    let bLo = b & 0xffff;\n    /*\n    ** the shift by 0 fixes the sign on the high part\n    ** the final |0 converts the unsigned value into a signed value\n    */\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n};\n\nconst luaV_div = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to divide by zero\"));\n    return Math.floor(m / n)|0;\n};\n\n// % semantic on negative numbers is different in js\nconst luaV_mod = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to perform 'n%%0'\"));\n    return (m - Math.floor(m / n) * n)|0;\n};\n\nconst NBITS = 32;\n\nconst luaV_shiftl = function(x, y) {\n    if (y < 0) {  /* shift right? */\n        if (y <= -NBITS) return 0;\n        else return x >>> -y;\n    }\n    else {  /* shift left */\n        if (y >= NBITS) return 0;\n        else return x << y;\n    }\n};\n\n/*\n** check whether cached closure in prototype 'p' may be reused, that is,\n** whether there is a cached closure with the same upvalues needed by\n** new closure to be created.\n*/\nconst getcached = function(p, encup, stack, base) {\n    let c = p.cache;\n    if (c !== null) {  /* is there a cached closure? */\n        let uv = p.upvalues;\n        let nup = uv.length;\n        for (let i = 0; i < nup; i++) {  /* check whether it has right upvalues */\n            let v = uv[i].instack ? stack[base + uv[i].idx] : encup[uv[i].idx];\n            if (c.upvals[i] !== v)\n                return null;  /* wrong upvalue; cannot reuse closure */\n        }\n    }\n    return c;  /* return cached closure (or NULL if no cached closure) */\n};\n\n/*\n** create a new Lua closure, push it in the stack, and initialize\n** its upvalues.\n*/\nconst pushclosure = function(L, p, encup, base, ra) {\n    let nup = p.upvalues.length;\n    let uv = p.upvalues;\n    let ncl = new lobject.LClosure(L, nup);\n    ncl.p = p;\n    L.stack[ra].setclLvalue(ncl);\n    for (let i = 0; i < nup; i++) {\n        if (uv[i].instack)\n            ncl.upvals[i] = lfunc.luaF_findupval(L, base + uv[i].idx);\n        else\n            ncl.upvals[i] = encup[uv[i].idx];\n    }\n    p.cache = ncl;  /* save it on cache for reuse */\n};\n\nconst cvt2str = function(o) {\n    return o.ttisnumber();\n};\n\nconst cvt2num = function(o) {\n    return o.ttisstring();\n};\n\nconst tostring = function(L, i) {\n    let o = L.stack[i];\n\n    if (o.ttisstring()) return true;\n\n    if (cvt2str(o)) {\n        lobject.luaO_tostring(L, o);\n        return true;\n    }\n\n    return false;\n};\n\nconst isemptystr = function(o) {\n    return o.ttisstring() && o.vslen() === 0;\n};\n\n/* copy strings in stack from top - n up to top - 1 to buffer */\nconst copy2buff = function(L, top, n, buff) {\n    let tl = 0;  /* size already copied */\n    do {\n        let tv = L.stack[top-n];\n        let l = tv.vslen();  /* length of string being copied */\n        let s = tv.svalue();\n        buff.set(s, tl);\n        tl += l;\n    } while (--n > 0);\n};\n\n/*\n** Main operation for concatenation: concat 'total' values in the stack,\n** from 'L->top - total' up to 'L->top - 1'.\n*/\nconst luaV_concat = function(L, total) {\n    lua_assert(total >= 2);\n    do {\n        let top = L.top;\n        let n = 2; /* number of elements handled in this pass (at least 2) */\n\n        if (!(L.stack[top-2].ttisstring() || cvt2str(L.stack[top-2])) || !tostring(L, top - 1)) {\n            ltm.luaT_trybinTM(L, L.stack[top-2], L.stack[top-1], L.stack[top-2], ltm.TMS.TM_CONCAT);\n        } else if (isemptystr(L.stack[top-1])) {\n            tostring(L, top - 2);\n        } else if (isemptystr(L.stack[top-2])) {\n            lobject.setobjs2s(L, top - 2, top - 1);\n        } else {\n            /* at least two non-empty string values; get as many as possible */\n            let tl = L.stack[top-1].vslen();\n            /* collect total length and number of strings */\n            for (n = 1; n < total && tostring(L, top - n - 1); n++) {\n                let l = L.stack[top - n - 1].vslen();\n                tl += l;\n            }\n            let buff = new Uint8Array(tl);\n            copy2buff(L, top, n, buff);\n            let ts = luaS_bless(L, buff);\n            lobject.setsvalue2s(L, top - n, ts);\n        }\n        total -= n - 1; /* got 'n' strings to create 1 new */\n        /* popped 'n' strings and pushed one */\n        for (; L.top > top-(n-1);)\n            delete L.stack[--L.top];\n    } while (total > 1); /* repeat until only 1 result left */\n};\n\nconst MAXTAGLOOP = 2000;\n\nconst luaV_gettable = function(L, t, key, ra) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n\n        if (!t.ttistable()) {\n            tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_INDEX);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true)); /* no metamethod */\n            /* else will try the metamethod */\n        } else {\n            let slot = ltable.luaH_get(L, t.value, key);\n            if (!slot.ttisnil()) {\n                lobject.setobj2s(L, ra, slot);\n                return;\n            } else { /* 't' is a table */\n                tm = ltm.fasttm(L, t.value.metatable, ltm.TMS.TM_INDEX);  /* table's metamethod */\n                if (tm === null) { /* no metamethod? */\n                    L.stack[ra].setnilvalue(); /* result is nil */\n                    return;\n                }\n            }\n            /* else will try the metamethod */\n        }\n        if (tm.ttisfunction()) { /* is metamethod a function? */\n            ltm.luaT_callTM(L, tm, t, key, L.stack[ra], 1); /* call it */\n            return;\n        }\n        t = tm;  /* else try to access 'tm[key]' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__index' chain too long; possible loop\", true));\n};\n\nconst settable = function(L, t, key, val) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n        if (t.ttistable()) {\n            let h = t.value; /* save 't' table */\n            let slot = ltable.luaH_get(L, h, key);\n            if (!slot.ttisnil() || (tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_NEWINDEX)) === null) {\n                ltable.luaH_setfrom(L, h, key, val);\n                ltable.invalidateTMcache(h);\n                return;\n            }\n            /* else will try the metamethod */\n        } else { /* not a table; check metamethod */\n            if ((tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_NEWINDEX)).ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true));\n        }\n        /* try the metamethod */\n        if (tm.ttisfunction()) {\n            ltm.luaT_callTM(L, tm, t, key, val, 0);\n            return;\n        }\n        t = tm;  /* else repeat assignment over 'tm' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__newindex' chain too long; possible loop\", true));\n};\n\n\nmodule.exports.cvt2str          = cvt2str;\nmodule.exports.cvt2num          = cvt2num;\nmodule.exports.luaV_gettable    = luaV_gettable;\nmodule.exports.luaV_concat      = luaV_concat;\nmodule.exports.luaV_div         = luaV_div;\nmodule.exports.luaV_equalobj    = luaV_equalobj;\nmodule.exports.luaV_execute     = luaV_execute;\nmodule.exports.luaV_finishOp    = luaV_finishOp;\nmodule.exports.luaV_imul        = luaV_imul;\nmodule.exports.luaV_lessequal   = luaV_lessequal;\nmodule.exports.luaV_lessthan    = luaV_lessthan;\nmodule.exports.luaV_mod         = luaV_mod;\nmodule.exports.luaV_objlen      = luaV_objlen;\nmodule.exports.luaV_rawequalobj = luaV_rawequalobj;\nmodule.exports.luaV_shiftl      = luaV_shiftl;\nmodule.exports.luaV_tointeger   = luaV_tointeger;\nmodule.exports.settable         = settable;\nmodule.exports.tointeger        = tointeger;\nmodule.exports.tonumber         = tonumber;\n","\"use strict\";\n\nconst OpCodes = [\n    \"MOVE\",\n    \"LOADK\",\n    \"LOADKX\",\n    \"LOADBOOL\",\n    \"LOADNIL\",\n    \"GETUPVAL\",\n    \"GETTABUP\",\n    \"GETTABLE\",\n    \"SETTABUP\",\n    \"SETUPVAL\",\n    \"SETTABLE\",\n    \"NEWTABLE\",\n    \"SELF\",\n    \"ADD\",\n    \"SUB\",\n    \"MUL\",\n    \"MOD\",\n    \"POW\",\n    \"DIV\",\n    \"IDIV\",\n    \"BAND\",\n    \"BOR\",\n    \"BXOR\",\n    \"SHL\",\n    \"SHR\",\n    \"UNM\",\n    \"BNOT\",\n    \"NOT\",\n    \"LEN\",\n    \"CONCAT\",\n    \"JMP\",\n    \"EQ\",\n    \"LT\",\n    \"LE\",\n    \"TEST\",\n    \"TESTSET\",\n    \"CALL\",\n    \"TAILCALL\",\n    \"RETURN\",\n    \"FORLOOP\",\n    \"FORPREP\",\n    \"TFORCALL\",\n    \"TFORLOOP\",\n    \"SETLIST\",\n    \"CLOSURE\",\n    \"VARARG\",\n    \"EXTRAARG\"\n];\n\nconst OpCodesI = {\n    OP_MOVE:     0,\n    OP_LOADK:    1,\n    OP_LOADKX:   2,\n    OP_LOADBOOL: 3,\n    OP_LOADNIL:  4,\n    OP_GETUPVAL: 5,\n    OP_GETTABUP: 6,\n    OP_GETTABLE: 7,\n    OP_SETTABUP: 8,\n    OP_SETUPVAL: 9,\n    OP_SETTABLE: 10,\n    OP_NEWTABLE: 11,\n    OP_SELF:     12,\n    OP_ADD:      13,\n    OP_SUB:      14,\n    OP_MUL:      15,\n    OP_MOD:      16,\n    OP_POW:      17,\n    OP_DIV:      18,\n    OP_IDIV:     19,\n    OP_BAND:     20,\n    OP_BOR:      21,\n    OP_BXOR:     22,\n    OP_SHL:      23,\n    OP_SHR:      24,\n    OP_UNM:      25,\n    OP_BNOT:     26,\n    OP_NOT:      27,\n    OP_LEN:      28,\n    OP_CONCAT:   29,\n    OP_JMP:      30,\n    OP_EQ:       31,\n    OP_LT:       32,\n    OP_LE:       33,\n    OP_TEST:     34,\n    OP_TESTSET:  35,\n    OP_CALL:     36,\n    OP_TAILCALL: 37,\n    OP_RETURN:   38,\n    OP_FORLOOP:  39,\n    OP_FORPREP:  40,\n    OP_TFORCALL: 41,\n    OP_TFORLOOP: 42,\n    OP_SETLIST:  43,\n    OP_CLOSURE:  44,\n    OP_VARARG:   45,\n    OP_EXTRAARG: 46\n};\n\n/*\n** masks for instruction properties. The format is:\n** bits 0-1: op mode\n** bits 2-3: C arg mode\n** bits 4-5: B arg mode\n** bit 6: instruction set register A\n** bit 7: operator is a test (next instruction must be a jump)\n*/\nconst OpArgN = 0;  /* argument is not used */\nconst OpArgU = 1;  /* argument is used */\nconst OpArgR = 2;  /* argument is a register or a jump offset */\nconst OpArgK = 3;  /* argument is a constant or register/constant */\n\n/* basic instruction format */\nconst iABC  = 0;\nconst iABx  = 1;\nconst iAsBx = 2;\nconst iAx   = 3;\n\nconst luaP_opmodes = [\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_MOVE */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgN << 2 | iABx,   /* OP_LOADK */\n    0 << 7 | 1 << 6 | OpArgN << 4 | OpArgN << 2 | iABx,   /* OP_LOADKX */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_LOADBOOL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_LOADNIL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_GETUPVAL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgK << 2 | iABC,   /* OP_GETTABUP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_GETTABLE */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABUP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_SETUPVAL */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABLE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_NEWTABLE */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_SELF */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_ADD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SUB */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MUL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MOD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_POW */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_DIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_IDIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BAND */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BXOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHR */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_UNM */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_BNOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_NOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_LEN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgR << 2 | iABC,   /* OP_CONCAT */\n    0 << 7 | 0 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_JMP */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_EQ */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LT */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LE */\n    1 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TEST */\n    1 << 7 | 1 << 6 | OpArgR << 4 | OpArgU << 2 | iABC,   /* OP_TESTSET */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_CALL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_TAILCALL */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_RETURN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORLOOP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORPREP */\n    0 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TFORCALL */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_TFORLOOP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_SETLIST */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABx,   /* OP_CLOSURE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_VARARG */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iAx     /* OP_EXTRAARG */\n];\n\nconst getOpMode = function(m) {\n    return luaP_opmodes[m] & 3;\n};\n\nconst getBMode = function(m) {\n    return (luaP_opmodes[m] >> 4) & 3;\n};\n\nconst getCMode = function(m) {\n    return (luaP_opmodes[m] >> 2) & 3;\n};\n\nconst testAMode = function(m) {\n    return luaP_opmodes[m] & (1 << 6);\n};\n\nconst testTMode = function(m) {\n    return luaP_opmodes[m] & (1 << 7);\n};\n\nconst SIZE_C     = 9;\nconst SIZE_B     = 9;\nconst SIZE_Bx    = (SIZE_C + SIZE_B);\nconst SIZE_A     = 8;\nconst SIZE_Ax    = (SIZE_C + SIZE_B + SIZE_A);\nconst SIZE_OP    = 6;\nconst POS_OP     = 0;\nconst POS_A      = (POS_OP + SIZE_OP);\nconst POS_C      = (POS_A + SIZE_A);\nconst POS_B      = (POS_C + SIZE_C);\nconst POS_Bx     = POS_C;\nconst POS_Ax     = POS_A;\nconst MAXARG_Bx  = ((1 << SIZE_Bx) - 1);\nconst MAXARG_sBx = (MAXARG_Bx >> 1); /* 'sBx' is signed */\nconst MAXARG_Ax  = ((1<<SIZE_Ax)-1);\nconst MAXARG_A   = ((1 << SIZE_A) - 1);\nconst MAXARG_B   = ((1 << SIZE_B) - 1);\nconst MAXARG_C   = ((1 << SIZE_C) - 1);\n\n/* this bit 1 means constant (0 means register) */\nconst BITRK      = (1 << (SIZE_B - 1));\n\nconst MAXINDEXRK = (BITRK - 1);\n\n/*\n** invalid register that fits in 8 bits\n*/\nconst NO_REG     = MAXARG_A;\n\n/* test whether value is a constant */\nconst ISK = function (x) {\n    return x & BITRK;\n};\n\n/* gets the index of the constant */\nconst INDEXK = function (r) {\n    return r & ~BITRK;\n};\n\n/* code a constant index as a RK value */\nconst RKASK = function(x) {\n    return x | BITRK;\n};\n\n\n/* creates a mask with 'n' 1 bits at position 'p' */\nconst MASK1 = function(n, p) {\n    return ((~((~0)<<(n)))<<(p));\n};\n\n/* creates a mask with 'n' 0 bits at position 'p' */\nconst MASK0 = function(n, p) {\n    return (~MASK1(n, p));\n};\n\nconst GET_OPCODE = function(i) {\n    return i.opcode;\n};\n\nconst SET_OPCODE = function(i, o) {\n    i.code = (i.code & MASK0(SIZE_OP, POS_OP)) | ((o << POS_OP) & MASK1(SIZE_OP, POS_OP));\n    return fullins(i);\n};\n\nconst setarg = function(i, v, pos, size) {\n    i.code = (i.code & MASK0(size, pos)) | ((v << pos) & MASK1(size, pos));\n    return fullins(i);\n};\n\nconst GETARG_A = function(i) {\n    return i.A;\n};\n\nconst SETARG_A = function(i,v) {\n    return setarg(i, v, POS_A, SIZE_A);\n};\n\nconst GETARG_B = function(i) {\n    return i.B;\n};\n\nconst SETARG_B = function(i,v) {\n    return setarg(i, v, POS_B, SIZE_B);\n};\n\nconst GETARG_C = function(i) {\n    return i.C;\n};\n\nconst SETARG_C = function(i,v) {\n    return setarg(i, v, POS_C, SIZE_C);\n};\n\nconst GETARG_Bx = function(i) {\n    return i.Bx;\n};\n\nconst SETARG_Bx = function(i,v) {\n    return setarg(i, v, POS_Bx, SIZE_Bx);\n};\n\nconst GETARG_Ax = function(i) {\n    return i.Ax;\n};\n\nconst SETARG_Ax = function(i,v) {\n    return setarg(i, v, POS_Ax, SIZE_Ax);\n};\n\nconst GETARG_sBx = function(i) {\n    return i.sBx;\n};\n\nconst SETARG_sBx = function(i, b) {\n    return SETARG_Bx(i, b + MAXARG_sBx);\n};\n\n/*\n** Pre-calculate all possible part of the instruction\n*/\nconst fullins = function(ins) {\n    if (typeof ins === \"number\") {\n        return {\n            code:   ins,\n            opcode: (ins >> POS_OP) & MASK1(SIZE_OP, 0),\n            A:      (ins >> POS_A)  & MASK1(SIZE_A,  0),\n            B:      (ins >> POS_B)  & MASK1(SIZE_B,  0),\n            C:      (ins >> POS_C)  & MASK1(SIZE_C,  0),\n            Bx:     (ins >> POS_Bx) & MASK1(SIZE_Bx, 0),\n            Ax:     (ins >> POS_Ax) & MASK1(SIZE_Ax, 0),\n            sBx:    ((ins >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n        };\n    } else {\n        let i = ins.code;\n        ins.opcode = (i >> POS_OP) & MASK1(SIZE_OP, 0);\n        ins.A      = (i >> POS_A)  & MASK1(SIZE_A,  0);\n        ins.B      = (i >> POS_B)  & MASK1(SIZE_B,  0);\n        ins.C      = (i >> POS_C)  & MASK1(SIZE_C,  0);\n        ins.Bx     = (i >> POS_Bx) & MASK1(SIZE_Bx, 0);\n        ins.Ax     = (i >> POS_Ax) & MASK1(SIZE_Ax, 0);\n        ins.sBx    = ((i >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx;\n        return ins;\n    }\n};\n\nconst CREATE_ABC = function(o, a, b, c) {\n    return fullins(o << POS_OP | a << POS_A | b << POS_B | c << POS_C);\n};\n\nconst CREATE_ABx = function(o, a, bc) {\n    return fullins(o << POS_OP | a << POS_A | bc << POS_Bx);\n};\n\nconst CREATE_Ax = function(o, a) {\n    return fullins(o << POS_OP | a << POS_Ax);\n};\n\n/* number of list items to accumulate before a SETLIST instruction */\nconst LFIELDS_PER_FLUSH = 50;\n\nmodule.exports.BITRK               = BITRK;\nmodule.exports.CREATE_ABC          = CREATE_ABC;\nmodule.exports.CREATE_ABx          = CREATE_ABx;\nmodule.exports.CREATE_Ax           = CREATE_Ax;\nmodule.exports.GET_OPCODE          = GET_OPCODE;\nmodule.exports.GETARG_A            = GETARG_A;\nmodule.exports.GETARG_B            = GETARG_B;\nmodule.exports.GETARG_C            = GETARG_C;\nmodule.exports.GETARG_Bx           = GETARG_Bx;\nmodule.exports.GETARG_Ax           = GETARG_Ax;\nmodule.exports.GETARG_sBx          = GETARG_sBx;\nmodule.exports.INDEXK              = INDEXK;\nmodule.exports.ISK                 = ISK;\nmodule.exports.LFIELDS_PER_FLUSH   = LFIELDS_PER_FLUSH;\nmodule.exports.MAXARG_A            = MAXARG_A;\nmodule.exports.MAXARG_Ax           = MAXARG_Ax;\nmodule.exports.MAXARG_B            = MAXARG_B;\nmodule.exports.MAXARG_Bx           = MAXARG_Bx;\nmodule.exports.MAXARG_C            = MAXARG_C;\nmodule.exports.MAXARG_sBx          = MAXARG_sBx;\nmodule.exports.MAXINDEXRK          = MAXINDEXRK;\nmodule.exports.NO_REG              = NO_REG;\nmodule.exports.OpArgK              = OpArgK;\nmodule.exports.OpArgN              = OpArgN;\nmodule.exports.OpArgR              = OpArgR;\nmodule.exports.OpArgU              = OpArgU;\nmodule.exports.OpCodes             = OpCodes;\nmodule.exports.OpCodesI            = OpCodesI;\nmodule.exports.POS_A               = POS_A;\nmodule.exports.POS_Ax              = POS_Ax;\nmodule.exports.POS_B               = POS_B;\nmodule.exports.POS_Bx              = POS_Bx;\nmodule.exports.POS_C               = POS_C;\nmodule.exports.POS_OP              = POS_OP;\nmodule.exports.RKASK               = RKASK;\nmodule.exports.SETARG_A            = SETARG_A;\nmodule.exports.SETARG_Ax           = SETARG_Ax;\nmodule.exports.SETARG_B            = SETARG_B;\nmodule.exports.SETARG_Bx           = SETARG_Bx;\nmodule.exports.SETARG_C            = SETARG_C;\nmodule.exports.SETARG_sBx          = SETARG_sBx;\nmodule.exports.SET_OPCODE          = SET_OPCODE;\nmodule.exports.SIZE_A              = SIZE_A;\nmodule.exports.SIZE_Ax             = SIZE_Ax;\nmodule.exports.SIZE_B              = SIZE_B;\nmodule.exports.SIZE_Bx             = SIZE_Bx;\nmodule.exports.SIZE_C              = SIZE_C;\nmodule.exports.SIZE_OP             = SIZE_OP;\nmodule.exports.fullins             = fullins;\nmodule.exports.getBMode            = getBMode;\nmodule.exports.getCMode            = getCMode;\nmodule.exports.getOpMode           = getOpMode;\nmodule.exports.iABC                = iABC;\nmodule.exports.iABx                = iABx;\nmodule.exports.iAsBx               = iAsBx;\nmodule.exports.iAx                 = iAx;\nmodule.exports.testAMode           = testAMode;\nmodule.exports.testTMode           = testTMode;\n","\"use strict\";\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR\n} = require(\"./lua.js\");\n\nconst LUA_VERSUFFIX = \"_\" + LUA_VERSION_MAJOR + \"_\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSUFFIX = LUA_VERSUFFIX;\n\nmodule.exports.lua_assert = function(c) {};\n\nmodule.exports.luaopen_base = require(\"./lbaselib.js\").luaopen_base;\n\nconst LUA_COLIBNAME = \"coroutine\";\nmodule.exports.LUA_COLIBNAME = LUA_COLIBNAME;\nmodule.exports.luaopen_coroutine = require(\"./lcorolib.js\").luaopen_coroutine;\n\nconst LUA_TABLIBNAME = \"table\";\nmodule.exports.LUA_TABLIBNAME = LUA_TABLIBNAME;\nmodule.exports.luaopen_table = require(\"./ltablib.js\").luaopen_table;\n\nif (typeof process !== \"undefined\") {\n    const LUA_IOLIBNAME = \"io\";\n    module.exports.LUA_IOLIBNAME = LUA_IOLIBNAME;\n    module.exports.luaopen_io = require(\"./liolib.js\").luaopen_io;\n}\n\nconst LUA_OSLIBNAME = \"os\";\nmodule.exports.LUA_OSLIBNAME = LUA_OSLIBNAME;\nmodule.exports.luaopen_os = require(\"./loslib.js\").luaopen_os;\n\nconst LUA_STRLIBNAME = \"string\";\nmodule.exports.LUA_STRLIBNAME = LUA_STRLIBNAME;\nmodule.exports.luaopen_string = require(\"./lstrlib.js\").luaopen_string;\n\nconst LUA_UTF8LIBNAME = \"utf8\";\nmodule.exports.LUA_UTF8LIBNAME = LUA_UTF8LIBNAME;\nmodule.exports.luaopen_utf8 = require(\"./lutf8lib.js\").luaopen_utf8;\n\nconst LUA_BITLIBNAME = \"bit32\";\nmodule.exports.LUA_BITLIBNAME = LUA_BITLIBNAME;\n// module.exports.luaopen_bit32 = require(\"./lbitlib.js\").luaopen_bit32;\n\nconst LUA_MATHLIBNAME = \"math\";\nmodule.exports.LUA_MATHLIBNAME = LUA_MATHLIBNAME;\nmodule.exports.luaopen_math = require(\"./lmathlib.js\").luaopen_math;\n\nconst LUA_DBLIBNAME = \"debug\";\nmodule.exports.LUA_DBLIBNAME = LUA_DBLIBNAME;\nmodule.exports.luaopen_debug = require(\"./ldblib.js\").luaopen_debug;\n\nconst LUA_LOADLIBNAME = \"package\";\nmodule.exports.LUA_LOADLIBNAME = LUA_LOADLIBNAME;\nmodule.exports.luaopen_package = require(\"./loadlib.js\").luaopen_package;\n\nconst LUA_FENGARILIBNAME = \"fengari\";\nmodule.exports.LUA_FENGARILIBNAME = LUA_FENGARILIBNAME;\nmodule.exports.luaopen_fengari = require(\"./fengarilib.js\").luaopen_fengari;\n\nconst linit = require('./linit.js');\nmodule.exports.luaL_openlibs = linit.luaL_openlibs;\n","\"use strict\";\n\nconst {\n\tlua,\n\tlauxlib,\n\tlualib,\n\tto_luastring\n} = require('fengari');\nconst {\n\tLUA_MULTRET,\n\tLUA_OK,\n\tLUA_REGISTRYINDEX,\n\tLUA_RIDX_MAINTHREAD,\n\tLUA_TBOOLEAN,\n\tLUA_TFUNCTION,\n\tLUA_TLIGHTUSERDATA,\n\tLUA_TNIL,\n\tLUA_TNONE,\n\tLUA_TNUMBER,\n\tLUA_TSTRING,\n\tLUA_TTABLE,\n\tLUA_TTHREAD,\n\tLUA_TUSERDATA,\n\tlua_atnativeerror,\n\tlua_call,\n\tlua_getfield,\n\tlua_gettable,\n\tlua_gettop,\n\tlua_isnil,\n\tlua_isproxy,\n\tlua_newuserdata,\n\tlua_pcall,\n\tlua_pop,\n\tlua_pushboolean,\n\tlua_pushcfunction,\n\tlua_pushinteger,\n\tlua_pushlightuserdata,\n\tlua_pushliteral,\n\tlua_pushnil,\n\tlua_pushnumber,\n\tlua_pushstring,\n\tlua_pushvalue,\n\tlua_rawgeti,\n\tlua_rawgetp,\n\tlua_rawsetp,\n\tlua_rotate,\n\tlua_setfield,\n\tlua_settable,\n\tlua_settop,\n\tlua_toboolean,\n\tlua_tojsstring,\n\tlua_tonumber,\n\tlua_toproxy,\n\tlua_tothread,\n\tlua_touserdata,\n\tlua_type\n} = lua;\nconst {\n\tluaL_argerror,\n\tluaL_checkany,\n\tluaL_checkoption,\n\tluaL_checkstack,\n\tluaL_checkudata,\n\tluaL_error,\n\tluaL_getmetafield,\n\tluaL_newlib,\n\tluaL_newmetatable,\n\tluaL_requiref,\n\tluaL_setfuncs,\n\tluaL_setmetatable,\n\tluaL_testudata,\n\tluaL_tolstring\n} = lauxlib;\nconst {\n\tluaopen_base\n} = lualib;\n\nconst FENGARI_INTEROP_VERSION_MAJOR   = \"0\";\nconst FENGARI_INTEROP_VERSION_MINOR   = \"1\";\nconst FENGARI_INTEROP_VERSION_NUM     = 1;\nconst FENGARI_INTEROP_VERSION_RELEASE = \"2\";\nconst FENGARI_INTEROP_VERSION         = FENGARI_INTEROP_VERSION_MAJOR + \".\" + FENGARI_INTEROP_VERSION_MINOR;\nconst FENGARI_INTEROP_RELEASE         = FENGARI_INTEROP_VERSION + \".\" + FENGARI_INTEROP_VERSION_RELEASE;\n\nlet custom_inspect_symbol;\nif (typeof process !== \"undefined\") {\n\ttry { /* for node.js */\n\t\tcustom_inspect_symbol = require('util').inspect.custom;\n\t} catch (e) {}\n}\n\nconst global_env = (function() {\n\t/* global WorkerGlobalScope */ /* see https://github.com/sindresorhus/globals/issues/127 */\n\tif (typeof process !== \"undefined\") {\n\t\t/* node */\n\t\treturn global;\n\t} else if (typeof window !== \"undefined\") {\n\t\t/* browser window */\n\t\treturn window;\n\t} else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t\t/* web worker */\n\t\treturn self;\n\t} else {\n\t\t/* unknown global env */\n\t\treturn (0, eval)('this'); /* use non-strict mode to get global env */\n\t}\n})();\n\nlet apply, construct, Reflect_deleteProperty;\nif (typeof Reflect !== \"undefined\") {\n\tapply = Reflect.apply;\n\tconstruct = Reflect.construct;\n\tReflect_deleteProperty = Reflect.deleteProperty;\n} else {\n\tconst fApply = Function.apply;\n\tconst bind = Function.bind;\n\tapply = function(target, thisArgument, argumentsList) {\n\t\treturn fApply.call(target, thisArgument, argumentsList);\n\t};\n\tconstruct = function(target, argumentsList /*, newTarget */) {\n\t\tswitch (argumentsList.length) {\n\t\t\tcase 0: return new target();\n\t\t\tcase 1: return new target(argumentsList[0]);\n\t\t\tcase 2: return new target(argumentsList[0], argumentsList[1]);\n\t\t\tcase 3: return new target(argumentsList[0], argumentsList[1], argumentsList[2]);\n\t\t\tcase 4: return new target(argumentsList[0], argumentsList[1], argumentsList[2], argumentsList[3]);\n\t\t}\n\t\tlet args = [null];\n\t\targs.push.apply(args, argumentsList);\n\t\treturn new (bind.apply(target, args))();\n\t};\n\t/* need to be in non-strict mode */\n\tReflect_deleteProperty = Function(\"t\", \"k\", \"delete t[k]\");\n}\n\n/*\nString.concat coerces to string with correct hint for Symbol.toPrimitive\n`this` isn't allowed to be null, so bind the empty string\n*/\nconst toString = String.prototype.concat.bind(\"\");\n\nconst isobject = function(o) {\n\treturn typeof o === \"object\" ? o !== null : typeof o === \"function\";\n};\n\nconst js_tname = to_luastring(\"js object\");\nconst js_library_not_loaded = \"js library not loaded into lua_State\";\n\nconst testjs = function(L, idx) {\n\tlet u = luaL_testudata(L, idx, js_tname);\n\tif (u)\n\t\treturn u.data;\n\telse\n\t\treturn void 0;\n};\n\nconst checkjs = function(L, idx) {\n\treturn luaL_checkudata(L, idx, js_tname).data;\n};\n\nconst pushjs = function(L, v) {\n\tlet b = lua_newuserdata(L);\n\tb.data = v;\n\tluaL_setmetatable(L, js_tname);\n};\n\nconst getmainthread = function(L) {\n\tlua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_MAINTHREAD);\n\tlet mainL = lua_tothread(L, -1);\n\tlua_pop(L, 1);\n\treturn mainL;\n};\n\n/* weak map from states to proxy objects (for each object) in that state */\nconst states = new WeakMap();\n\nconst push = function(L, v) {\n\tswitch (typeof v) {\n\t\tcase \"undefined\":\n\t\t\tlua_pushnil(L);\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tlua_pushnumber(L, v);\n\t\t\tbreak;\n\t\tcase \"string\":\n\t\t\tlua_pushstring(L, to_luastring(v));\n\t\t\tbreak;\n\t\tcase \"boolean\":\n\t\t\tlua_pushboolean(L, v);\n\t\t\tbreak;\n\t\tcase \"symbol\":\n\t\t\tlua_pushlightuserdata(L, v);\n\t\t\tbreak;\n\t\tcase \"function\":\n\t\t\tif (lua_isproxy(v, L)) {\n\t\t\t\tv(L);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tcase \"object\":\n\t\t\tif (v === null) {\n\t\t\t\t/* can't use null in a WeakMap; grab from registry */\n\t\t\t\tif (lua_rawgetp(L, LUA_REGISTRYINDEX, null) !== LUA_TUSERDATA)\n\t\t\t\t\tthrow Error(js_library_not_loaded);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* fall through */\n\t\tdefault: {\n\t\t\t/* Try and push same object again */\n\t\t\tlet objects_seen = states.get(getmainthread(L));\n\t\t\tif (!objects_seen) throw Error(js_library_not_loaded);\n\t\t\tlet p = objects_seen.get(v);\n\t\t\tif (p) {\n\t\t\t\tp(L);\n\t\t\t} else {\n\t\t\t\tpushjs(L, v);\n\t\t\t\tp = lua_toproxy(L, -1);\n\t\t\t\tobjects_seen.set(v, p);\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst atnativeerror = function(L) {\n\tlet u = lua_touserdata(L, 1);\n\tpush(L, u);\n\treturn 1;\n};\n\nconst tojs = function(L, idx) {\n\tswitch(lua_type(L, idx)) {\n\t\tcase LUA_TNONE:\n\t\tcase LUA_TNIL:\n\t\t\treturn void 0;\n\t\tcase LUA_TBOOLEAN:\n\t\t\treturn lua_toboolean(L, idx);\n\t\tcase LUA_TLIGHTUSERDATA:\n\t\t\treturn lua_touserdata(L, idx);\n\t\tcase LUA_TNUMBER:\n\t\t\treturn lua_tonumber(L, idx);\n\t\tcase LUA_TSTRING:\n\t\t\treturn lua_tojsstring(L, idx);\n\t\tcase LUA_TUSERDATA: {\n\t\t\tlet u = testjs(L, idx);\n\t\t\tif (u !== void 0)\n\t\t\t\treturn u;\n\t\t}\n\t\t/* fall through */\n\t\tcase LUA_TTABLE:\n\t\tcase LUA_TFUNCTION:\n\t\tcase LUA_TTHREAD:\n\t\t/* fall through */\n\t\tdefault:\n\t\t\treturn wrap(L, lua_toproxy(L, idx));\n\t}\n};\n\n/* Calls function on the stack with `nargs` from the stack.\n   On lua error, re-throws as javascript error\n   On success, returns single return value */\nconst jscall = function(L, nargs) {\n\tlet status = lua_pcall(L, nargs, 1, 0);\n\tlet r = tojs(L, -1);\n\tlua_pop(L, 1);\n\tswitch(status) {\n\t\tcase LUA_OK:\n\t\t\treturn r;\n\t\tdefault:\n\t\t\tthrow r;\n\t}\n};\n\nconst invoke = function(L, p, thisarg, args, n_results) {\n\tif (!isobject(args)) throw new TypeError(\"`args` argument must be an object\");\n\tlet length = +args.length;\n\tif (!(length >= 0)) length = 0; /* Keep NaN in mind */\n\tluaL_checkstack(L, 2+length, null);\n\tlet base = lua_gettop(L);\n\tp(L);\n\tpush(L, thisarg);\n\tfor (let i=0; i<length; i++) {\n\t\tpush(L, args[i]);\n\t}\n\tswitch(lua_pcall(L, 1+length, n_results, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet nres = lua_gettop(L)-base;\n\t\t\tlet res = new Array(nres);\n\t\t\tfor (let i=0; i<nres; i++) {\n\t\t\t\tres[i] = tojs(L, base+i+1);\n\t\t\t}\n\t\t\tlua_settop(L, base);\n\t\t\treturn res;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_settop(L, base);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst gettable = function(L) {\n\tlua_gettable(L, 1);\n\treturn 1;\n};\n\nconst get = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\treturn jscall(L, 2);\n};\n\nconst has = function(L, p, prop) {\n\tluaL_checkstack(L, 3, null);\n\tlua_pushcfunction(L, gettable);\n\tp(L);\n\tpush(L, prop);\n\tlet status = lua_pcall(L, 2, 1, 0);\n\tswitch(status) {\n\t\tcase LUA_OK: {\n\t\t\tlet r = lua_isnil(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\treturn !r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst set = function(L, p, prop, value) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tpush(L, value);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst deleteProperty = function(L, p, prop) {\n\tluaL_checkstack(L, 4, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tlua_settable(L, 1);\n\t\treturn 0;\n\t});\n\tp(L);\n\tpush(L, prop);\n\tlua_pushnil(L);\n\tswitch(lua_pcall(L, 3, 0, 0)) {\n\t\tcase LUA_OK:\n\t\t\treturn;\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst tostring = function(L, p) {\n\tluaL_checkstack(L, 2, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_tolstring(L, 1);\n\t\treturn 1;\n\t});\n\tp(L);\n\treturn jscall(L, 1);\n};\n\n/* implements lua's \"Generic For\" protocol */\nconst iter_next = function() {\n\tlet L = this.L;\n\tluaL_checkstack(L, 3, null);\n\tlet top = lua_gettop(L);\n\tthis.iter(L);\n\tthis.state(L);\n\tthis.last(L);\n\tswitch(lua_pcall(L, 2, LUA_MULTRET, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tthis.last = lua_toproxy(L, top+1);\n\t\t\tlet r;\n\t\t\tif (lua_isnil(L, -1)) {\n\t\t\t\tr = {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: void 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet n_results = lua_gettop(L) - top;\n\t\t\t\tlet result = new Array(n_results);\n\t\t\t\tfor (let i=0; i<n_results; i++) {\n\t\t\t\t\tresult[i] = tojs(L, top+i+1);\n\t\t\t\t}\n\t\t\t\tr = {\n\t\t\t\t\tdone: false,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t\tlua_settop(L, top);\n\t\t\treturn r;\n\t\t}\n\t\tdefault: {\n\t\t\tlet e = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow e;\n\t\t}\n\t}\n};\n\n/* make iteration use pairs() */\nconst jsiterator = function(L, p) {\n\tluaL_checkstack(L, 1, null);\n\tlua_pushcfunction(L, function(L) {\n\t\tluaL_requiref(L, to_luastring(\"_G\"), luaopen_base, 0);\n\t\tlua_getfield(L, -1, to_luastring(\"pairs\"));\n\t\tp(L);\n\t\tlua_call(L, 1, 3);\n\t\treturn 3;\n\t});\n\tswitch(lua_pcall(L, 0, 3, 0)) {\n\t\tcase LUA_OK: {\n\t\t\tlet iter = lua_toproxy(L, -3);\n\t\t\tlet state = lua_toproxy(L, -2);\n\t\t\tlet last = lua_toproxy(L, -1);\n\t\t\tlua_pop(L, 3);\n\t\t\treturn {\n\t\t\t\tL: L,\n\t\t\t\titer: iter,\n\t\t\t\tstate: state,\n\t\t\t\tlast: last,\n\t\t\t\tnext: iter_next\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\tlet r = tojs(L, -1);\n\t\t\tlua_pop(L, 1);\n\t\t\tthrow r;\n\t\t}\n\t}\n};\n\nconst wrap = function(L1, p) {\n\tconst L = getmainthread(L1);\n\t/* we need `typeof js_proxy` to be \"function\" so that it's acceptable to native apis */\n\tlet js_proxy = function() {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, this, arguments, 1)[0];\n\t};\n\tjs_proxy.apply = function(thisarg, args) {\n\t\t/* only get one result */\n\t\treturn invoke(L, p, thisarg, args, 1)[0];\n\t};\n\tjs_proxy.invoke = function(thisarg, args) {\n\t\treturn invoke(L, p, thisarg, args, LUA_MULTRET);\n\t};\n\tjs_proxy.get = function(k) {\n\t\treturn get(L, p, k);\n\t};\n\tjs_proxy.has = function(k) {\n\t\treturn has(L, p, k);\n\t};\n\tjs_proxy.set = function(k, v) {\n\t\treturn set(L, p, k, v);\n\t};\n\tjs_proxy.delete = function(k) {\n\t\treturn deleteProperty(L, p, k);\n\t};\n\tjs_proxy.toString = function() {\n\t\treturn tostring(L, p);\n\t};\n\tif (typeof Symbol === \"function\") {\n\t\tjs_proxy[Symbol.toStringTag] = \"Fengari object\";\n\t\tjs_proxy[Symbol.iterator] = function() {\n\t\t\treturn jsiterator(L, p);\n\t\t};\n\t\tif (Symbol.toPrimitive) {\n\t\t\tjs_proxy[Symbol.toPrimitive] = function(hint) {\n\t\t\t\tif (hint === \"string\") {\n\t\t\t\t\treturn tostring(L, p);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\tif (custom_inspect_symbol) {\n\t\tjs_proxy[custom_inspect_symbol] = js_proxy.toString;\n\t}\n\tlet objects_seen = states.get(L);\n\tif (!objects_seen) throw Error(js_library_not_loaded);\n\tobjects_seen.set(js_proxy, p);\n\treturn js_proxy;\n};\n\nconst jslib = {\n\t\"new\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet args = new Array(nargs);\n\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\targs[i] = tojs(L, i+2);\n\t\t}\n\t\tpush(L, construct(u, args));\n\t\treturn 1;\n\t},\n\t\"tonumber\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushnumber(L, +u);\n\t\treturn 1;\n\t},\n\t\"tostring\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, toString(u));\n\t\treturn 1;\n\t},\n\t\"instanceof\": function(L) {\n\t\tlet u1 = tojs(L, 1);\n\t\tlet u2 = tojs(L, 2);\n\t\tlua_pushboolean(L, u1 instanceof u2);\n\t\treturn 1;\n\t},\n\t\"typeof\": function(L) {\n\t\tlet u = tojs(L, 1);\n\t\tlua_pushliteral(L, typeof u);\n\t\treturn 1;\n\t}\n};\n\nif (typeof Symbol === \"function\" && Symbol.iterator) {\n\tconst get_iterator = function(L, idx) {\n\t\tlet u = checkjs(L, idx);\n\t\tlet getiter = u[Symbol.iterator];\n\t\tif (!getiter)\n\t\t\tluaL_argerror(L, idx, to_luastring(\"object not iterable\"));\n\t\tlet iter = apply(getiter, u, []);\n\t\tif (!isobject(iter))\n\t\t\tluaL_argerror(L, idx, to_luastring(\"Result of the Symbol.iterator method is not an object\"));\n\t\treturn iter;\n\t};\n\n\tconst next = function(L) {\n\t\tlet iter = tojs(L, 1);\n\t\tlet r = iter.next();\n\t\tif (r.done) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tpush(L, r.value);\n\t\t\treturn 1;\n\t\t}\n\t};\n\n\tjslib[\"of\"] = function(L) {\n\t\tlet iter = get_iterator(L, 1);\n\t\tlua_pushcfunction(L, next);\n\t\tpush(L, iter);\n\t\treturn 2;\n\t};\n}\n\nif (typeof Proxy === \"function\" && typeof Symbol === \"function\") {\n\tconst L_symbol = Symbol(\"lua_State\");\n\tconst p_symbol = Symbol(\"fengari-proxy\");\n\n\tconst proxy_handlers = {\n\t\t\"apply\": function(target, thisarg, args) {\n\t\t\treturn invoke(target[L_symbol], target[p_symbol], thisarg, args, 1)[0];\n\t\t},\n\t\t\"construct\": function(target, argumentsList) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tlet arg_length = argumentsList.length;\n\t\t\tluaL_checkstack(L, 2+arg_length, null);\n\t\t\tp(L);\n\t\t\tlet idx = lua_gettop(L);\n\t\t\tif (luaL_getmetafield(L, idx, to_luastring(\"construct\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow new TypeError(\"not a constructor\");\n\t\t\t}\n\t\t\tlua_rotate(L, idx, 1);\n\t\t\tfor (let i=0; i<arg_length; i++) {\n\t\t\t\tpush(L, argumentsList[i]);\n\t\t\t}\n\t\t\treturn jscall(L, 1+arg_length);\n\t\t},\n\t\t\"defineProperty\": function(target, prop, desc) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 4, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"defineProperty\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\tpush(L, desc);\n\t\t\treturn jscall(L, 3);\n\t\t},\n\t\t\"deleteProperty\": function(target, k) {\n\t\t\treturn deleteProperty(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"get\": function(target, k) {\n\t\t\treturn get(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"getOwnPropertyDescriptor\": function(target, prop) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getOwnPropertyDescriptor\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prop);\n\t\t\treturn jscall(L, 2);\n\t\t},\n\t\t\"getPrototypeOf\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"getPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"has\": function(target, k) {\n\t\t\treturn has(target[L_symbol], target[p_symbol], k);\n\t\t},\n\t\t\"ownKeys\": function(target) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 2, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"ownKeys\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\tthrow Error(\"ownKeys unknown for fengari object\");\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\treturn jscall(L, 1);\n\t\t},\n\t\t\"set\": function(target, k, v) {\n\t\t\tset(target[L_symbol], target[p_symbol], k, v);\n\t\t\treturn true;\n\t\t},\n\t\t\"setPrototypeOf\": function(target, prototype) {\n\t\t\tlet L = target[L_symbol];\n\t\t\tlet p = target[p_symbol];\n\t\t\tluaL_checkstack(L, 3, null);\n\t\t\tp(L);\n\t\t\tif (luaL_getmetafield(L, -1, to_luastring(\"setPrototypeOf\")) === LUA_TNIL) {\n\t\t\t\tlua_pop(L, 1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlua_rotate(L, -2, 1);\n\t\t\tpush(L, prototype);\n\t\t\treturn jscall(L, 2);\n\t\t}\n\t};\n\n\t/*\n\tFunctions created with `function(){}` have a non-configurable .prototype\n\tfield. This causes issues with the .ownKeys and .getOwnPropertyDescriptor\n\ttraps.\n\tHowever using `.bind()` returns a function without the .prototype property.\n\n\t```js\n\tReflect.ownKeys((function(){})) // Array [ \"prototype\", \"length\", \"name\" ]\n\tReflect.ownKeys((function(){}).bind()) // Array [ \"length\", \"name\" ]\n\t```\n\t*/\n\tconst raw_function = function() {\n\t\tlet f = (function(){}).bind();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tWe use Function() here to get prevent transpilers from converting to a\n\tnon-arrow function.\n\tAdditionally, we avoid setting the internal name field by never giving the\n\tnew function a name in the block it was defined (and instead delete-ing\n\tthe configurable fields .length and .name in a wrapper function)\n\t*/\n\tconst make_arrow_function = Function(\"return ()=>void 0;\");\n\tconst raw_arrow_function = function() {\n\t\tlet f = make_arrow_function();\n\t\tdelete f.length;\n\t\tdelete f.name;\n\t\treturn f;\n\t};\n\n\t/*\n\tArrow functions do not have a .prototype field:\n\n\t```js\n\tReflect.ownKeys((() = >void 0)) // Array [ \"length\", \"name\" ]\n\t```\n\n\tHowever they cannot be used as a constructor:\n\n\t```js\n\tnew (new Proxy(() => void 0, { construct: function() { return {}; } })) // TypeError: (intermediate value) is not a constructor\n\tnew (new Proxy(function(){}, { construct: function() { return {}; } })) // {}\n\t```\n\t*/\n\tconst createproxy = function(L1, p, type) {\n\t\tconst L = getmainthread(L1);\n\t\tlet target;\n\t\tswitch (type) {\n\t\t\tcase \"function\":\n\t\t\t\ttarget = raw_function();\n\t\t\t\tbreak;\n\t\t\tcase \"arrow_function\":\n\t\t\t\ttarget = raw_arrow_function();\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\ttarget = {};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow TypeError(\"invalid type to createproxy\");\n\t\t}\n\t\ttarget[p_symbol] = p;\n\t\ttarget[L_symbol] = L;\n\t\treturn new Proxy(target, proxy_handlers);\n\t};\n\n\tconst valid_types = [\"function\", \"arrow_function\", \"object\"];\n\tconst valid_types_as_luastring = valid_types.map((v) => to_luastring(v));\n\tjslib[\"createproxy\"] = function(L) {\n\t\tluaL_checkany(L, 1);\n\t\tlet type = valid_types[luaL_checkoption(L, 2, valid_types_as_luastring[0], valid_types_as_luastring)];\n\t\tlet fengariProxy = createproxy(L, lua_toproxy(L, 1), type);\n\t\tpush(L, fengariProxy);\n\t\treturn 1;\n\t};\n}\n\nlet jsmt = {\n\t\"__index\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tpush(L, u[k]);\n\t\treturn 1;\n\t},\n\t\"__newindex\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet k = tojs(L, 2);\n\t\tlet v = tojs(L, 3);\n\t\tif (v === void 0)\n\t\t\tReflect_deleteProperty(u, k);\n\t\telse\n\t\t\tu[k] = v;\n\t\treturn 0;\n\t},\n\t\"__tostring\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet s = toString(u);\n\t\tlua_pushstring(L, to_luastring(s));\n\t\treturn 1;\n\t},\n\t\"__call\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet nargs = lua_gettop(L)-1;\n\t\tlet thisarg;\n\t\tlet args = new Array(Math.max(0, nargs-1));\n\t\tif (nargs > 0) {\n\t\t\tthisarg = tojs(L, 2);\n\t\t\tif (nargs-- > 0) {\n\t\t\t\tfor (let i = 0; i < nargs; i++) {\n\t\t\t\t\targs[i] = tojs(L, i+3);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpush(L, apply(u, thisarg, args));\n\t\treturn 1;\n\t},\n\t\"__pairs\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet iter, state, first;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__pairs\")]) === void 0) {\n\t\t\t/* By default, iterate over Object.keys */\n\t\t\titer = function(last) {\n\t\t\t\tif (this.index >= this.keys.length)\n\t\t\t\t\treturn;\n\t\t\t\tlet key = this.keys[this.index++];\n\t\t\t\treturn [key, this.object[key]];\n\t\t\t};\n\t\t\tstate = {\n\t\t\t\tobject: u,\n\t\t\t\tkeys: Object.keys(u),\n\t\t\t\tindex: 0,\n\t\t\t};\n\t\t} else {\n\t\t\tlet r = apply(f, u, []);\n\t\t\tif (r === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object with keys 'iter', 'state', 'first' expected)\"));\n\t\t\titer = r.iter;\n\t\t\tif (iter === void 0)\n\t\t\t\tluaL_error(L, to_luastring(\"bad '__pairs' result (object.iter is missing)\"));\n\t\t\tstate = r.state;\n\t\t\tfirst = r.first;\n\t\t}\n\t\tlua_pushcfunction(L, function() {\n\t\t\tlet state = tojs(L, 1);\n\t\t\tlet last = tojs(L, 2);\n\t\t\tlet r = apply(iter, state, [last]);\n\t\t\t/* returning undefined indicates end of iteration */\n\t\t\tif (r === void 0)\n\t\t\t\treturn 0;\n\t\t\t/* otherwise it should return an array of results */\n\t\t\tif (!Array.isArray(r))\n\t\t\t\tluaL_error(L, to_luastring(\"bad iterator result (Array or undefined expected)\"));\n\t\t\tluaL_checkstack(L, r.length, null);\n\t\t\tfor (let i=0; i<r.length; i++) {\n\t\t\t\tpush(L, r[i]);\n\t\t\t}\n\t\t\treturn r.length;\n\t\t});\n\t\tpush(L, state);\n\t\tpush(L, first);\n\t\treturn 3;\n\t},\n\t\"__len\": function(L) {\n\t\tlet u = checkjs(L, 1);\n\t\tlet f;\n\t\tlet r;\n\t\tif (typeof Symbol !== \"function\" || (f = u[Symbol.for(\"__len\")]) === void 0) {\n\t\t\t/* by default use .length field */\n\t\t\tr = u.length;\n\t\t} else {\n\t\t\tr = apply(f, u, []);\n\t\t}\n\t\tpush(L, r);\n\t\treturn 1;\n\t}\n};\n\nconst luaopen_js = function(L) {\n\t/* Add weak map to track objects seen */\n\tstates.set(getmainthread(L), new WeakMap());\n\n\tlua_atnativeerror(L, atnativeerror);\n\n\tluaL_newlib(L, jslib);\n\tlua_pushliteral(L, FENGARI_INTEROP_VERSION);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION\"));\n\tlua_pushinteger(L, FENGARI_INTEROP_VERSION_NUM);\n\tlua_setfield(L, -2, to_luastring(\"_VERSION_NUM\"));\n\tlua_pushliteral(L, FENGARI_INTEROP_RELEASE);\n\tlua_setfield(L, -2, to_luastring(\"_RELEASE\"));\n\n\tluaL_newmetatable(L, js_tname);\n\tluaL_setfuncs(L, jsmt, 0);\n\tlua_pop(L, 1);\n\n\tpushjs(L, null);\n\t/* Store null object in registry under lightuserdata null */\n\tlua_pushvalue(L, -1);\n\tlua_rawsetp(L, LUA_REGISTRYINDEX, null);\n\tlua_setfield(L, -2, to_luastring(\"null\"));\n\n\tpush(L, global_env);\n\tlua_setfield(L, -2, to_luastring(\"global\"));\n\n\treturn 1;\n};\n\nmodule.exports.FENGARI_INTEROP_VERSION = FENGARI_INTEROP_VERSION;\nmodule.exports.FENGARI_INTEROP_VERSION_NUM = FENGARI_INTEROP_VERSION_NUM;\nmodule.exports.FENGARI_INTEROP_RELEASE = FENGARI_INTEROP_RELEASE;\nmodule.exports.checkjs = checkjs;\nmodule.exports.testjs = testjs;\nmodule.exports.pushjs = pushjs;\nmodule.exports.push = push;\nmodule.exports.tojs = tojs;\nmodule.exports.luaopen_js = luaopen_js;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPBNOT,\n    LUA_OPEQ,\n    LUA_OPLE,\n    LUA_OPLT,\n    LUA_OPUNM,\n    LUA_REGISTRYINDEX,\n    LUA_RIDX_GLOBALS,\n    LUA_VERSION_NUM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNONE,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    thread_status: { LUA_OK },\n    from_userstring,\n    to_luastring,\n} = require('./defs.js');\nconst { api_check } = require('./llimits.js');\nconst ldebug    = require('./ldebug.js');\nconst ldo       = require('./ldo.js');\nconst { luaU_dump } = require('./ldump.js');\nconst lfunc     = require('./lfunc.js');\nconst lobject   = require('./lobject.js');\nconst lstate    = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltm       = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lvm       = require('./lvm.js');\nconst ltable    = require('./ltable.js');\nconst { ZIO } = require('./lzio.js');\nconst TValue    = lobject.TValue;\nconst CClosure  = lobject.CClosure;\n\nconst api_incr_top = function(L) {\n    L.top++;\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst api_checknelems = function(L, n) {\n    api_check(L, n < (L.top - L.ci.funcOff), \"not enough elements in the stack\");\n};\n\nconst fengari_argcheck = function(c) {\n    if (!c) throw TypeError(\"invalid argument\");\n};\n\nconst fengari_argcheckinteger = function(n) {\n    fengari_argcheck(typeof n === \"number\" && (n|0) === n);\n};\n\nconst isvalid = function(o) {\n    return o !== lobject.luaO_nilobject;\n};\n\nconst lua_version = function(L) {\n    if (L === null) return LUA_VERSION_NUM;\n    else return L.l_G.version;\n};\n\nconst lua_atpanic = function(L, panicf) {\n    let old = L.l_G.panic;\n    L.l_G.panic = panicf;\n    return old;\n};\n\nconst lua_atnativeerror = function(L, errorf) {\n    let old = L.l_G.atnativeerror;\n    L.l_G.atnativeerror = errorf;\n    return old;\n};\n\n// Return value for idx on stack\nconst index2addr = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return lobject.luaO_nilobject;\n        else return L.stack[o];\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.stack[L.top + idx];\n    } else if (idx === LUA_REGISTRYINDEX) {\n        return L.l_G.l_registry;\n    } else { /* upvalues */\n        idx = LUA_REGISTRYINDEX - idx;\n        api_check(L, idx <= lfunc.MAXUPVAL + 1, \"upvalue index too large\");\n        if (ci.func.ttislcf()) /* light C function? */\n            return lobject.luaO_nilobject; /* it has no upvalues */\n        else {\n            return idx <= ci.func.value.nupvalues ? ci.func.value.upvalue[idx - 1] : lobject.luaO_nilobject;\n        }\n    }\n};\n\n// Like index2addr but returns the index on stack; doesn't allow pseudo indices\nconst index2addr_ = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return null;\n        else return o;\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.top + idx;\n    } else { /* registry or upvalue */\n        throw Error(\"attempt to use pseudo-index\");\n    }\n};\n\nconst lua_checkstack = function(L, n) {\n    let res;\n    let ci = L.ci;\n    api_check(L, n >= 0, \"negative 'n'\");\n    if (L.stack_last - L.top > n) /* stack large enough? */\n        res = true;\n    else { /* no; need to grow stack */\n        let inuse = L.top + lstate.EXTRA_STACK;\n        if (inuse > LUAI_MAXSTACK - n)  /* can grow without overflow? */\n            res = false;  /* no */\n        else { /* try to grow stack */\n            ldo.luaD_growstack(L, n);\n            res = true;\n        }\n    }\n\n    if (res && ci.top < L.top + n)\n        ci.top = L.top + n;  /* adjust frame top */\n\n    return res;\n};\n\nconst lua_xmove = function(from, to, n) {\n    if (from === to) return;\n    api_checknelems(from, n);\n    api_check(from, from.l_G === to.l_G, \"moving among independent states\");\n    api_check(from, to.ci.top - to.top >= n, \"stack overflow\");\n    from.top -= n;\n    for (let i = 0; i < n; i++) {\n        to.stack[to.top] = new lobject.TValue();\n        lobject.setobj2s(to, to.top, from.stack[from.top + i]);\n        delete from.stack[from.top + i];\n        to.top++;\n    }\n};\n\n/*\n** basic stack manipulation\n*/\n\n/*\n** convert an acceptable stack index into an absolute index\n*/\nconst lua_absindex = function(L, idx) {\n    return (idx > 0 || idx <= LUA_REGISTRYINDEX)\n        ? idx\n        : (L.top - L.ci.funcOff) + idx;\n};\n\nconst lua_gettop = function(L) {\n    return L.top - (L.ci.funcOff + 1);\n};\n\nconst lua_pushvalue = function(L, idx) {\n    lobject.pushobj2s(L, index2addr(L, idx));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst lua_settop = function(L, idx) {\n    let func = L.ci.funcOff;\n    let newtop;\n    if (idx >= 0) {\n        api_check(L, idx <= L.stack_last - (func + 1), \"new top too large\");\n        newtop = func + 1 + idx;\n    } else {\n        api_check(L, -(idx + 1) <= L.top - (func + 1), \"invalid new top\");\n        newtop = L.top + idx + 1; /* 'subtract' index (index is negative) */\n    }\n    ldo.adjust_top(L, newtop);\n};\n\nconst lua_pop = function(L, n) {\n    lua_settop(L, -n - 1);\n};\n\nconst reverse = function(L, from, to) {\n    for (; from < to; from++, to--) {\n        let fromtv = L.stack[from];\n        let temp = new TValue(fromtv.type, fromtv.value);\n        lobject.setobjs2s(L, from, to);\n        lobject.setobj2s(L, to, temp);\n    }\n};\n\n/*\n** Let x = AB, where A is a prefix of length 'n'. Then,\n** rotate x n === BA. But BA === (A^r . B^r)^r.\n*/\nconst lua_rotate = function(L, idx, n) {\n    let t = L.top - 1;\n    let pIdx = index2addr_(L, idx);\n    let p = L.stack[pIdx];\n    api_check(L, isvalid(p) && idx > LUA_REGISTRYINDEX, \"index not in the stack\");\n    api_check(L, (n >= 0 ? n : -n) <= (t - pIdx + 1), \"invalid 'n'\");\n    let m = n >= 0 ? t - n : pIdx - n - 1;  /* end of prefix */\n    reverse(L, pIdx, m);\n    reverse(L, m + 1, L.top - 1);\n    reverse(L, pIdx, L.top - 1);\n};\n\nconst lua_copy = function(L, fromidx, toidx) {\n    let from = index2addr(L, fromidx);\n    index2addr(L, toidx).setfrom(from);\n};\n\nconst lua_remove = function(L, idx) {\n    lua_rotate(L, idx, -1);\n    lua_pop(L, 1);\n};\n\nconst lua_insert = function(L, idx) {\n    lua_rotate(L, idx, 1);\n};\n\nconst lua_replace = function(L, idx) {\n    lua_copy(L, -1, idx);\n    lua_pop(L, 1);\n};\n\n/*\n** push functions (JS -> stack)\n*/\n\nconst lua_pushnil = function(L) {\n    L.stack[L.top] = new TValue(LUA_TNIL, null);\n    api_incr_top(L);\n};\n\nconst lua_pushnumber = function(L, n) {\n    fengari_argcheck(typeof n === \"number\");\n    L.stack[L.top] = new TValue(LUA_TNUMFLT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushinteger = function(L, n) {\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushlstring = function(L, s, len) {\n    fengari_argcheckinteger(len);\n    let ts;\n    if (len === 0) {\n        s = to_luastring(\"\", true);\n        ts = luaS_bless(L, s);\n    } else {\n        s = from_userstring(s);\n        api_check(L, s.length >= len, \"invalid length to lua_pushlstring\");\n        ts = luaS_new(L, s.subarray(0, len));\n    }\n    lobject.pushsvalue2s(L, ts);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return ts.value;\n};\n\nconst lua_pushstring = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        let ts = luaS_new(L, from_userstring(s));\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return s;\n};\n\nconst lua_pushvfstring = function (L, fmt, argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\nconst lua_pushfstring = function (L, fmt, ...argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\n/* Similar to lua_pushstring, but takes a JS string */\nconst lua_pushliteral = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        fengari_argcheck(typeof s === \"string\");\n        let ts = luaS_newliteral(L, s);\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n\n    return s;\n};\n\nconst lua_pushcclosure = function(L, fn, n) {\n    fengari_argcheck(typeof fn === \"function\");\n    fengari_argcheckinteger(n);\n    if (n === 0)\n        L.stack[L.top] = new TValue(LUA_TLCF, fn);\n    else {\n        api_checknelems(L, n);\n        api_check(L, n <= lfunc.MAXUPVAL, \"upvalue index too large\");\n        let cl = new CClosure(L, fn, n);\n        for (let i=0; i<n; i++)\n            cl.upvalue[i].setfrom(L.stack[L.top - n + i]);\n        for (let i=1; i<n; i++)\n            delete L.stack[--L.top];\n        if (n>0)\n            --L.top;\n        L.stack[L.top].setclCvalue(cl);\n    }\n    api_incr_top(L);\n};\n\nconst lua_pushjsclosure = lua_pushcclosure;\n\nconst lua_pushcfunction = function(L, fn) {\n    lua_pushcclosure(L, fn, 0);\n};\n\nconst lua_pushjsfunction = lua_pushcfunction;\n\nconst lua_pushboolean = function(L, b) {\n    L.stack[L.top] = new TValue(LUA_TBOOLEAN, !!b);\n    api_incr_top(L);\n};\n\nconst lua_pushlightuserdata = function(L, p) {\n    L.stack[L.top] = new TValue(LUA_TLIGHTUSERDATA, p);\n    api_incr_top(L);\n};\n\nconst lua_pushthread = function(L) {\n    L.stack[L.top] = new TValue(LUA_TTHREAD, L);\n    api_incr_top(L);\n    return L.l_G.mainthread === L;\n};\n\nconst lua_pushglobaltable = function(L) {\n    lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS);\n};\n\n/*\n** set functions (stack -> Lua)\n*/\n\n/*\n** t[k] = value at the top of the stack (where 'k' is a string)\n*/\nconst auxsetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    api_checknelems(L, 1);\n    lobject.pushsvalue2s(L, str); /* push 'str' (to make it a TValue) */\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setglobal = function(L, name) {\n    auxsetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\nconst lua_setmetatable = function(L, objindex) {\n    api_checknelems(L, 1);\n    let mt;\n    let obj = index2addr(L, objindex);\n    if (L.stack[L.top - 1].ttisnil())\n        mt = null;\n    else {\n        api_check(L, L.stack[L.top - 1].ttistable(), \"table expected\");\n        mt = L.stack[L.top - 1].value;\n    }\n\n    switch (obj.ttnov()) {\n        case LUA_TUSERDATA:\n        case LUA_TTABLE: {\n            obj.value.metatable = mt;\n            break;\n        }\n        default: {\n            L.l_G.mt[obj.ttnov()] = mt;\n            break;\n        }\n    }\n\n    delete L.stack[--L.top];\n    return true;\n};\n\nconst lua_settable = function(L, idx) {\n    api_checknelems(L, 2);\n    let t = index2addr(L, idx);\n    lvm.settable(L, t, L.stack[L.top - 2], L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setfield = function(L, idx, k) {\n    auxsetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_seti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let t = index2addr(L, idx);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawset = function(L, idx) {\n    api_checknelems(L, 2);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = L.stack[L.top - 2];\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    ltable.invalidateTMcache(o.value);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawseti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    ltable.luaH_setint(o.value, n, L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst lua_rawsetp = function(L, idx, p) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    delete L.stack[--L.top];\n};\n\n/*\n** get functions (Lua -> stack)\n*/\n\nconst auxgetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    lobject.pushsvalue2s(L, str);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgeti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    api_check(L, t.ttistable(), \"table expected\");\n    lobject.pushobj2s(L, ltable.luaH_getint(t.value, n));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgetp = function(L, idx, p) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    lobject.pushobj2s(L, ltable.luaH_get(L, t.value, k));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawget = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(t), \"table expected\");\n    lobject.setobj2s(L, L.top - 1, ltable.luaH_get(L, t.value, L.stack[L.top - 1]));\n    return L.stack[L.top - 1].ttnov();\n};\n\n// narray and nrec are mostly useless for this implementation\nconst lua_createtable = function(L, narray, nrec) {\n    let t = new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L));\n    L.stack[L.top] = t;\n    api_incr_top(L);\n};\n\nconst luaS_newudata = function(L, size) {\n    return new lobject.Udata(L, size);\n};\n\nconst lua_newuserdata = function(L, size) {\n    let u = luaS_newudata(L, size);\n    L.stack[L.top] = new lobject.TValue(LUA_TUSERDATA, u);\n    api_incr_top(L);\n    return u.data;\n};\n\nconst aux_upvalue = function(L, fi, n) {\n    fengari_argcheckinteger(n);\n    switch(fi.ttype()) {\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            if (!(1 <= n && n <= f.nupvalues)) return null;\n            return {\n                name: to_luastring(\"\", true),\n                val: f.upvalue[n-1]\n            };\n        }\n        case LUA_TLCL: {  /* Lua closure */\n            let f = fi.value;\n            let p = f.p;\n            if (!(1 <= n && n <= p.upvalues.length)) return null;\n            let name = p.upvalues[n-1].name;\n            return {\n                name: name ? name.getstr() : to_luastring(\"(*no name)\", true),\n                val: f.upvals[n-1]\n            };\n        }\n        default: return null;  /* not a closure */\n    }\n};\n\nconst lua_getupvalue = function(L, funcindex, n) {\n    let up = aux_upvalue(L, index2addr(L, funcindex), n);\n    if (up) {\n        let name = up.name;\n        let val = up.val;\n        lobject.pushobj2s(L, val);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        return name;\n    }\n    return null;\n};\n\nconst lua_setupvalue = function(L, funcindex, n) {\n    let fi = index2addr(L, funcindex);\n    api_checknelems(L, 1);\n    let aux = aux_upvalue(L, fi, n);\n    if (aux) {\n        let name = aux.name;\n        let val = aux.val;\n        val.setfrom(L.stack[L.top-1]);\n        delete L.stack[--L.top];\n        return name;\n    }\n    return null;\n};\n\nconst lua_newtable = function(L) {\n    lua_createtable(L, 0, 0);\n};\n\nconst lua_register = function(L, n, f) {\n    lua_pushcfunction(L, f);\n    lua_setglobal(L, n);\n};\n\nconst lua_getmetatable = function(L, objindex) {\n    let obj = index2addr(L, objindex);\n    let mt;\n    let res = false;\n    switch (obj.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = obj.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[obj.ttnov()];\n            break;\n    }\n\n    if (mt !== null && mt !== undefined) {\n        L.stack[L.top] = new TValue(LUA_TTABLE, mt);\n        api_incr_top(L);\n        res = true;\n    }\n\n    return res;\n};\n\nconst lua_getuservalue = function(L, idx) {\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    let uv = o.value.uservalue;\n    L.stack[L.top] = new TValue(uv.type, uv.value);\n    api_incr_top(L);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_gettable = function(L, idx) {\n    let t = index2addr(L, idx);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getfield = function(L, idx, k) {\n    return auxgetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_geti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getglobal = function(L, name) {\n    return auxgetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\n/*\n** access functions (stack -> JS)\n*/\n\nconst lua_toboolean = function(L, idx) {\n    let o = index2addr(L, idx);\n    return !o.l_isfalse();\n};\n\nconst lua_tolstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.svalue();\n};\n\nconst lua_tostring =  lua_tolstring;\n\nconst lua_tojsstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.jsstring();\n};\n\nconst lua_todataview = function(L, idx) {\n    let u8 = lua_tolstring(L, idx);\n    return new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n};\n\nconst lua_rawlen = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return o.vslen();\n        case LUA_TUSERDATA:\n            return o.value.len;\n        case LUA_TTABLE:\n            return ltable.luaH_getn(o.value);\n        default:\n            return 0;\n    }\n};\n\nconst lua_tocfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    if (o.ttislcf() || o.ttisCclosure()) return o.value;\n    else return null;  /* not a C function */\n};\n\nconst lua_tointeger = function(L, idx) {\n    let n = lua_tointegerx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tointegerx = function(L, idx) {\n    return lvm.tointeger(index2addr(L, idx));\n};\n\nconst lua_tonumber = function(L, idx) {\n    let n = lua_tonumberx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tonumberx = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx));\n};\n\nconst lua_touserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttnov()) {\n        case LUA_TUSERDATA:\n            return o.value.data;\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default: return null;\n    }\n};\n\nconst lua_tothread = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisthread() ? o.value : null;\n};\n\nconst lua_topointer = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TCCL:\n        case LUA_TLCF:\n        case LUA_TTHREAD:\n        case LUA_TUSERDATA: /* note: this differs in behaviour to reference lua implementation */\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default:\n            return null;\n    }\n};\n\n\n/* A proxy is a function that the same lua value to the given lua state. */\n\n/* Having a weakmap of created proxies was only way I could think of to provide an 'isproxy' function */\nconst seen = new WeakMap();\n\n/* is the passed object a proxy? is it from the given state? (if passed) */\nconst lua_isproxy = function(p, L) {\n    let G = seen.get(p);\n    if (!G)\n        return false;\n    return (L === null) || (L.l_G === G);\n};\n\n/* Use 'create_proxy' helper function so that 'L' is not in scope */\nconst create_proxy = function(G, type, value) {\n    let proxy = function(L) {\n        api_check(L, L instanceof lstate.lua_State && G === L.l_G, \"must be from same global state\");\n        L.stack[L.top] = new TValue(type, value);\n        api_incr_top(L);\n    };\n    seen.set(proxy, G);\n    return proxy;\n};\n\nconst lua_toproxy = function(L, idx) {\n    let tv = index2addr(L, idx);\n    /* pass broken down tv incase it is an upvalue index */\n    return create_proxy(L.l_G, tv.type, tv.value);\n};\n\n\nconst lua_compare = function(L, index1, index2, op) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n\n    let i = 0;\n\n    if (isvalid(o1) && isvalid(o2)) {\n        switch (op) {\n            case LUA_OPEQ: i = lvm.luaV_equalobj(L, o1, o2); break;\n            case LUA_OPLT: i = lvm.luaV_lessthan(L, o1, o2); break;\n            case LUA_OPLE: i = lvm.luaV_lessequal(L, o1, o2); break;\n            default: api_check(L, false, \"invalid option\");\n        }\n    }\n\n    return i;\n};\n\nconst lua_stringtonumber = function(L, s) {\n    let tv = new TValue();\n    let sz = lobject.luaO_str2num(s, tv);\n    if (sz !== 0) {\n        L.stack[L.top] = tv;\n        api_incr_top(L);\n    }\n    return sz;\n};\n\nconst f_call = function(L, ud) {\n    ldo.luaD_callnoyield(L, ud.funcOff, ud.nresults);\n};\n\nconst lua_type = function(L, idx) {\n    let o = index2addr(L, idx);\n    return isvalid(o) ?  o.ttnov() : LUA_TNONE;\n};\n\nconst lua_typename = function(L, t) {\n    api_check(L, LUA_TNONE <= t && t < LUA_NUMTAGS, \"invalid tag\");\n    return ltm.ttypename(t);\n};\n\nconst lua_iscfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttislcf(o) || o.ttisCclosure();\n};\n\nconst lua_isnil = function(L, n) {\n    return lua_type(L, n) === LUA_TNIL;\n};\n\nconst lua_isboolean = function(L, n) {\n    return lua_type(L, n) === LUA_TBOOLEAN;\n};\n\nconst lua_isnone = function(L, n) {\n    return lua_type(L, n) === LUA_TNONE;\n};\n\nconst lua_isnoneornil = function(L, n) {\n    return lua_type(L, n) <= 0;\n};\n\nconst lua_istable = function(L, idx) {\n    return index2addr(L, idx).ttistable();\n};\n\nconst lua_isinteger = function(L, idx) {\n    return index2addr(L, idx).ttisinteger();\n};\n\nconst lua_isnumber = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx)) !== false;\n};\n\nconst lua_isstring = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisstring() || lvm.cvt2str(o);\n};\n\nconst lua_isuserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisfulluserdata(o) || o.ttislightuserdata();\n};\n\nconst lua_isthread = function(L, idx) {\n    return lua_type(L, idx) === LUA_TTHREAD;\n};\n\nconst lua_isfunction = function(L, idx) {\n    return lua_type(L, idx) === LUA_TFUNCTION;\n};\n\nconst lua_islightuserdata = function(L, idx) {\n    return lua_type(L, idx) === LUA_TLIGHTUSERDATA;\n};\n\nconst lua_rawequal = function(L, index1, index2) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n    return isvalid(o1) && isvalid(o2) ? lvm.luaV_equalobj(null, o1, o2) : 0;\n};\n\nconst lua_arith = function(L, op) {\n    if (op !== LUA_OPUNM && op !== LUA_OPBNOT)\n        api_checknelems(L, 2);  /* all other operations expect two operands */\n    else {  /* for unary operations, add fake 2nd operand */\n        api_checknelems(L, 1);\n        lobject.pushobj2s(L, L.stack[L.top-1]);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n    /* first operand at top - 2, second at top - 1; result go to top - 2 */\n    lobject.luaO_arith(L, op, L.stack[L.top - 2], L.stack[L.top - 1], L.stack[L.top - 2]);\n    delete L.stack[--L.top];  /* remove second operand */\n};\n\n/*\n** 'load' and 'call' functions (run Lua code)\n*/\n\nconst default_chunkname = to_luastring(\"?\");\nconst lua_load = function(L, reader, data, chunkname, mode) {\n    if (!chunkname) chunkname = default_chunkname;\n    else chunkname = from_userstring(chunkname);\n    if (mode !== null) mode = from_userstring(mode);\n    let z = new ZIO(L, reader, data);\n    let status = ldo.luaD_protectedparser(L, z, chunkname, mode);\n    if (status === LUA_OK) {  /* no errors? */\n        let f = L.stack[L.top - 1].value; /* get newly created function */\n        if (f.nupvalues >= 1) {  /* does it have an upvalue? */\n            /* get global table from registry */\n            let gt = ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS);\n            /* set global table as 1st upvalue of 'f' (may be LUA_ENV) */\n            f.upvals[0].setfrom(gt);\n        }\n    }\n    return status;\n};\n\nconst lua_dump = function(L, writer, data, strip) {\n    api_checknelems(L, 1);\n    let o = L.stack[L.top -1];\n    if (o.ttisLclosure())\n        return luaU_dump(L, o.value.p, writer, data, strip);\n    return 1;\n};\n\nconst lua_status = function(L) {\n    return L.status;\n};\n\nconst lua_setuservalue = function(L, idx) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    o.value.uservalue.setfrom(L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst checkresults = function(L,na,nr) {\n    api_check(L, nr === LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)),\n        \"results from function overflow current stack size\");\n};\n\nconst lua_callk = function(L, nargs, nresults, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let func = L.top - (nargs + 1);\n    if (k !== null && L.nny === 0) { /* need to prepare continuation? */\n        L.ci.c_k = k;\n        L.ci.c_ctx = ctx;\n        ldo.luaD_call(L, func, nresults);\n    } else { /* no continuation or no yieldable */\n        ldo.luaD_callnoyield(L, func, nresults);\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n};\n\nconst lua_call = function(L, n, r) {\n    lua_callk(L, n, r, 0, null);\n};\n\nconst lua_pcallk = function(L, nargs, nresults, errfunc, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let status;\n    let func;\n    if (errfunc === 0)\n        func = 0;\n    else {\n        func = index2addr_(L, errfunc);\n    }\n    let funcOff = L.top - (nargs + 1); /* function to be called */\n    if (k === null || L.nny > 0) { /* no continuation or no yieldable? */\n        let c = {\n            funcOff: funcOff,\n            nresults: nresults /* do a 'conventional' protected call */\n        };\n        status = ldo.luaD_pcall(L, f_call, c, funcOff, func);\n    } else { /* prepare continuation (call is already protected by 'resume') */\n        let ci = L.ci;\n        ci.c_k = k;  /* prepare continuation (call is already protected by 'resume') */\n        ci.c_ctx = ctx;  /* prepare continuation (call is already protected by 'resume') */\n        /* save information for error recovery */\n        ci.extra = funcOff;\n        ci.c_old_errfunc = L.errfunc;\n        L.errfunc = func;\n        ci.callstatus &= ~lstate.CIST_OAH | L.allowhook;\n        ci.callstatus |= lstate.CIST_YPCALL;  /* function can do error recovery */\n        ldo.luaD_call(L, funcOff, nresults);  /* do the call */\n        ci.callstatus &= ~lstate.CIST_YPCALL;\n        L.errfunc = ci.c_old_errfunc;\n        status = LUA_OK;\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n\n    return status;\n};\n\nconst lua_pcall = function(L, n, r, f) {\n    return lua_pcallk(L, n, r, f, 0, null);\n};\n\n/*\n** miscellaneous functions\n*/\n\nconst lua_error = function(L) {\n    api_checknelems(L, 1);\n    ldebug.luaG_errormsg(L);\n};\n\nconst lua_next = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    L.stack[L.top] = new TValue();\n    let more = ltable.luaH_next(L, t.value, L.top - 1);\n    if (more) {\n        api_incr_top(L);\n        return 1;\n    } else {\n        delete L.stack[L.top];\n        delete L.stack[--L.top];\n        return 0;\n    }\n};\n\nconst lua_concat = function(L, n) {\n    api_checknelems(L, n);\n    if (n >= 2)\n        lvm.luaV_concat(L, n);\n    else if (n === 0) {\n        lobject.pushsvalue2s(L, luaS_bless(L, to_luastring(\"\", true)));\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n};\n\nconst lua_len = function(L, idx) {\n    let t = index2addr(L, idx);\n    let tv = new TValue();\n    lvm.luaV_objlen(L, tv, t);\n    L.stack[L.top] = tv;\n    api_incr_top(L);\n};\n\nconst getupvalref = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    api_check(L, fi.ttisLclosure(), \"Lua function expected\");\n    let f = fi.value;\n    fengari_argcheckinteger(n);\n    api_check(L, 1 <= n && n <= f.p.upvalues.length, \"invalid upvalue index\");\n    return {\n        f: f,\n        i: n - 1\n    };\n};\n\nconst lua_upvalueid = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    switch (fi.ttype()) {\n        case LUA_TLCL: {  /* lua closure */\n            let ref = getupvalref(L, fidx, n);\n            return ref.f.upvals[ref.i];\n        }\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            api_check(L, (n|0) === n && n > 0 && n <= f.nupvalues, \"invalid upvalue index\");\n            return f.upvalue[n - 1];\n        }\n        default: {\n            api_check(L, false, \"closure expected\");\n            return null;\n        }\n    }\n};\n\nconst lua_upvaluejoin = function(L, fidx1, n1, fidx2, n2) {\n    let ref1 = getupvalref(L, fidx1, n1);\n    let ref2 = getupvalref(L, fidx2, n2);\n    let up2 = ref2.f.upvals[ref2.i];\n    ref1.f.upvals[ref1.i] = up2;\n};\n\n// This functions are only there for compatibility purposes\nconst lua_gc = function () {};\n\nconst lua_getallocf = function () {\n    console.warn(\"lua_getallocf is not available\");\n    return 0;\n};\n\nconst lua_setallocf = function () {\n    console.warn(\"lua_setallocf is not available\");\n    return 0;\n};\n\nconst lua_getextraspace = function () {\n    console.warn(\"lua_getextraspace is not available\");\n    return 0;\n};\n\nmodule.exports.api_incr_top          = api_incr_top;\nmodule.exports.api_checknelems       = api_checknelems;\nmodule.exports.lua_absindex          = lua_absindex;\nmodule.exports.lua_arith             = lua_arith;\nmodule.exports.lua_atpanic           = lua_atpanic;\nmodule.exports.lua_atnativeerror     = lua_atnativeerror;\nmodule.exports.lua_call              = lua_call;\nmodule.exports.lua_callk             = lua_callk;\nmodule.exports.lua_checkstack        = lua_checkstack;\nmodule.exports.lua_compare           = lua_compare;\nmodule.exports.lua_concat            = lua_concat;\nmodule.exports.lua_copy              = lua_copy;\nmodule.exports.lua_createtable       = lua_createtable;\nmodule.exports.lua_dump              = lua_dump;\nmodule.exports.lua_error             = lua_error;\nmodule.exports.lua_gc                = lua_gc;\nmodule.exports.lua_getallocf         = lua_getallocf;\nmodule.exports.lua_getextraspace     = lua_getextraspace;\nmodule.exports.lua_getfield          = lua_getfield;\nmodule.exports.lua_getglobal         = lua_getglobal;\nmodule.exports.lua_geti              = lua_geti;\nmodule.exports.lua_getmetatable      = lua_getmetatable;\nmodule.exports.lua_gettable          = lua_gettable;\nmodule.exports.lua_gettop            = lua_gettop;\nmodule.exports.lua_getupvalue        = lua_getupvalue;\nmodule.exports.lua_getuservalue      = lua_getuservalue;\nmodule.exports.lua_insert            = lua_insert;\nmodule.exports.lua_isboolean         = lua_isboolean;\nmodule.exports.lua_iscfunction       = lua_iscfunction;\nmodule.exports.lua_isfunction        = lua_isfunction;\nmodule.exports.lua_isinteger         = lua_isinteger;\nmodule.exports.lua_islightuserdata   = lua_islightuserdata;\nmodule.exports.lua_isnil             = lua_isnil;\nmodule.exports.lua_isnone            = lua_isnone;\nmodule.exports.lua_isnoneornil       = lua_isnoneornil;\nmodule.exports.lua_isnumber          = lua_isnumber;\nmodule.exports.lua_isproxy           = lua_isproxy;\nmodule.exports.lua_isstring          = lua_isstring;\nmodule.exports.lua_istable           = lua_istable;\nmodule.exports.lua_isthread          = lua_isthread;\nmodule.exports.lua_isuserdata        = lua_isuserdata;\nmodule.exports.lua_len               = lua_len;\nmodule.exports.lua_load              = lua_load;\nmodule.exports.lua_newtable          = lua_newtable;\nmodule.exports.lua_newuserdata       = lua_newuserdata;\nmodule.exports.lua_next              = lua_next;\nmodule.exports.lua_pcall             = lua_pcall;\nmodule.exports.lua_pcallk            = lua_pcallk;\nmodule.exports.lua_pop               = lua_pop;\nmodule.exports.lua_pushboolean       = lua_pushboolean;\nmodule.exports.lua_pushcclosure      = lua_pushcclosure;\nmodule.exports.lua_pushcfunction     = lua_pushcfunction;\nmodule.exports.lua_pushfstring       = lua_pushfstring;\nmodule.exports.lua_pushglobaltable   = lua_pushglobaltable;\nmodule.exports.lua_pushinteger       = lua_pushinteger;\nmodule.exports.lua_pushjsclosure     = lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction    = lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata = lua_pushlightuserdata;\nmodule.exports.lua_pushliteral       = lua_pushliteral;\nmodule.exports.lua_pushlstring       = lua_pushlstring;\nmodule.exports.lua_pushnil           = lua_pushnil;\nmodule.exports.lua_pushnumber        = lua_pushnumber;\nmodule.exports.lua_pushstring        = lua_pushstring;\nmodule.exports.lua_pushthread        = lua_pushthread;\nmodule.exports.lua_pushvalue         = lua_pushvalue;\nmodule.exports.lua_pushvfstring      = lua_pushvfstring;\nmodule.exports.lua_rawequal          = lua_rawequal;\nmodule.exports.lua_rawget            = lua_rawget;\nmodule.exports.lua_rawgeti           = lua_rawgeti;\nmodule.exports.lua_rawgetp           = lua_rawgetp;\nmodule.exports.lua_rawlen            = lua_rawlen;\nmodule.exports.lua_rawset            = lua_rawset;\nmodule.exports.lua_rawseti           = lua_rawseti;\nmodule.exports.lua_rawsetp           = lua_rawsetp;\nmodule.exports.lua_register          = lua_register;\nmodule.exports.lua_remove            = lua_remove;\nmodule.exports.lua_replace           = lua_replace;\nmodule.exports.lua_rotate            = lua_rotate;\nmodule.exports.lua_setallocf         = lua_setallocf;\nmodule.exports.lua_setfield          = lua_setfield;\nmodule.exports.lua_setglobal         = lua_setglobal;\nmodule.exports.lua_seti              = lua_seti;\nmodule.exports.lua_setmetatable      = lua_setmetatable;\nmodule.exports.lua_settable          = lua_settable;\nmodule.exports.lua_settop            = lua_settop;\nmodule.exports.lua_setupvalue        = lua_setupvalue;\nmodule.exports.lua_setuservalue      = lua_setuservalue;\nmodule.exports.lua_status            = lua_status;\nmodule.exports.lua_stringtonumber    = lua_stringtonumber;\nmodule.exports.lua_toboolean         = lua_toboolean;\nmodule.exports.lua_tocfunction       = lua_tocfunction;\nmodule.exports.lua_todataview        = lua_todataview;\nmodule.exports.lua_tointeger         = lua_tointeger;\nmodule.exports.lua_tointegerx        = lua_tointegerx;\nmodule.exports.lua_tojsstring        = lua_tojsstring;\nmodule.exports.lua_tolstring         = lua_tolstring;\nmodule.exports.lua_tonumber          = lua_tonumber;\nmodule.exports.lua_tonumberx         = lua_tonumberx;\nmodule.exports.lua_topointer         = lua_topointer;\nmodule.exports.lua_toproxy           = lua_toproxy;\nmodule.exports.lua_tostring          = lua_tostring;\nmodule.exports.lua_tothread          = lua_tothread;\nmodule.exports.lua_touserdata        = lua_touserdata;\nmodule.exports.lua_type              = lua_type;\nmodule.exports.lua_typename          = lua_typename;\nmodule.exports.lua_upvalueid         = lua_upvalueid;\nmodule.exports.lua_upvaluejoin       = lua_upvaluejoin;\nmodule.exports.lua_version           = lua_version;\nmodule.exports.lua_xmove             = lua_xmove;\n","\"use strict\";\n\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass MBuffer {\n    constructor() {\n        this.buffer = null;\n        this.n = 0;\n    }\n}\n\nconst luaZ_buffer = function(buff) {\n    return buff.buffer.subarray(0, buff.n);\n};\n\nconst luaZ_buffremove = function(buff, i) {\n    buff.n -= i;\n};\n\nconst luaZ_resetbuffer = function(buff) {\n    buff.n = 0;\n};\n\nconst luaZ_resizebuffer = function(L, buff, size) {\n    let newbuff = new Uint8Array(size);\n    if (buff.buffer)\n        newbuff.set(buff.buffer);\n    buff.buffer = newbuff;\n};\n\nclass ZIO {\n    constructor(L, reader, data) {\n        this.L = L;           /* Lua state (for reader) */\n        lua_assert(typeof reader == \"function\", \"ZIO requires a reader\");\n        this.reader = reader; /* reader function */\n        this.data = data;     /* additional data */\n        this.n = 0;           /* bytes still unread */\n        this.buffer = null;\n        this.off = 0;         /* current position in buffer */\n    }\n\n    zgetc () {\n        return ((this.n--) > 0) ? this.buffer[this.off++] : luaZ_fill(this);\n    }\n}\n\nconst EOZ = -1;\n\nconst luaZ_fill = function(z) {\n    let buff = z.reader(z.L, z.data);\n    if (buff === null)\n        return EOZ;\n    lua_assert(buff instanceof Uint8Array, \"Should only load binary of array of bytes\");\n    let size = buff.length;\n    if (size === 0)\n        return EOZ;\n    z.buffer = buff;\n    z.off = 0;\n    z.n = size - 1;\n    return z.buffer[z.off++];\n};\n\n/* b should be an array-like that will be set to bytes\n * b_offset is the offset at which to start filling */\nconst luaZ_read = function(z, b, b_offset, n) {\n    while (n) {\n        if (z.n === 0) { /* no bytes in buffer? */\n            if (luaZ_fill(z) === EOZ)\n                return n; /* no more input; return number of missing bytes */\n            else {\n                z.n++;  /* luaZ_fill consumed first byte; put it back */\n                z.off--;\n            }\n        }\n        let m = (n <= z.n) ? n : z.n; /* min. between n and z->n */\n        for (let i=0; i<m; i++) {\n            b[b_offset++] = z.buffer[z.off++];\n        }\n        z.n -= m;\n        if (z.n === 0) // remove reference to input so it can get freed\n            z.buffer = null;\n        n -= m;\n    }\n\n    return 0;\n};\n\nmodule.exports.EOZ               = EOZ;\nmodule.exports.luaZ_buffer       = luaZ_buffer;\nmodule.exports.luaZ_buffremove   = luaZ_buffremove;\nmodule.exports.luaZ_fill         = luaZ_fill;\nmodule.exports.luaZ_read         = luaZ_read;\nmodule.exports.luaZ_resetbuffer  = luaZ_resetbuffer;\nmodule.exports.luaZ_resizebuffer = luaZ_resizebuffer;\nmodule.exports.MBuffer           = MBuffer;\nmodule.exports.ZIO               = ZIO;\n","\"use strict\";\n\nconst {\n    constant_types: { LUA_TBOOLEAN, LUA_TLNGSTR },\n    thread_status: { LUA_ERRSYNTAX },\n    to_luastring\n} = require('./defs.js');\nconst {\n    LUA_MINBUFFER,\n    MAX_INT,\n    lua_assert\n} = require('./llimits.js');\nconst ldebug   = require('./ldebug.js');\nconst ldo      = require('./ldo.js');\nconst {\n    lisdigit,\n    lislalnum,\n    lislalpha,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst lobject  = require('./lobject.js');\nconst {\n    luaS_bless,\n    luaS_hash,\n    luaS_hashlongstr,\n    luaS_new\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst {\n    EOZ,\n    luaZ_buffer,\n    luaZ_buffremove,\n    luaZ_resetbuffer,\n    luaZ_resizebuffer\n} = require('./lzio.js');\n\nconst FIRST_RESERVED = 257;\n\nconst LUA_ENV = to_luastring(\"_ENV\", true);\n\n/* terminal symbols denoted by reserved words */\nconst TK_AND      = FIRST_RESERVED;\nconst TK_BREAK    = FIRST_RESERVED + 1;\nconst TK_DO       = FIRST_RESERVED + 2;\nconst TK_ELSE     = FIRST_RESERVED + 3;\nconst TK_ELSEIF   = FIRST_RESERVED + 4;\nconst TK_END      = FIRST_RESERVED + 5;\nconst TK_FALSE    = FIRST_RESERVED + 6;\nconst TK_FOR      = FIRST_RESERVED + 7;\nconst TK_FUNCTION = FIRST_RESERVED + 8;\nconst TK_GOTO     = FIRST_RESERVED + 9;\nconst TK_IF       = FIRST_RESERVED + 10;\nconst TK_IN       = FIRST_RESERVED + 11;\nconst TK_LOCAL    = FIRST_RESERVED + 12;\nconst TK_NIL      = FIRST_RESERVED + 13;\nconst TK_NOT      = FIRST_RESERVED + 14;\nconst TK_OR       = FIRST_RESERVED + 15;\nconst TK_REPEAT   = FIRST_RESERVED + 16;\nconst TK_RETURN   = FIRST_RESERVED + 17;\nconst TK_THEN     = FIRST_RESERVED + 18;\nconst TK_TRUE     = FIRST_RESERVED + 19;\nconst TK_UNTIL    = FIRST_RESERVED + 20;\nconst TK_WHILE    = FIRST_RESERVED + 21;\n/* other terminal symbols */\nconst TK_IDIV     = FIRST_RESERVED + 22;\nconst TK_CONCAT   = FIRST_RESERVED + 23;\nconst TK_DOTS     = FIRST_RESERVED + 24;\nconst TK_EQ       = FIRST_RESERVED + 25;\nconst TK_GE       = FIRST_RESERVED + 26;\nconst TK_LE       = FIRST_RESERVED + 27;\nconst TK_NE       = FIRST_RESERVED + 28;\nconst TK_SHL      = FIRST_RESERVED + 29;\nconst TK_SHR      = FIRST_RESERVED + 30;\nconst TK_DBCOLON  = FIRST_RESERVED + 31;\nconst TK_EOS      = FIRST_RESERVED + 32;\nconst TK_FLT      = FIRST_RESERVED + 33;\nconst TK_INT      = FIRST_RESERVED + 34;\nconst TK_NAME     = FIRST_RESERVED + 35;\nconst TK_STRING   = FIRST_RESERVED + 36;\n\nconst RESERVED = {\n    \"TK_AND\":      TK_AND,\n    \"TK_BREAK\":    TK_BREAK,\n    \"TK_DO\":       TK_DO,\n    \"TK_ELSE\":     TK_ELSE,\n    \"TK_ELSEIF\":   TK_ELSEIF,\n    \"TK_END\":      TK_END,\n    \"TK_FALSE\":    TK_FALSE,\n    \"TK_FOR\":      TK_FOR,\n    \"TK_FUNCTION\": TK_FUNCTION,\n    \"TK_GOTO\":     TK_GOTO,\n    \"TK_IF\":       TK_IF,\n    \"TK_IN\":       TK_IN,\n    \"TK_LOCAL\":    TK_LOCAL,\n    \"TK_NIL\":      TK_NIL,\n    \"TK_NOT\":      TK_NOT,\n    \"TK_OR\":       TK_OR,\n    \"TK_REPEAT\":   TK_REPEAT,\n    \"TK_RETURN\":   TK_RETURN,\n    \"TK_THEN\":     TK_THEN,\n    \"TK_TRUE\":     TK_TRUE,\n    \"TK_UNTIL\":    TK_UNTIL,\n    \"TK_WHILE\":    TK_WHILE,\n    \"TK_IDIV\":     TK_IDIV,\n    \"TK_CONCAT\":   TK_CONCAT,\n    \"TK_DOTS\":     TK_DOTS,\n    \"TK_EQ\":       TK_EQ,\n    \"TK_GE\":       TK_GE,\n    \"TK_LE\":       TK_LE,\n    \"TK_NE\":       TK_NE,\n    \"TK_SHL\":      TK_SHL,\n    \"TK_SHR\":      TK_SHR,\n    \"TK_DBCOLON\":  TK_DBCOLON,\n    \"TK_EOS\":      TK_EOS,\n    \"TK_FLT\":      TK_FLT,\n    \"TK_INT\":      TK_INT,\n    \"TK_NAME\":     TK_NAME,\n    \"TK_STRING\":   TK_STRING\n};\n\nconst luaX_tokens = [\n    \"and\", \"break\", \"do\", \"else\", \"elseif\",\n    \"end\", \"false\", \"for\", \"function\", \"goto\", \"if\",\n    \"in\", \"local\", \"nil\", \"not\", \"or\", \"repeat\",\n    \"return\", \"then\", \"true\", \"until\", \"while\",\n    \"//\", \"..\", \"...\", \"==\", \">=\", \"<=\", \"~=\",\n    \"<<\", \">>\", \"::\", \"<eof>\",\n    \"<number>\", \"<integer>\", \"<name>\", \"<string>\"\n].map((e, i)=>to_luastring(e));\n\nclass SemInfo {\n    constructor() {\n        this.r = NaN;\n        this.i = NaN;\n        this.ts = null;\n    }\n}\n\nclass Token {\n    constructor() {\n        this.token = NaN;\n        this.seminfo = new SemInfo();\n    }\n}\n\n/* state of the lexer plus state of the parser when shared by all\n   functions */\nclass LexState {\n    constructor() {\n        this.current = NaN;  /* current character (charint) */\n        this.linenumber = NaN;  /* input line counter */\n        this.lastline = NaN;  /* line of last token 'consumed' */\n        this.t = new Token();  /* current token */\n        this.lookahead = new Token();  /* look ahead token */\n        this.fs = null;  /* current function (parser) */\n        this.L = null;\n        this.z = null; /* input stream */\n        this.buff = null;  /* buffer for tokens */\n        this.h = null;  /* to reuse strings */\n        this.dyd = null;  /* dynamic structures used by the parser */\n        this.source = null;  /* current source name */\n        this.envn = null;  /* environment variable name */\n    }\n}\n\nconst save = function(ls, c) {\n    let b = ls.buff;\n    if (b.n + 1 > b.buffer.length) {\n        if (b.buffer.length >= MAX_INT/2)\n            lexerror(ls, to_luastring(\"lexical element too long\", true), 0);\n        let newsize = b.buffer.length*2;\n        luaZ_resizebuffer(ls.L, b, newsize);\n    }\n    b.buffer[b.n++] = c < 0 ? 255 + c + 1 : c;\n};\n\nconst luaX_token2str = function(ls, token) {\n    if (token < FIRST_RESERVED) {  /* single-byte symbols? */\n        return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%c'\", true), token);\n    } else {\n        let s = luaX_tokens[token - FIRST_RESERVED];\n        if (token < TK_EOS)  /* fixed format (symbols and reserved words)? */\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), s);\n        else  /* names, strings, and numerals */\n            return s;\n    }\n};\n\nconst currIsNewline = function(ls) {\n    return ls.current === 10 /* ('\\n').charCodeAt(0) */ || ls.current === 13 /* ('\\r').charCodeAt(0) */;\n};\n\nconst next = function(ls) {\n    ls.current = ls.z.zgetc();\n};\n\nconst save_and_next = function(ls) {\n    save(ls, ls.current);\n    next(ls);\n};\n\n/*\n** creates a new string and anchors it in scanner's table so that\n** it will not be collected until the end of the compilation\n** (by that time it should be anchored somewhere)\n*/\nconst TVtrue = new lobject.TValue(LUA_TBOOLEAN, true);\nconst luaX_newstring = function(ls, str) {\n    let L = ls.L;\n    let ts = luaS_new(L, str);\n    /* HACK: Workaround lack of ltable 'keyfromval' */\n    let tpair = ls.h.strong.get(luaS_hashlongstr(ts));\n    if (!tpair) { /* not in use yet? */\n        let key = new lobject.TValue(LUA_TLNGSTR, ts);\n        ltable.luaH_setfrom(L, ls.h, key, TVtrue);\n    } else { /* string already present */\n        ts = tpair.key.tsvalue(); /* re-use value previously stored */\n    }\n    return ts;\n};\n\n/*\n** increment line number and skips newline sequence (any of\n** \\n, \\r, \\n\\r, or \\r\\n)\n*/\nconst inclinenumber = function(ls) {\n    let old = ls.current;\n    lua_assert(currIsNewline(ls));\n    next(ls);  /* skip '\\n' or '\\r' */\n    if (currIsNewline(ls) && ls.current !== old)\n        next(ls);  /* skip '\\n\\r' or '\\r\\n' */\n    if (++ls.linenumber >= MAX_INT)\n        lexerror(ls, to_luastring(\"chunk has too many lines\", true), 0);\n};\n\nconst luaX_setinput = function(L, ls, z, source, firstchar) {\n    ls.t = {\n        token: 0,\n        seminfo: new SemInfo()\n    };\n    ls.L = L;\n    ls.current = firstchar;\n    ls.lookahead = {\n        token: TK_EOS,\n        seminfo: new SemInfo()\n    };\n    ls.z = z;\n    ls.fs = null;\n    ls.linenumber = 1;\n    ls.lastline = 1;\n    ls.source = source;\n    ls.envn = luaS_bless(L, LUA_ENV);\n    luaZ_resizebuffer(L, ls.buff, LUA_MINBUFFER);  /* initialize buffer */\n};\n\nconst check_next1 = function(ls, c) {\n    if (ls.current === c) {\n        next(ls);\n        return true;\n    }\n\n    return false;\n};\n\n/*\n** Check whether current char is in set 'set' (with two chars) and\n** saves it\n*/\nconst check_next2 = function(ls, set) {\n    if (ls.current === set[0].charCodeAt(0) || ls.current === set[1].charCodeAt(0)) {\n        save_and_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst read_numeral = function(ls, seminfo) {\n    let expo = \"Ee\";\n    let first = ls.current;\n    lua_assert(lisdigit(ls.current));\n    save_and_next(ls);\n    if (first === 48 /* ('0').charCodeAt(0) */ && check_next2(ls, \"xX\"))  /* hexadecimal? */\n        expo = \"Pp\";\n\n    for (;;) {\n        if (check_next2(ls, expo))  /* exponent part? */\n            check_next2(ls, \"-+\");  /* optional exponent sign */\n        if (lisxdigit(ls.current))\n            save_and_next(ls);\n        else if (ls.current === 46 /* ('.').charCodeAt(0) */)\n            save_and_next(ls);\n        else break;\n    }\n\n    // save(ls, 0);\n\n    let obj = new lobject.TValue();\n    if (lobject.luaO_str2num(luaZ_buffer(ls.buff), obj) === 0)  /* format error? */\n        lexerror(ls, to_luastring(\"malformed number\", true), TK_FLT);\n    if (obj.ttisinteger()) {\n        seminfo.i = obj.value;\n        return TK_INT;\n    } else {\n        lua_assert(obj.ttisfloat());\n        seminfo.r = obj.value;\n        return TK_FLT;\n    }\n};\n\nconst txtToken = function(ls, token) {\n    switch (token) {\n        case TK_NAME: case TK_STRING:\n        case TK_FLT: case TK_INT:\n            // save(ls, 0);\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), luaZ_buffer(ls.buff));\n        default:\n            return luaX_token2str(ls, token);\n    }\n};\n\nconst lexerror = function(ls, msg, token) {\n    msg = ldebug.luaG_addinfo(ls.L, msg, ls.source, ls.linenumber);\n    if (token)\n        lobject.luaO_pushfstring(ls.L, to_luastring(\"%s near %s\"), msg, txtToken(ls, token));\n    ldo.luaD_throw(ls.L, LUA_ERRSYNTAX);\n};\n\nconst luaX_syntaxerror = function(ls, msg) {\n    lexerror(ls, msg, ls.t.token);\n};\n\n/*\n** skip a sequence '[=*[' or ']=*]'; if sequence is well formed, return\n** its number of '='s; otherwise, return a negative number (-1 iff there\n** are no '='s after initial bracket)\n*/\nconst skip_sep = function(ls) {\n    let count = 0;\n    let s = ls.current;\n    lua_assert(s === 91 /* ('[').charCodeAt(0) */ || s === 93 /* (']').charCodeAt(0) */);\n    save_and_next(ls);\n    while (ls.current === 61 /* ('=').charCodeAt(0) */) {\n        save_and_next(ls);\n        count++;\n    }\n    return ls.current === s ? count : (-count) - 1;\n};\n\nconst read_long_string = function(ls, seminfo, sep) {\n    let line = ls.linenumber;  /* initial line (for error message) */\n    save_and_next(ls);  /* skip 2nd '[' */\n\n    if (currIsNewline(ls))  /* string starts with a newline? */\n        inclinenumber(ls);  /* skip it */\n\n    let skip = false;\n    for (; !skip ;) {\n        switch (ls.current) {\n            case EOZ: {  /* error */\n                let what = seminfo ? \"string\" : \"comment\";\n                let msg = `unfinished long ${what} (starting at line ${line})`;\n                lexerror(ls, to_luastring(msg), TK_EOS);\n                break;\n            }\n            case 93 /* (']').charCodeAt(0) */: {\n                if (skip_sep(ls) === sep) {\n                    save_and_next(ls);  /* skip 2nd ']' */\n                    skip = true;\n                }\n                break;\n            }\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {\n                save(ls, 10 /* ('\\n').charCodeAt(0) */);\n                inclinenumber(ls);\n                if (!seminfo) luaZ_resetbuffer(ls.buff);\n                break;\n            }\n            default: {\n                if (seminfo) save_and_next(ls);\n                else next(ls);\n            }\n        }\n    }\n\n    if (seminfo)\n        seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(2 + sep, ls.buff.n - (2 + sep)));\n};\n\nconst esccheck = function(ls, c, msg) {\n    if (!c) {\n        if (ls.current !== EOZ)\n            save_and_next(ls);  /* add current to buffer for error message */\n        lexerror(ls, msg, TK_STRING);\n    }\n};\n\nconst gethexa = function(ls) {\n    save_and_next(ls);\n    esccheck(ls, lisxdigit(ls.current), to_luastring(\"hexadecimal digit expected\", true));\n    return lobject.luaO_hexavalue(ls.current);\n};\n\nconst readhexaesc = function(ls) {\n    let r = gethexa(ls);\n    r = (r << 4) + gethexa(ls);\n    luaZ_buffremove(ls.buff, 2);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst readutf8desc = function(ls) {\n    let i = 4;  /* chars to be removed: '\\', 'u', '{', and first digit */\n    save_and_next(ls);  /* skip 'u' */\n    esccheck(ls, ls.current === 123 /* ('{').charCodeAt(0) */, to_luastring(\"missing '{'\", true));\n    let r = gethexa(ls);  /* must have at least one digit */\n\n    save_and_next(ls);\n    while (lisxdigit(ls.current)) {\n        i++;\n        r = (r << 4) + lobject.luaO_hexavalue(ls.current);\n        esccheck(ls, r <= 0x10FFFF, to_luastring(\"UTF-8 value too large\", true));\n        save_and_next(ls);\n    }\n    esccheck(ls, ls.current === 125 /* ('}').charCodeAt(0) */, to_luastring(\"missing '}'\", true));\n    next(ls);  /* skip '}' */\n    luaZ_buffremove(ls.buff, i);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst utf8esc = function(ls) {\n    let buff = new Uint8Array(lobject.UTF8BUFFSZ);\n    let n = lobject.luaO_utf8esc(buff, readutf8desc(ls));\n    for (; n > 0; n--)  /* add 'buff' to string */\n        save(ls, buff[lobject.UTF8BUFFSZ - n]);\n};\n\nconst readdecesc = function(ls) {\n    let r = 0;  /* result accumulator */\n    let i;\n    for (i = 0; i < 3 && lisdigit(ls.current); i++) {  /* read up to 3 digits */\n        r = 10 * r + ls.current - 48 /* ('0').charCodeAt(0) */;\n        save_and_next(ls);\n    }\n    esccheck(ls, r <= 255, to_luastring(\"decimal escape too large\", true));\n    luaZ_buffremove(ls.buff, i);  /* remove read digits from buffer */\n    return r;\n};\n\nconst read_string = function(ls, del, seminfo) {\n    save_and_next(ls);  /* keep delimiter (for error messages) */\n\n    while (ls.current !== del) {\n        switch (ls.current) {\n            case EOZ:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_EOS);\n                break;\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_STRING);\n                break;\n            case 92 /* ('\\\\').charCodeAt(0) */: {  /* escape sequences */\n                save_and_next(ls);  /* keep '\\\\' for error messages */\n                let will;\n                let c;\n                switch(ls.current) {\n                    case 97 /* ('a').charCodeAt(0) */: c = 7 /* \\a isn't valid JS */; will = 'read_save'; break;\n                    case 98 /* ('b').charCodeAt(0) */: c = 8 /* ('\\b').charCodeAt(0) */; will = 'read_save'; break;\n                    case 102 /* ('f').charCodeAt(0) */: c = 12 /* ('\\f').charCodeAt(0) */; will = 'read_save'; break;\n                    case 110 /* ('n').charCodeAt(0) */: c = 10 /* ('\\n').charCodeAt(0) */; will = 'read_save'; break;\n                    case 114 /* ('r').charCodeAt(0) */: c = 13 /* ('\\r').charCodeAt(0) */; will = 'read_save'; break;\n                    case 116 /* ('t').charCodeAt(0) */: c = 9 /* ('\\t').charCodeAt(0) */; will = 'read_save'; break;\n                    case 118 /* ('v').charCodeAt(0) */: c = 11 /* ('\\v').charCodeAt(0) */; will = 'read_save'; break;\n                    case 120 /* ('x').charCodeAt(0) */: c = readhexaesc(ls); will = 'read_save'; break;\n                    case 117 /* ('u').charCodeAt(0) */: utf8esc(ls); will = 'no_save'; break;\n                    case 10 /* ('\\n').charCodeAt(0) */:\n                    case 13 /* ('\\r').charCodeAt(0) */:\n                        inclinenumber(ls); c = 10 /* ('\\n').charCodeAt(0) */; will = 'only_save'; break;\n                    case 92 /* ('\\\\').charCodeAt(0) */:\n                    case 34 /* ('\"').charCodeAt(0) */:\n                    case 39 /* ('\\'').charCodeAt(0) */:\n                        c = ls.current; will = 'read_save'; break;\n                    case EOZ: will = 'no_save'; break;  /* will raise an error next loop */\n                    case 122 /* ('z').charCodeAt(0) */: {  /* zap following span of spaces */\n                        luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                        next(ls);  /* skip the 'z' */\n                        while (lisspace(ls.current)) {\n                            if (currIsNewline(ls)) inclinenumber(ls);\n                            else next(ls);\n                        }\n                        will = 'no_save'; break;\n                    }\n                    default: {\n                        esccheck(ls, lisdigit(ls.current), to_luastring(\"invalid escape sequence\", true));\n                        c = readdecesc(ls);  /* digital escape '\\ddd' */\n                        will = 'only_save'; break;\n                    }\n                }\n\n                if (will === 'read_save')\n                    next(ls);\n\n                if (will === 'read_save' || will === 'only_save') {\n                    luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                    save(ls, c);\n                }\n\n                break;\n            }\n            default:\n                save_and_next(ls);\n        }\n    }\n    save_and_next(ls);  /* skip delimiter */\n\n    seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(1, ls.buff.n-1));\n};\n\nconst token_to_index = Object.create(null); /* don't want to return true for e.g. 'hasOwnProperty' */\nluaX_tokens.forEach((e, i)=>token_to_index[luaS_hash(e)] = i);\n\nconst isreserved = function(w) {\n    let kidx = token_to_index[luaS_hashlongstr(w)];\n    return kidx !== void 0 && kidx <= 22;\n};\n\nconst llex = function(ls, seminfo) {\n    luaZ_resetbuffer(ls.buff);\n    for (;;) {\n        lua_assert(typeof ls.current == \"number\"); /* fengari addition */\n        switch (ls.current) {\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {  /* line breaks */\n                inclinenumber(ls);\n                break;\n            }\n            case 32 /* (' ').charCodeAt(0) */:\n            case 12 /* ('\\f').charCodeAt(0) */:\n            case 9 /* ('\\t').charCodeAt(0) */:\n            case 11 /* ('\\v').charCodeAt(0) */: {  /* spaces */\n                next(ls);\n                break;\n            }\n            case 45 /* ('-').charCodeAt(0) */: {  /* '-' or '--' (comment) */\n                next(ls);\n                if (ls.current !== 45 /* ('-').charCodeAt(0) */) return 45 /* ('-').charCodeAt(0) */;\n                /* else is a comment */\n                next(ls);\n                if (ls.current === 91 /* ('[').charCodeAt(0) */) {  /* long comment? */\n                    let sep = skip_sep(ls);\n                    luaZ_resetbuffer(ls.buff);  /* 'skip_sep' may dirty the buffer */\n                    if (sep >= 0) {\n                        read_long_string(ls, null, sep);  /* skip long comment */\n                        luaZ_resetbuffer(ls.buff);  /* previous call may dirty the buff. */\n                        break;\n                    }\n                }\n\n                /* else short comment */\n                while (!currIsNewline(ls) && ls.current !== EOZ)\n                    next(ls);  /* skip until end of line (or end of file) */\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* long string or simply '[' */\n                let sep = skip_sep(ls);\n                if (sep >= 0) {\n                    read_long_string(ls, seminfo, sep);\n                    return TK_STRING;\n                } else if (sep !== -1)  /* '[=...' missing second bracket */\n                    lexerror(ls, to_luastring(\"invalid long string delimiter\", true), TK_STRING);\n                return 91 /* ('[').charCodeAt(0) */;\n            }\n            case 61 /* ('=').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_EQ;\n                else return 61 /* ('=').charCodeAt(0) */;\n            }\n            case 60 /* ('<').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_LE;\n                else if (check_next1(ls, 60 /* ('<').charCodeAt(0) */)) return TK_SHL;\n                else return 60 /* ('<').charCodeAt(0) */;\n            }\n            case 62 /* ('>').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_GE;\n                else if (check_next1(ls, 62 /* ('>').charCodeAt(0) */)) return TK_SHR;\n                else return 62 /* ('>').charCodeAt(0) */;\n            }\n            case 47 /* ('/').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 47 /* ('/').charCodeAt(0) */)) return TK_IDIV;\n                else return 47 /* ('/').charCodeAt(0) */;\n            }\n            case 126 /* ('~').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_NE;\n                else return 126 /* ('~').charCodeAt(0) */;\n            }\n            case 58 /* (':').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 58 /* (':').charCodeAt(0) */)) return TK_DBCOLON;\n                else return 58 /* (':').charCodeAt(0) */;\n            }\n            case 34 /* ('\"').charCodeAt(0) */:\n            case 39 /* ('\\'').charCodeAt(0) */: {  /* short literal strings */\n                read_string(ls, ls.current, seminfo);\n                return TK_STRING;\n            }\n            case 46 /* ('.').charCodeAt(0) */: {  /* '.', '..', '...', or number */\n                save_and_next(ls);\n                if (check_next1(ls, 46 /* ('.').charCodeAt(0) */)) {\n                    if (check_next1(ls, 46 /* ('.').charCodeAt(0) */))\n                        return TK_DOTS;   /* '...' */\n                    else return TK_CONCAT;   /* '..' */\n                }\n                else if (!lisdigit(ls.current)) return 46 /* ('.').charCodeAt(0) */;\n                else return read_numeral(ls, seminfo);\n            }\n            case 48 /* ('0').charCodeAt(0) */: case 49 /* ('1').charCodeAt(0) */: case 50 /* ('2').charCodeAt(0) */: case 51 /* ('3').charCodeAt(0) */: case 52 /* ('4').charCodeAt(0) */:\n            case 53 /* ('5').charCodeAt(0) */: case 54 /* ('6').charCodeAt(0) */: case 55 /* ('7').charCodeAt(0) */: case 56 /* ('8').charCodeAt(0) */: case 57 /* ('9').charCodeAt(0) */: {\n                return read_numeral(ls, seminfo);\n            }\n            case EOZ: {\n                return TK_EOS;\n            }\n            default: {\n                if (lislalpha(ls.current)) {  /* identifier or reserved word? */\n                    do {\n                        save_and_next(ls);\n                    } while (lislalnum(ls.current));\n                    let ts = luaX_newstring(ls, luaZ_buffer(ls.buff));\n                    seminfo.ts = ts;\n                    let kidx = token_to_index[luaS_hashlongstr(ts)];\n                    if (kidx !== void 0 && kidx <= 22)  /* reserved word? */\n                        return kidx + FIRST_RESERVED;\n                    else\n                        return TK_NAME;\n                } else {  /* single-char tokens (+ - / ...) */\n                    let c = ls.current;\n                    next(ls);\n                    return c;\n                }\n            }\n        }\n    }\n};\n\nconst luaX_next = function(ls) {\n    ls.lastline = ls.linenumber;\n    if (ls.lookahead.token !== TK_EOS) {  /* is there a look-ahead token? */\n        ls.t.token = ls.lookahead.token;  /* use this one */\n        ls.t.seminfo.i = ls.lookahead.seminfo.i;\n        ls.t.seminfo.r = ls.lookahead.seminfo.r;\n        ls.t.seminfo.ts = ls.lookahead.seminfo.ts;\n        ls.lookahead.token = TK_EOS;  /* and discharge it */\n    } else\n        ls.t.token = llex(ls, ls.t.seminfo);  /* read next token */\n};\n\nconst luaX_lookahead = function(ls) {\n    lua_assert(ls.lookahead.token === TK_EOS);\n    ls.lookahead.token = llex(ls, ls.lookahead.seminfo);\n    return ls.lookahead.token;\n};\n\nmodule.exports.FIRST_RESERVED   = FIRST_RESERVED;\nmodule.exports.LUA_ENV          = LUA_ENV;\nmodule.exports.LexState         = LexState;\nmodule.exports.RESERVED         = RESERVED;\nmodule.exports.isreserved       = isreserved;\nmodule.exports.luaX_lookahead   = luaX_lookahead;\nmodule.exports.luaX_newstring   = luaX_newstring;\nmodule.exports.luaX_next        = luaX_next;\nmodule.exports.luaX_setinput    = luaX_setinput;\nmodule.exports.luaX_syntaxerror = luaX_syntaxerror;\nmodule.exports.luaX_token2str   = luaX_token2str;\nmodule.exports.luaX_tokens      = luaX_tokens;\n","\"use strict\";\n\nconst { luastring_of } = require('./defs.js');\n\nconst luai_ctype_ = luastring_of(\n    0x00,  /* EOZ */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 0. */\n    0x00,  0x08,  0x08,  0x08,  0x08,  0x08,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 1. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x0c,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,        /* 2. */\n    0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,        /* 3. */\n    0x16,  0x16,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 4. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 5. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x05,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 6. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 7. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 8. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 9. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* a. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* b. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* c. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* d. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* e. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* f. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00\n);\n\nconst ALPHABIT = 0;\nconst DIGITBIT = 1;\nconst PRINTBIT = 2;\nconst SPACEBIT = 3;\nconst XDIGITBIT = 4;\n\nconst lisdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<DIGITBIT)) !== 0;\n};\n\nconst lisxdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<XDIGITBIT)) !== 0;\n};\n\nconst lisprint = function(c) {\n    return (luai_ctype_[c+1] & (1<<PRINTBIT)) !== 0;\n};\n\nconst lisspace = function(c) {\n    return (luai_ctype_[c+1] & (1<<SPACEBIT)) !== 0;\n};\n\nconst lislalpha = function(c) {\n    return (luai_ctype_[c+1] & (1<<ALPHABIT)) !== 0;\n};\n\nconst lislalnum = function(c) {\n    return (luai_ctype_[c+1] & ((1<<ALPHABIT)|(1<<DIGITBIT))) !== 0;\n};\n\nmodule.exports.lisdigit   = lisdigit;\nmodule.exports.lislalnum  = lislalnum;\nmodule.exports.lislalpha  = lislalpha;\nmodule.exports.lisprint   = lisprint;\nmodule.exports.lisspace   = lisspace;\nmodule.exports.lisxdigit  = lisxdigit;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    to_luastring\n} = require('./defs.js');\nconst {\n    BinOpr: {\n        OPR_ADD,\n        OPR_AND,\n        OPR_BAND,\n        OPR_BOR,\n        OPR_BXOR,\n        OPR_CONCAT,\n        OPR_DIV,\n        OPR_EQ,\n        OPR_GE,\n        OPR_GT,\n        OPR_IDIV,\n        OPR_LE,\n        OPR_LT,\n        OPR_MOD,\n        OPR_MUL,\n        OPR_NE,\n        OPR_NOBINOPR,\n        OPR_OR,\n        OPR_POW,\n        OPR_SHL,\n        OPR_SHR,\n        OPR_SUB\n    },\n    UnOpr: {\n        OPR_BNOT,\n        OPR_LEN,\n        OPR_MINUS,\n        OPR_NOT,\n        OPR_NOUNOPR\n    },\n    NO_JUMP,\n    getinstruction,\n    luaK_checkstack,\n    luaK_codeABC,\n    luaK_codeABx,\n    luaK_codeAsBx,\n    luaK_codek,\n    luaK_concat,\n    luaK_dischargevars,\n    luaK_exp2RK,\n    luaK_exp2anyreg,\n    luaK_exp2anyregup,\n    luaK_exp2nextreg,\n    luaK_exp2val,\n    luaK_fixline,\n    luaK_getlabel,\n    luaK_goiffalse,\n    luaK_goiftrue,\n    luaK_indexed,\n    luaK_infix,\n    luaK_intK,\n    luaK_jump,\n    luaK_jumpto,\n    luaK_nil,\n    luaK_patchclose,\n    luaK_patchlist,\n    luaK_patchtohere,\n    luaK_posfix,\n    luaK_prefix,\n    luaK_reserveregs,\n    luaK_ret,\n    luaK_self,\n    luaK_setlist,\n    luaK_setmultret,\n    luaK_setoneret,\n    luaK_setreturns,\n    luaK_storevar,\n    luaK_stringK\n} = require('./lcode.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst {\n    LUAI_MAXCCALLS,\n    MAX_INT,\n    lua_assert\n}  = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst {\n    OpCodesI: {\n        OP_CALL,\n        OP_CLOSURE,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETUPVAL,\n        OP_MOVE,\n        OP_NEWTABLE,\n        OP_SETTABLE,\n        OP_TAILCALL,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_VARARG\n    },\n    LFIELDS_PER_FLUSH,\n    SETARG_B,\n    SETARG_C,\n    SET_OPCODE\n} = require('./lopcodes.js');\nconst {\n    luaS_eqlngstr,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst Proto    = lfunc.Proto;\nconst R        = llex.RESERVED;\n\nconst MAXVARS = 200;\n\nconst hasmultret = function(k) {\n    return k === expkind.VCALL || k === expkind.VVARARG;\n};\n\nconst eqstr = function(a, b) {\n    /* TODO: use plain equality as strings are cached */\n    return luaS_eqlngstr(a, b);\n};\n\nclass BlockCnt {\n    constructor() {\n        this.previous = null;  /* chain */\n        this.firstlabel = NaN; /* index of first label in this block */\n        this.firstgoto = NaN;  /* index of first pending goto in this block */\n        this.nactvar = NaN;    /* # active locals outside the block */\n        this.upval = NaN;      /* true if some variable in the block is an upvalue */\n        this.isloop = NaN;     /* true if 'block' is a loop */\n    }\n}\n\nconst expkind = {\n    VVOID: 0,        /* when 'expdesc' describes the last expression a list,\n                        this kind means an empty list (so, no expression) */\n    VNIL: 1,         /* constant nil */\n    VTRUE: 2,        /* constant true */\n    VFALSE: 3,       /* constant false */\n    VK: 4,           /* constant in 'k'; info = index of constant in 'k' */\n    VKFLT: 5,        /* floating constant; nval = numerical float value */\n    VKINT: 6,        /* integer constant; nval = numerical integer value */\n    VNONRELOC: 7,    /* expression has its value in a fixed register;\n                        info = result register */\n    VLOCAL: 8,       /* local variable; info = local register */\n    VUPVAL: 9,       /* upvalue variable; info = index of upvalue in 'upvalues' */\n    VINDEXED: 10,    /* indexed variable;\n                        ind.vt = whether 't' is register or upvalue;\n                        ind.t = table register or upvalue;\n                        ind.idx = key's R/K index */\n    VJMP: 11,        /* expression is a test/comparison;\n                        info = pc of corresponding jump instruction */\n    VRELOCABLE: 12,  /* expression can put result in any register;\n                        info = instruction pc */\n    VCALL: 13,       /* expression is a function call; info = instruction pc */\n    VVARARG: 14      /* vararg expression; info = instruction pc */\n};\n\nconst vkisvar = function(k) {\n    return expkind.VLOCAL <= k && k <= expkind.VINDEXED;\n};\n\nconst vkisinreg = function(k) {\n    return k === expkind.VNONRELOC || k === expkind.VLOCAL;\n};\n\nclass expdesc {\n    constructor() {\n        this.k = NaN;\n        this.u = {\n            ival: NaN,    /* for VKINT */\n            nval: NaN,    /* for VKFLT */\n            info: NaN,    /* for generic use */\n            ind: {        /* for indexed variables (VINDEXED) */\n                idx: NaN, /* index (R/K) */\n                t: NaN,   /* table (register or upvalue) */\n                vt: NaN   /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */\n            }\n        };\n        this.t = NaN;     /* patch list of 'exit when true' */\n        this.f = NaN;     /* patch list of 'exit when false' */\n    }\n\n    to(e) { // Copy e content to this, cf. luaK_posfix\n        this.k = e.k;\n        this.u = e.u;\n        this.t = e.t;\n        this.f = e.f;\n    }\n}\n\nclass FuncState {\n    constructor() {\n        this.f = null;         /* current function header */\n        this.prev = null;      /* enclosing function */\n        this.ls = null;        /* lexical state */\n        this.bl = null;        /* chain of current blocks */\n        this.pc = NaN;         /* next position to code (equivalent to 'ncode') */\n        this.lasttarget = NaN; /* 'label' of last 'jump label' */\n        this.jpc = NaN;        /* list of pending jumps to 'pc' */\n        this.nk = NaN;         /* number of elements in 'k' */\n        this.np = NaN;         /* number of elements in 'p' */\n        this.firstlocal = NaN; /* index of first local var (in Dyndata array) */\n        this.nlocvars = NaN;   /* number of elements in 'f->locvars' */\n        this.nactvar = NaN;    /* number of active local variables */\n        this.nups = NaN;       /* number of upvalues */\n        this.freereg = NaN;    /* first free register */\n    }\n}\n\n/* description of active local variable */\nclass Vardesc {\n    constructor() {\n        this.idx = NaN;  /* variable index in stack */\n    }\n}\n\n\n/* description of pending goto statements and label statements */\nclass Labeldesc {\n    constructor() {\n        this.name = null;  /* label identifier */\n        this.pc = NaN;  /* position in code */\n        this.line = NaN;  /* line where it appeared */\n        this.nactvar = NaN;  /* local level where it appears in current block */\n    }\n}\n\n\n/* list of labels or gotos */\nclass Labellist {\n    constructor() {\n        this.arr = []; /* array */\n        this.n = NaN;  /* number of entries in use */\n        this.size = NaN;  /* array size */\n    }\n}\n\n/* dynamic structures used by the parser */\nclass Dyndata {\n    constructor() {\n        this.actvar = {  /* list of active local variables */\n            arr: [],\n            n: NaN,\n            size: NaN\n        };\n        this.gt = new Labellist();\n        this.label = new Labellist();\n    }\n}\n\nconst semerror = function(ls, msg) {\n    ls.t.token = 0;  /* remove \"near <token>\" from final message */\n    llex.luaX_syntaxerror(ls, msg);\n};\n\nconst error_expected = function(ls, token) {\n    llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L, to_luastring(\"%s expected\", true), llex.luaX_token2str(ls, token)));\n};\n\nconst errorlimit = function(fs, limit, what) {\n    let L = fs.ls.L;\n    let line = fs.f.linedefined;\n    let where = (line === 0)\n        ? to_luastring(\"main function\", true)\n        : lobject.luaO_pushfstring(L, to_luastring(\"function at line %d\", true), line);\n    let msg = lobject.luaO_pushfstring(L, to_luastring(\"too many %s (limit is %d) in %s\", true),\n        what, limit, where);\n    llex.luaX_syntaxerror(fs.ls, msg);\n};\n\nconst checklimit = function(fs, v, l, what) {\n    if (v > l) errorlimit(fs, l, what);\n};\n\nconst testnext = function(ls, c) {\n    if (ls.t.token === c) {\n        llex.luaX_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst check = function(ls, c) {\n    if (ls.t.token !== c)\n        error_expected(ls, c);\n};\n\nconst checknext = function(ls, c) {\n    check(ls, c);\n    llex.luaX_next(ls);\n};\n\nconst check_condition = function(ls, c, msg) {\n    if (!c)\n        llex.luaX_syntaxerror(ls, msg);\n};\n\nconst check_match = function(ls, what, who, where) {\n    if (!testnext(ls, what)) {\n        if (where === ls.linenumber)\n            error_expected(ls, what);\n        else\n            llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L,\n                to_luastring(\"%s expected (to close %s at line %d)\"),\n                llex.luaX_token2str(ls, what), llex.luaX_token2str(ls, who), where));\n    }\n};\n\nconst str_checkname = function(ls) {\n    check(ls, R.TK_NAME);\n    let ts = ls.t.seminfo.ts;\n    llex.luaX_next(ls);\n    return ts;\n};\n\nconst init_exp = function(e, k, i) {\n    e.f = e.t = NO_JUMP;\n    e.k = k;\n    e.u.info = i;\n};\n\nconst codestring = function(ls, e, s) {\n    init_exp(e, expkind.VK, luaK_stringK(ls.fs, s));\n};\n\nconst checkname = function(ls, e) {\n    codestring(ls, e, str_checkname(ls));\n};\n\nconst registerlocalvar = function(ls, varname) {\n    let fs = ls.fs;\n    let f = fs.f;\n    f.locvars[fs.nlocvars] = new lobject.LocVar();\n    f.locvars[fs.nlocvars].varname = varname;\n    return fs.nlocvars++;\n};\n\nconst new_localvar = function(ls, name) {\n    let fs = ls.fs;\n    let dyd = ls.dyd;\n    let reg = registerlocalvar(ls, name);\n    checklimit(fs, dyd.actvar.n + 1 - fs.firstlocal, MAXVARS, to_luastring(\"local variables\", true));\n    dyd.actvar.arr[dyd.actvar.n] = new Vardesc();\n    dyd.actvar.arr[dyd.actvar.n].idx = reg;\n    dyd.actvar.n++;\n};\n\nconst new_localvarliteral = function(ls, name) {\n    new_localvar(ls, llex.luaX_newstring(ls, to_luastring(name, true)));\n};\n\nconst getlocvar = function(fs, i) {\n    let idx = fs.ls.dyd.actvar.arr[fs.firstlocal + i].idx;\n    lua_assert(idx < fs.nlocvars);\n    return fs.f.locvars[idx];\n};\n\nconst adjustlocalvars = function(ls, nvars) {\n    let fs = ls.fs;\n    fs.nactvar = fs.nactvar + nvars;\n    for (; nvars; nvars--)\n        getlocvar(fs, fs.nactvar - nvars).startpc = fs.pc;\n};\n\nconst removevars = function(fs, tolevel) {\n    fs.ls.dyd.actvar.n -= fs.nactvar - tolevel;\n    while (fs.nactvar > tolevel)\n        getlocvar(fs, --fs.nactvar).endpc = fs.pc;\n};\n\nconst searchupvalue = function(fs, name) {\n    let up = fs.f.upvalues;\n    for (let i = 0; i < fs.nups; i++) {\n        if (eqstr(up[i].name, name))\n            return i;\n    }\n    return -1;  /* not found */\n};\n\nconst newupvalue = function(fs, name, v) {\n    let f = fs.f;\n    checklimit(fs, fs.nups + 1, lfunc.MAXUPVAL, to_luastring(\"upvalues\", true));\n    f.upvalues[fs.nups] = {\n        instack: v.k === expkind.VLOCAL,\n        idx: v.u.info,\n        name: name\n    };\n    return fs.nups++;\n};\n\nconst searchvar = function(fs, n) {\n    for (let i = fs.nactvar - 1; i >= 0; i--) {\n        if (eqstr(n, getlocvar(fs, i).varname))\n            return i;\n    }\n\n    return -1;\n};\n\n/*\n** Mark block where variable at given level was defined\n** (to emit close instructions later).\n*/\nconst markupval = function(fs, level) {\n    let bl = fs.bl;\n    while (bl.nactvar > level)\n        bl = bl.previous;\n    bl.upval = 1;\n};\n\n/*\n** Find variable with given name 'n'. If it is an upvalue, add this\n** upvalue into all intermediate functions.\n*/\nconst singlevaraux = function(fs, n, vr, base) {\n    if (fs === null)  /* no more levels? */\n        init_exp(vr, expkind.VVOID, 0);  /* default is global */\n    else {\n        let v = searchvar(fs, n);  /* look up locals at current level */\n        if (v >= 0) {  /* found? */\n            init_exp(vr, expkind.VLOCAL, v);  /* variable is local */\n            if (!base)\n                markupval(fs, v);  /* local will be used as an upval */\n        } else {  /* not found as local at current level; try upvalues */\n            let idx = searchupvalue(fs, n);  /* try existing upvalues */\n            if (idx < 0) {  /* not found? */\n                singlevaraux(fs.prev, n, vr, 0);  /* try upper levels */\n                if (vr.k === expkind.VVOID)  /* not found? */\n                    return;  /* it is a global */\n                /* else was LOCAL or UPVAL */\n                idx = newupvalue(fs, n, vr);  /* will be a new upvalue */\n            }\n            init_exp(vr, expkind.VUPVAL, idx);  /* new or old upvalue */\n        }\n    }\n};\n\nconst singlevar = function(ls, vr) {\n    let varname = str_checkname(ls);\n    let fs = ls.fs;\n    singlevaraux(fs, varname, vr, 1);\n    if (vr.k === expkind.VVOID) {  /* is global name? */\n        let key = new expdesc();\n        singlevaraux(fs, ls.envn, vr, 1);  /* get environment variable */\n        lua_assert(vr.k !== expkind.VVOID);  /* this one must exist */\n        codestring(ls, key, varname);  /* key is variable name */\n        luaK_indexed(fs, vr, key);  /* env[varname] */\n    }\n};\n\nconst adjust_assign = function(ls, nvars, nexps, e) {\n    let fs = ls.fs;\n    let extra = nvars - nexps;\n    if (hasmultret(e.k)) {\n        extra++;  /* includes call itself */\n        if (extra < 0) extra = 0;\n        luaK_setreturns(fs, e, extra);  /* last exp. provides the difference */\n        if (extra > 1) luaK_reserveregs(fs, extra - 1);\n    } else {\n        if (e.k !== expkind.VVOID) luaK_exp2nextreg(fs, e);  /* close last expression */\n        if (extra > 0) {\n            let reg = fs.freereg;\n            luaK_reserveregs(fs, extra);\n            luaK_nil(fs, reg, extra);\n        }\n    }\n    if (nexps > nvars)\n        ls.fs.freereg -= nexps - nvars;  /* remove extra values */\n};\n\nconst enterlevel = function(ls) {\n    let L = ls.L;\n    ++L.nCcalls;\n    checklimit(ls.fs, L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n};\n\nconst leavelevel = function(ls) {\n    return ls.L.nCcalls--;\n};\n\nconst closegoto = function(ls, g, label) {\n    let fs = ls.fs;\n    let gl = ls.dyd.gt;\n    let gt = gl.arr[g];\n    lua_assert(eqstr(gt.name, label.name));\n    if (gt.nactvar < label.nactvar) {\n        let vname = getlocvar(fs, gt.nactvar).varname;\n        let msg = lobject.luaO_pushfstring(ls.L,\n            to_luastring(\"<goto %s> at line %d jumps into the scope of local '%s'\"),\n            gt.name.getstr(), gt.line, vname.getstr());\n        semerror(ls, msg);\n    }\n    luaK_patchlist(fs, gt.pc, label.pc);\n    /* remove goto from pending list */\n    for (let i = g; i < gl.n - 1; i++)\n        gl.arr[i] = gl.arr[i + 1];\n    gl.n--;\n};\n\n/*\n** try to close a goto with existing labels; this solves backward jumps\n*/\nconst findlabel = function(ls, g) {\n    let bl = ls.fs.bl;\n    let dyd = ls.dyd;\n    let gt = dyd.gt.arr[g];\n    /* check labels in current block for a match */\n    for (let i = bl.firstlabel; i < dyd.label.n; i++) {\n        let lb = dyd.label.arr[i];\n        if (eqstr(lb.name, gt.name)) {  /* correct label? */\n            if (gt.nactvar > lb.nactvar && (bl.upval || dyd.label.n > bl.firstlabel))\n                luaK_patchclose(ls.fs, gt.pc, lb.nactvar);\n            closegoto(ls, g, lb);  /* close it */\n            return true;\n        }\n    }\n    return false;  /* label not found; cannot close goto */\n};\n\nconst newlabelentry = function(ls, l, name, line, pc) {\n    let n = l.n;\n    l.arr[n] = new Labeldesc();\n    l.arr[n].name = name;\n    l.arr[n].line = line;\n    l.arr[n].nactvar = ls.fs.nactvar;\n    l.arr[n].pc = pc;\n    l.n = n + 1;\n    return n;\n};\n\n/*\n** check whether new label 'lb' matches any pending gotos in current\n** block; solves forward jumps\n*/\nconst findgotos = function(ls, lb) {\n    let gl = ls.dyd.gt;\n    let i = ls.fs.bl.firstgoto;\n    while (i < gl.n) {\n        if (eqstr(gl.arr[i].name, lb.name))\n            closegoto(ls, i, lb);\n        else\n            i++;\n    }\n};\n\n/*\n** export pending gotos to outer level, to check them against\n** outer labels; if the block being exited has upvalues, and\n** the goto exits the scope of any variable (which can be the\n** upvalue), close those variables being exited.\n*/\nconst movegotosout = function(fs, bl) {\n    let i = bl.firstgoto;\n    let gl = fs.ls.dyd.gt;\n    /* correct pending gotos to current block and try to close it\n       with visible labels */\n    while (i < gl.n) {\n        let gt = gl.arr[i];\n        if (gt.nactvar > bl.nactvar) {\n            if (bl.upval)\n                luaK_patchclose(fs, gt.pc, bl.nactvar);\n            gt.nactvar = bl.nactvar;\n        }\n        if (!findlabel(fs.ls, i))\n            i++;  /* move to next one */\n    }\n};\n\nconst enterblock = function(fs, bl, isloop) {\n    bl.isloop = isloop;\n    bl.nactvar = fs.nactvar;\n    bl.firstlabel = fs.ls.dyd.label.n;\n    bl.firstgoto = fs.ls.dyd.gt.n;\n    bl.upval = 0;\n    bl.previous = fs.bl;\n    fs.bl = bl;\n    lua_assert(fs.freereg === fs.nactvar);\n};\n\n/*\n** create a label named 'break' to resolve break statements\n*/\nconst breaklabel = function(ls) {\n    let n = luaS_newliteral(ls.L, \"break\");\n    let l = newlabelentry(ls, ls.dyd.label, n, 0, ls.fs.pc);\n    findgotos(ls, ls.dyd.label.arr[l]);\n};\n\n/*\n** generates an error for an undefined 'goto'; choose appropriate\n** message when label name is a reserved word (which can only be 'break')\n*/\nconst undefgoto = function(ls, gt) {\n    let msg = llex.isreserved(gt.name)\n        ? \"<%s> at line %d not inside a loop\"\n        : \"no visible label '%s' for <goto> at line %d\";\n    msg = lobject.luaO_pushfstring(ls.L, to_luastring(msg), gt.name.getstr(), gt.line);\n    semerror(ls, msg);\n};\n\n/*\n** adds a new prototype into list of prototypes\n*/\nconst addprototype = function(ls) {\n    let L = ls.L;\n    let clp = new Proto(L);\n    let fs = ls.fs;\n    let f = fs.f;  /* prototype of current function */\n    f.p[fs.np++] = clp;\n    return clp;\n};\n\n/*\n** codes instruction to create new closure in parent function.\n*/\nconst codeclosure = function(ls, v) {\n    let fs = ls.fs.prev;\n    init_exp(v, expkind.VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs.np -1));\n    luaK_exp2nextreg(fs, v);  /* fix it at the last register */\n};\n\nconst open_func = function(ls, fs, bl) {\n    fs.prev = ls.fs;  /* linked list of funcstates */\n    fs.ls = ls;\n    ls.fs = fs;\n    fs.pc = 0;\n    fs.lasttarget = 0;\n    fs.jpc = NO_JUMP;\n    fs.freereg = 0;\n    fs.nk = 0;\n    fs.np = 0;\n    fs.nups = 0;\n    fs.nlocvars = 0;\n    fs.nactvar = 0;\n    fs.firstlocal = ls.dyd.actvar.n;\n    fs.bl = null;\n    let f = fs.f;\n    f.source = ls.source;\n    f.maxstacksize = 2;  /* registers 0/1 are always valid */\n    enterblock(fs, bl, false);\n};\n\nconst leaveblock = function(fs) {\n    let bl = fs.bl;\n    let ls = fs.ls;\n    if (bl.previous && bl.upval) {\n        /* create a 'jump to here' to close upvalues */\n        let j = luaK_jump(fs);\n        luaK_patchclose(fs, j , bl.nactvar);\n        luaK_patchtohere(fs, j);\n    }\n\n    if (bl.isloop)\n        breaklabel(ls);  /* close pending breaks */\n\n    fs.bl = bl.previous;\n    removevars(fs, bl.nactvar);\n    lua_assert(bl.nactvar === fs.nactvar);\n    fs.freereg = fs.nactvar;  /* free registers */\n    ls.dyd.label.n = bl.firstlabel;  /* remove local labels */\n    if (bl.previous)  /* inner block? */\n        movegotosout(fs, bl);  /* update pending gotos to outer block */\n    else if (bl.firstgoto < ls.dyd.gt.n)  /* pending gotos in outer block? */\n        undefgoto(ls, ls.dyd.gt.arr[bl.firstgoto]);  /* error */\n};\n\nconst close_func = function(ls) {\n    let fs = ls.fs;\n    luaK_ret(fs, 0, 0);  /* final return */\n    leaveblock(fs);\n    lua_assert(fs.bl === null);\n    ls.fs = fs.prev;\n};\n\n/*============================================================*/\n/* GRAMMAR RULES */\n/*============================================================*/\n\nconst block_follow = function(ls, withuntil) {\n    switch (ls.t.token) {\n        case R.TK_ELSE: case R.TK_ELSEIF:\n        case R.TK_END: case R.TK_EOS:\n            return true;\n        case R.TK_UNTIL: return withuntil;\n        default: return false;\n    }\n};\n\nconst statlist = function(ls) {\n    /* statlist -> { stat [';'] } */\n    while (!block_follow(ls, 1)) {\n        if (ls.t.token === R.TK_RETURN) {\n            statement(ls);\n            return;  /* 'return' must be last statement */\n        }\n        statement(ls);\n    }\n};\n\nconst fieldsel = function(ls, v) {\n    /* fieldsel -> ['.' | ':'] NAME */\n    let fs = ls.fs;\n    let key = new expdesc();\n    luaK_exp2anyregup(fs, v);\n    llex.luaX_next(ls);  /* skip the dot or colon */\n    checkname(ls, key);\n    luaK_indexed(fs, v, key);\n};\n\nconst yindex = function(ls, v) {\n    /* index -> '[' expr ']' */\n    llex.luaX_next(ls);  /* skip the '[' */\n    expr(ls, v);\n    luaK_exp2val(ls.fs, v);\n    checknext(ls, 93 /* (']').charCodeAt(0) */);\n};\n\n/*\n** {======================================================================\n** Rules for Constructors\n** =======================================================================\n*/\n\nclass ConsControl {\n    constructor() {\n        this.v = new expdesc(); /* last list item read */\n        this.t = new expdesc(); /* table descriptor */\n        this.nh = NaN;          /* total number of 'record' elements */\n        this.na = NaN;          /* total number of array elements */\n        this.tostore = NaN;     /* number of array elements pending to be stored */\n    }\n}\n\nconst recfield = function(ls, cc) {\n    /* recfield -> (NAME | '['exp1']') = exp1 */\n    let fs = ls.fs;\n    let reg = ls.fs.freereg;\n    let key = new expdesc();\n    let val = new expdesc();\n\n    if (ls.t.token === R.TK_NAME) {\n        checklimit(fs, cc.nh, MAX_INT, to_luastring(\"items in a constructor\", true));\n        checkname(ls, key);\n    } else  /* ls->t.token === '[' */\n        yindex(ls, key);\n    cc.nh++;\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    let rkkey = luaK_exp2RK(fs, key);\n    expr(ls, val);\n    luaK_codeABC(fs, OP_SETTABLE, cc.t.u.info, rkkey, luaK_exp2RK(fs, val));\n    fs.freereg = reg;  /* free registers */\n};\n\nconst closelistfield = function(fs, cc) {\n    if (cc.v.k === expkind.VVOID) return;  /* there is no list item */\n    luaK_exp2nextreg(fs, cc.v);\n    cc.v.k = expkind.VVOID;\n    if (cc.tostore === LFIELDS_PER_FLUSH) {\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);  /* flush */\n        cc.tostore = 0;  /* no more items pending */\n    }\n};\n\nconst lastlistfield = function(fs, cc) {\n    if (cc.tostore === 0) return;\n    if (hasmultret(cc.v.k)) {\n        luaK_setmultret(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, LUA_MULTRET);\n        cc.na--;  /* do not count last expression (unknown number of elements) */\n    } else {\n        if (cc.v.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);\n    }\n};\n\nconst listfield = function(ls, cc) {\n    /* listfield -> exp */\n    expr(ls, cc.v);\n    checklimit(ls.fs, cc.na, MAX_INT, to_luastring(\"items in a constructor\", true));\n    cc.na++;\n    cc.tostore++;\n};\n\nconst field = function(ls, cc) {\n    /* field -> listfield | recfield */\n    switch (ls.t.token) {\n        case R.TK_NAME: {  /* may be 'listfield' or 'recfield' */\n            if (llex.luaX_lookahead(ls) !== 61 /* ('=').charCodeAt(0) */)  /* expression? */\n                listfield(ls, cc);\n            else\n                recfield(ls, cc);\n            break;\n        }\n        case 91 /* ('[').charCodeAt(0) */: {\n            recfield(ls, cc);\n            break;\n        }\n        default: {\n            listfield(ls, cc);\n            break;\n        }\n    }\n};\n\nconst constructor = function(ls, t) {\n    /* constructor -> '{' [ field { sep field } [sep] ] '}'\n       sep -> ',' | ';' */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    let pc = luaK_codeABC(fs, OP_NEWTABLE, 0, 0, 0);\n    let cc = new ConsControl();\n    cc.na = cc.nh = cc.tostore = 0;\n    cc.t = t;\n    init_exp(t, expkind.VRELOCABLE, pc);\n    init_exp(cc.v, expkind.VVOID, 0);  /* no value (yet) */\n    luaK_exp2nextreg(ls.fs, t);  /* fix it at stack top */\n    checknext(ls, 123 /* ('{').charCodeAt(0) */);\n    do {\n        lua_assert(cc.v.k === expkind.VVOID || cc.tostore > 0);\n        if (ls.t.token === 125 /* ('}').charCodeAt(0) */) break;\n        closelistfield(fs, cc);\n        field(ls, cc);\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */) || testnext(ls, 59 /* (';').charCodeAt(0) */));\n    check_match(ls, 125 /* ('}').charCodeAt(0) */, 123 /* ('{').charCodeAt(0) */, line);\n    lastlistfield(fs, cc);\n    SETARG_B(fs.f.code[pc], lobject.luaO_int2fb(cc.na));  /* set initial array size */\n    SETARG_C(fs.f.code[pc], lobject.luaO_int2fb(cc.nh));  /* set initial table size */\n};\n\n/* }====================================================================== */\n\nconst parlist = function(ls) {\n    /* parlist -> [ param { ',' param } ] */\n    let fs = ls.fs;\n    let f = fs.f;\n    let nparams = 0;\n    f.is_vararg = false;\n    if (ls.t.token !== 41 /* (')').charCodeAt(0) */) {  /* is 'parlist' not empty? */\n        do {\n            switch (ls.t.token) {\n                case R.TK_NAME: {  /* param -> NAME */\n                    new_localvar(ls, str_checkname(ls));\n                    nparams++;\n                    break;\n                }\n                case R.TK_DOTS: {  /* param -> '...' */\n                    llex.luaX_next(ls);\n                    f.is_vararg = true;  /* declared vararg */\n                    break;\n                }\n                default: llex.luaX_syntaxerror(ls, to_luastring(\"<name> or '...' expected\", true));\n            }\n        } while(!f.is_vararg && testnext(ls, 44 /* (',').charCodeAt(0) */));\n    }\n    adjustlocalvars(ls, nparams);\n    f.numparams = fs.nactvar;\n    luaK_reserveregs(fs, fs.nactvar);  /* reserve register for parameters */\n};\n\nconst body = function(ls, e, ismethod, line) {\n    /* body ->  '(' parlist ')' block END */\n    let new_fs = new FuncState();\n    let bl = new BlockCnt();\n    new_fs.f = addprototype(ls);\n    new_fs.f.linedefined = line;\n    open_func(ls, new_fs, bl);\n    checknext(ls, 40 /* ('(').charCodeAt(0) */);\n    if (ismethod) {\n        new_localvarliteral(ls, \"self\");  /* create 'self' parameter */\n        adjustlocalvars(ls, 1);\n    }\n    parlist(ls);\n    checknext(ls, 41 /* (')').charCodeAt(0) */);\n    statlist(ls);\n    new_fs.f.lastlinedefined = ls.linenumber;\n    check_match(ls, R.TK_END, R.TK_FUNCTION, line);\n    codeclosure(ls, e);\n    close_func(ls);\n};\n\nconst explist = function(ls, v) {\n    /* explist -> expr { ',' expr } */\n    let n = 1;  /* at least one expression */\n    expr(ls, v);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        luaK_exp2nextreg(ls.fs, v);\n        expr(ls, v);\n        n++;\n    }\n    return n;\n};\n\nconst funcargs = function(ls, f, line) {\n    let fs = ls.fs;\n    let args = new expdesc();\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {  /* funcargs -> '(' [ explist ] ')' */\n            llex.luaX_next(ls);\n            if (ls.t.token === 41 /* (')').charCodeAt(0) */)  /* arg list is empty? */\n                args.k = expkind.VVOID;\n            else {\n                explist(ls, args);\n                luaK_setmultret(fs, args);\n            }\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* funcargs -> constructor */\n            constructor(ls, args);\n            break;\n        }\n        case R.TK_STRING: {  /* funcargs -> STRING */\n            codestring(ls, args, ls.t.seminfo.ts);\n            llex.luaX_next(ls);  /* must use 'seminfo' before 'next' */\n            break;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"function arguments expected\", true));\n        }\n    }\n    lua_assert(f.k === expkind.VNONRELOC);\n    let nparams;\n    let base = f.u.info;  /* base register for call */\n    if (hasmultret(args.k))\n        nparams = LUA_MULTRET;  /* open call */\n    else {\n        if (args.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, args);  /* close last argument */\n        nparams = fs.freereg - (base+1);\n    }\n    init_exp(f, expkind.VCALL, luaK_codeABC(fs, OP_CALL, base, nparams+1, 2));\n    luaK_fixline(fs, line);\n    fs.freereg = base + 1; /* call remove function and arguments and leaves (unless changed) one result */\n};\n\n/*\n** {======================================================================\n** Expression parsing\n** =======================================================================\n*/\n\nconst primaryexp = function(ls, v) {\n    /* primaryexp -> NAME | '(' expr ')' */\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {\n            let line = ls.linenumber;\n            llex.luaX_next(ls);\n            expr(ls, v);\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            luaK_dischargevars(ls.fs, v);\n            return;\n        }\n        case R.TK_NAME: {\n            singlevar(ls, v);\n            return;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"unexpected symbol\", true));\n        }\n    }\n};\n\nconst suffixedexp = function(ls, v) {\n    /* suffixedexp ->\n       primaryexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs } */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    primaryexp(ls, v);\n    for (;;) {\n        switch (ls.t.token) {\n            case 46 /* ('.').charCodeAt(0) */: {  /* fieldsel */\n                fieldsel(ls, v);\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* '[' exp1 ']' */\n                let key = new expdesc();\n                luaK_exp2anyregup(fs, v);\n                yindex(ls, key);\n                luaK_indexed(fs, v, key);\n                break;\n            }\n            case 58 /* (':').charCodeAt(0) */: {  /* ':' NAME funcargs */\n                let key = new expdesc();\n                llex.luaX_next(ls);\n                checkname(ls, key);\n                luaK_self(fs, v, key);\n                funcargs(ls, v, line);\n                break;\n            }\n            case 40 /* ('(').charCodeAt(0) */: case R.TK_STRING: case 123 /* ('{').charCodeAt(0) */: {  /* funcargs */\n                luaK_exp2nextreg(fs, v);\n                funcargs(ls, v, line);\n                break;\n            }\n            default: return;\n        }\n    }\n};\n\nconst simpleexp = function(ls, v) {\n    /* simpleexp -> FLT | INT | STRING | NIL | TRUE | FALSE | ... |\n       constructor | FUNCTION body | suffixedexp */\n    switch (ls.t.token) {\n        case R.TK_FLT: {\n            init_exp(v, expkind.VKFLT, 0);\n            v.u.nval = ls.t.seminfo.r;\n            break;\n        }\n        case R.TK_INT: {\n            init_exp(v, expkind.VKINT, 0);\n            v.u.ival = ls.t.seminfo.i;\n            break;\n        }\n        case R.TK_STRING: {\n            codestring(ls, v, ls.t.seminfo.ts);\n            break;\n        }\n        case R.TK_NIL: {\n            init_exp(v, expkind.VNIL, 0);\n            break;\n        }\n        case R.TK_TRUE: {\n            init_exp(v, expkind.VTRUE, 0);\n            break;\n        }\n        case R.TK_FALSE: {\n            init_exp(v, expkind.VFALSE, 0);\n            break;\n        }\n        case R.TK_DOTS: {  /* vararg */\n            let fs = ls.fs;\n            check_condition(ls, fs.f.is_vararg, to_luastring(\"cannot use '...' outside a vararg function\", true));\n            init_exp(v, expkind.VVARARG, luaK_codeABC(fs, OP_VARARG, 0, 1, 0));\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* constructor */\n            constructor(ls, v);\n            return;\n        }\n        case R.TK_FUNCTION: {\n            llex.luaX_next(ls);\n            body(ls, v, 0, ls.linenumber);\n            return;\n        }\n        default: {\n            suffixedexp(ls, v);\n            return;\n        }\n    }\n    llex.luaX_next(ls);\n};\n\nconst getunopr = function(op) {\n    switch (op) {\n        case R.TK_NOT: return OPR_NOT;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_MINUS;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BNOT;\n        case 35 /* ('#').charCodeAt(0) */: return OPR_LEN;\n        default: return OPR_NOUNOPR;\n    }\n};\n\nconst getbinopr = function(op) {\n    switch (op) {\n        case 43 /* ('+').charCodeAt(0) */: return OPR_ADD;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_SUB;\n        case 42 /* ('*').charCodeAt(0) */: return OPR_MUL;\n        case 37 /* ('%').charCodeAt(0) */: return OPR_MOD;\n        case 94 /* ('^').charCodeAt(0) */: return OPR_POW;\n        case 47 /* ('/').charCodeAt(0) */: return OPR_DIV;\n        case R.TK_IDIV:   return OPR_IDIV;\n        case 38 /* ('&').charCodeAt(0) */: return OPR_BAND;\n        case 124 /* ('|').charCodeAt(0) */: return OPR_BOR;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BXOR;\n        case R.TK_SHL:    return OPR_SHL;\n        case R.TK_SHR:    return OPR_SHR;\n        case R.TK_CONCAT: return OPR_CONCAT;\n        case R.TK_NE:     return OPR_NE;\n        case R.TK_EQ:     return OPR_EQ;\n        case 60 /* ('<').charCodeAt(0) */: return OPR_LT;\n        case R.TK_LE:     return OPR_LE;\n        case 62 /* ('>').charCodeAt(0) */: return OPR_GT;\n        case R.TK_GE:     return OPR_GE;\n        case R.TK_AND:    return OPR_AND;\n        case R.TK_OR:     return OPR_OR;\n        default:          return OPR_NOBINOPR;\n    }\n};\n\nconst priority = [  /* ORDER OPR */\n    {left: 10, right: 10}, {left: 10, right: 10},     /* '+' '-' */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '*' '%' */\n    {left: 14, right: 13},               /* '^' (right associative) */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '/' '//' */\n    {left: 6, right: 6}, {left: 4, right: 4}, {left: 5, right: 5}, /* '&' '|' '~' */\n    {left: 7, right: 7}, {left: 7, right: 7},         /* '<<' '>>' */\n    {left: 9, right: 8},                 /* '..' (right associative) */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ==, <, <= */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ~=, >, >= */\n    {left: 2, right: 2}, {left: 1, right: 1}          /* and, or */\n];\n\nconst UNARY_PRIORITY = 12;\n\n/*\n** subexpr -> (simpleexp | unop subexpr) { binop subexpr }\n** where 'binop' is any binary operator with a priority higher than 'limit'\n*/\nconst subexpr = function(ls, v, limit) {\n    enterlevel(ls);\n    let uop = getunopr(ls.t.token);\n    if (uop !== OPR_NOUNOPR) {\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        subexpr(ls, v, UNARY_PRIORITY);\n        luaK_prefix(ls.fs, uop, v, line);\n    } else\n        simpleexp(ls, v);\n    /* expand while operators have priorities higher than 'limit' */\n    let op = getbinopr(ls.t.token);\n    while (op !== OPR_NOBINOPR && priority[op].left > limit) {\n        let v2 = new expdesc();\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        luaK_infix(ls.fs, op, v);\n        /* read sub-expression with higher priority */\n        let nextop = subexpr(ls, v2, priority[op].right);\n        luaK_posfix(ls.fs, op, v, v2, line);\n        op = nextop;\n    }\n    leavelevel(ls);\n    return op;  /* return first untreated operator */\n};\n\nconst expr = function(ls, v) {\n    subexpr(ls, v, 0);\n};\n\n/* }==================================================================== */\n\n\n\n/*\n** {======================================================================\n** Rules for Statements\n** =======================================================================\n*/\n\nconst block = function(ls) {\n    /* block -> statlist */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 0);\n    statlist(ls);\n    leaveblock(fs);\n};\n\n/*\n** structure to chain all variables in the left-hand side of an\n** assignment\n*/\nclass LHS_assign {\n    constructor() {\n        this.prev = null;\n        this.v = new expdesc();  /* variable (global, local, upvalue, or indexed) */\n    }\n}\n\n/*\n** check whether, in an assignment to an upvalue/local variable, the\n** upvalue/local variable is begin used in a previous assignment to a\n** table. If so, save original upvalue/local value in a safe place and\n** use this safe copy in the previous assignment.\n*/\nconst check_conflict = function(ls, lh, v) {\n    let fs = ls.fs;\n    let extra = fs.freereg;  /* eventual position to save local variable */\n    let conflict = false;\n    for (; lh; lh = lh.prev) {  /* check all previous assignments */\n        if (lh.v.k === expkind.VINDEXED) {  /* assigning to a table? */\n            /* table is the upvalue/local being assigned now? */\n            if (lh.v.u.ind.vt === v.k && lh.v.u.ind.t === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.vt = expkind.VLOCAL;\n                lh.v.u.ind.t = extra;  /* previous assignment will use safe copy */\n            }\n            /* index is the local being assigned? (index cannot be upvalue) */\n            if (v.k === expkind.VLOCAL && lh.v.u.ind.idx === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.idx = extra;  /* previous assignment will use safe copy */\n            }\n        }\n    }\n    if (conflict) {\n        /* copy upvalue/local value to a temporary (in position 'extra') */\n        let op = v.k === expkind.VLOCAL ? OP_MOVE : OP_GETUPVAL;\n        luaK_codeABC(fs, op, extra, v.u.info, 0);\n        luaK_reserveregs(fs, 1);\n    }\n};\n\nconst assignment = function(ls, lh, nvars) {\n    let e = new expdesc();\n    check_condition(ls, vkisvar(lh.v.k), to_luastring(\"syntax error\", true));\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */)) {  /* assignment -> ',' suffixedexp assignment */\n        let nv = new LHS_assign();\n        nv.prev = lh;\n        suffixedexp(ls, nv.v);\n        if (nv.v.k !== expkind.VINDEXED)\n            check_conflict(ls, lh, nv.v);\n        checklimit(ls.fs, nvars + ls.L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n        assignment(ls, nv, nvars + 1);\n    } else {  /* assignment -> '=' explist */\n        checknext(ls, 61 /* ('=').charCodeAt(0) */);\n        let nexps = explist(ls, e);\n        if (nexps !== nvars)\n            adjust_assign(ls, nvars, nexps, e);\n        else {\n            luaK_setoneret(ls.fs, e);  /* close last expression */\n            luaK_storevar(ls.fs, lh.v, e);\n            return;  /* avoid default */\n        }\n    }\n    init_exp(e, expkind.VNONRELOC, ls.fs.freereg-1);  /* default assignment */\n    luaK_storevar(ls.fs, lh.v, e);\n};\n\nconst cond = function(ls) {\n    /* cond -> exp */\n    let v = new expdesc();\n    expr(ls, v);  /* read condition */\n    if (v.k === expkind.VNIL) v.k = expkind.VFALSE;  /* 'falses' are all equal here */\n    luaK_goiftrue(ls.fs, v);\n    return v.f;\n};\n\nconst gotostat = function(ls, pc) {\n    let line = ls.linenumber;\n    let label;\n    if (testnext(ls, R.TK_GOTO))\n        label = str_checkname(ls);\n    else {\n        llex.luaX_next(ls);  /* skip break */\n        label = luaS_newliteral(ls.L, \"break\");\n    }\n    let g = newlabelentry(ls, ls.dyd.gt, label, line, pc);\n    findlabel(ls, g);  /* close it if label already defined */\n};\n\n/* check for repeated labels on the same block */\nconst checkrepeated = function(fs, ll, label) {\n    for (let i = fs.bl.firstlabel; i < ll.n; i++) {\n        if (eqstr(label, ll.arr[i].name)) {\n            let msg = lobject.luaO_pushfstring(fs.ls.L,\n                to_luastring(\"label '%s' already defined on line %d\", true),\n                label.getstr(), ll.arr[i].line);\n            semerror(fs.ls, msg);\n        }\n    }\n};\n\n/* skip no-op statements */\nconst skipnoopstat = function(ls) {\n    while (ls.t.token === 59 /* (';').charCodeAt(0) */ || ls.t.token === R.TK_DBCOLON)\n        statement(ls);\n};\n\nconst labelstat = function(ls, label, line) {\n    /* label -> '::' NAME '::' */\n    let fs = ls.fs;\n    let ll = ls.dyd.label;\n    let l;  /* index of new label being created */\n    checkrepeated(fs, ll, label);  /* check for repeated labels */\n    checknext(ls, R.TK_DBCOLON);  /* skip double colon */\n    /* create new entry for this label */\n    l = newlabelentry(ls, ll, label, line, luaK_getlabel(fs));\n    skipnoopstat(ls);  /* skip other no-op statements */\n    if (block_follow(ls, 0)) {  /* label is last no-op statement in the block? */\n        /* assume that locals are already out of scope */\n        ll.arr[l].nactvar = fs.bl.nactvar;\n    }\n    findgotos(ls, ll.arr[l]);\n};\n\nconst whilestat = function(ls, line) {\n    /* whilestat -> WHILE cond DO block END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    llex.luaX_next(ls);  /* skip WHILE */\n    let whileinit = luaK_getlabel(fs);\n    let condexit = cond(ls);\n    enterblock(fs, bl, 1);\n    checknext(ls, R.TK_DO);\n    block(ls);\n    luaK_jumpto(fs, whileinit);\n    check_match(ls, R.TK_END, R.TK_WHILE, line);\n    leaveblock(fs);\n    luaK_patchtohere(fs, condexit);  /* false conditions finish the loop */\n};\n\nconst repeatstat = function(ls, line) {\n    /* repeatstat -> REPEAT block UNTIL cond */\n    let fs = ls.fs;\n    let repeat_init = luaK_getlabel(fs);\n    let bl1 = new BlockCnt();\n    let bl2 = new BlockCnt();\n    enterblock(fs, bl1, 1);  /* loop block */\n    enterblock(fs, bl2, 0);  /* scope block */\n    llex.luaX_next(ls);  /* skip REPEAT */\n    statlist(ls);\n    check_match(ls, R.TK_UNTIL, R.TK_REPEAT, line);\n    let condexit = cond(ls);  /* read condition (inside scope block) */\n    if (bl2.upval)  /* upvalues? */\n        luaK_patchclose(fs, condexit, bl2.nactvar);\n    leaveblock(fs);  /* finish scope */\n    luaK_patchlist(fs, condexit, repeat_init);  /* close the loop */\n    leaveblock(fs);  /* finish loop */\n};\n\nconst exp1 = function(ls) {\n    let e = new expdesc();\n    expr(ls, e);\n    luaK_exp2nextreg(ls.fs, e);\n    lua_assert(e.k === expkind.VNONRELOC);\n    let reg = e.u.info;\n    return reg;\n};\n\nconst forbody = function(ls, base, line, nvars, isnum) {\n    /* forbody -> DO block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let endfor;\n    adjustlocalvars(ls, 3);  /* control variables */\n    checknext(ls, R.TK_DO);\n    let prep = isnum ? luaK_codeAsBx(fs, OP_FORPREP, base, NO_JUMP) : luaK_jump(fs);\n    enterblock(fs, bl, 0);  /* scope for declared variables */\n    adjustlocalvars(ls, nvars);\n    luaK_reserveregs(fs, nvars);\n    block(ls);\n    leaveblock(fs);  /* end of scope for declared variables */\n    luaK_patchtohere(fs, prep);\n    if (isnum)  /* end of scope for declared variables */\n        endfor = luaK_codeAsBx(fs, OP_FORLOOP, base, NO_JUMP);\n    else {  /* generic for */\n        luaK_codeABC(fs, OP_TFORCALL, base, 0, nvars);\n        luaK_fixline(fs, line);\n        endfor = luaK_codeAsBx(fs, OP_TFORLOOP, base + 2, NO_JUMP);\n    }\n    luaK_patchlist(fs, endfor, prep + 1);\n    luaK_fixline(fs, line);\n};\n\nconst fornum = function(ls, varname, line) {\n    /* fornum -> NAME = exp1,exp1[,exp1] forbody */\n    let fs = ls.fs;\n    let base = fs.freereg;\n    new_localvarliteral(ls, \"(for index)\");\n    new_localvarliteral(ls, \"(for limit)\");\n    new_localvarliteral(ls, \"(for step)\");\n    new_localvar(ls, varname);\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    exp1(ls);  /* initial value */\n    checknext(ls, 44 /* (',').charCodeAt(0) */);\n    exp1(ls);  /* limit */\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */))\n        exp1(ls);  /* optional step */\n    else {  /* default step = 1 */\n        luaK_codek(fs, fs.freereg, luaK_intK(fs, 1));\n        luaK_reserveregs(fs, 1);\n    }\n    forbody(ls, base, line, 1, 1);\n};\n\nconst forlist = function(ls, indexname) {\n    /* forlist -> NAME {,NAME} IN explist forbody */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let nvars = 4;  /* gen, state, control, plus at least one declared var */\n    let base = fs.freereg;\n    /* create control variables */\n    new_localvarliteral(ls, \"(for generator)\");\n    new_localvarliteral(ls, \"(for state)\");\n    new_localvarliteral(ls, \"(for control)\");\n    /* create declared variables */\n    new_localvar(ls, indexname);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    }\n    checknext(ls, R.TK_IN);\n    let line = ls.linenumber;\n    adjust_assign(ls, 3, explist(ls, e), e);\n    luaK_checkstack(fs, 3);  /* extra space to call generator */\n    forbody(ls, base, line, nvars - 3, 0);\n};\n\nconst forstat = function(ls, line) {\n    /* forstat -> FOR (fornum | forlist) END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 1);  /* scope for loop and control variables */\n    llex.luaX_next(ls);  /* skip 'for' */\n    let varname = str_checkname(ls);  /* first variable name */\n    switch (ls.t.token) {\n        case 61 /* ('=').charCodeAt(0) */: fornum(ls, varname, line); break;\n        case 44 /* (',').charCodeAt(0) */: case R.TK_IN: forlist(ls, varname); break;\n        default: llex.luaX_syntaxerror(ls, to_luastring(\"'=' or 'in' expected\", true));\n    }\n    check_match(ls, R.TK_END, R.TK_FOR, line);\n    leaveblock(fs);  /* loop scope ('break' jumps to this point) */\n};\n\nconst test_then_block = function(ls, escapelist) {\n    /* test_then_block -> [IF | ELSEIF] cond THEN block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let v = new expdesc();\n    let jf;  /* instruction to skip 'then' code (if condition is false) */\n\n    llex.luaX_next(ls);  /* skip IF or ELSEIF */\n    expr(ls, v);  /* read condition */\n    checknext(ls, R.TK_THEN);\n\n    if (ls.t.token === R.TK_GOTO || ls.t.token === R.TK_BREAK) {\n        luaK_goiffalse(ls.fs, v);  /* will jump to label if condition is true */\n        enterblock(fs, bl, false);  /* must enter block before 'goto' */\n        gotostat(ls, v.t);   /* handle goto/break */\n        while (testnext(ls, 59 /* (';').charCodeAt(0) */));  /* skip colons */\n        if (block_follow(ls, 0)) {  /* 'goto' is the entire block? */\n            leaveblock(fs);\n            return escapelist;  /* and that is it */\n        } else  /* must skip over 'then' part if condition is false */\n            jf = luaK_jump(fs);\n    } else {  /* regular case (not goto/break) */\n        luaK_goiftrue(ls.fs, v);  /* skip over block if condition is false */\n        enterblock(fs, bl, false);\n        jf = v.f;\n    }\n\n    statlist(ls);  /* 'then' part */\n    leaveblock(fs);\n    if (ls.t.token === R.TK_ELSE || ls.t.token === R.TK_ELSEIF)  /* followed by 'else'/'elseif'? */\n        escapelist = luaK_concat(fs, escapelist, luaK_jump(fs));  /* must jump over it */\n    luaK_patchtohere(fs, jf);\n\n    return escapelist;\n};\n\nconst ifstat = function(ls, line) {\n    /* ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END */\n    let fs = ls.fs;\n    let escapelist = NO_JUMP;  /* exit list for finished parts */\n    escapelist = test_then_block(ls, escapelist);  /* IF cond THEN block */\n    while (ls.t.token === R.TK_ELSEIF)\n        escapelist = test_then_block(ls, escapelist);  /* ELSEIF cond THEN block */\n    if (testnext(ls, R.TK_ELSE))\n        block(ls);  /* 'else' part */\n    check_match(ls, R.TK_END, R.TK_IF, line);\n    luaK_patchtohere(fs, escapelist);  /* patch escape list to 'if' end */\n};\n\nconst localfunc = function(ls) {\n    let b = new expdesc();\n    let fs = ls.fs;\n    new_localvar(ls, str_checkname(ls));  /* new local variable */\n    adjustlocalvars(ls, 1);  /* enter its scope */\n    body(ls, b, 0, ls.linenumber);  /* function created in next register */\n    /* debug information will only see the variable after this point! */\n    getlocvar(fs, b.u.info).startpc = fs.pc;\n};\n\nconst localstat = function(ls) {\n    /* stat -> LOCAL NAME {',' NAME} ['=' explist] */\n    let nvars = 0;\n    let nexps;\n    let e = new expdesc();\n    do {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */));\n    if (testnext(ls, 61 /* ('=').charCodeAt(0) */))\n        nexps = explist(ls, e);\n    else {\n        e.k = expkind.VVOID;\n        nexps = 0;\n    }\n    adjust_assign(ls, nvars, nexps, e);\n    adjustlocalvars(ls, nvars);\n};\n\nconst funcname = function(ls, v) {\n    /* funcname -> NAME {fieldsel} [':' NAME] */\n    let ismethod = 0;\n    singlevar(ls, v);\n    while (ls.t.token === 46 /* ('.').charCodeAt(0) */)\n        fieldsel(ls, v);\n    if (ls.t.token === 58 /* (':').charCodeAt(0) */) {\n        ismethod = 1;\n        fieldsel(ls, v);\n    }\n    return ismethod;\n};\n\nconst funcstat = function(ls, line) {\n    /* funcstat -> FUNCTION funcname body */\n    let v = new expdesc();\n    let b = new expdesc();\n    llex.luaX_next(ls);  /* skip FUNCTION */\n    let ismethod = funcname(ls, v);\n    body(ls, b, ismethod, line);\n    luaK_storevar(ls.fs, v, b);\n    luaK_fixline(ls.fs, line);  /* definition \"happens\" in the first line */\n};\n\nconst exprstat= function(ls) {\n    /* stat -> func | assignment */\n    let fs = ls.fs;\n    let v = new LHS_assign();\n    suffixedexp(ls, v.v);\n    if (ls.t.token === 61 /* ('=').charCodeAt(0) */ || ls.t.token === 44 /* (',').charCodeAt(0) */) { /* stat . assignment ? */\n        v.prev = null;\n        assignment(ls, v, 1);\n    }\n    else {  /* stat -> func */\n        check_condition(ls, v.v.k === expkind.VCALL, to_luastring(\"syntax error\", true));\n        SETARG_C(getinstruction(fs, v.v), 1);  /* call statement uses no results */\n    }\n};\n\nconst retstat = function(ls) {\n    /* stat -> RETURN [explist] [';'] */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let first, nret;  /* registers with returned values */\n    if (block_follow(ls, 1) || ls.t.token === 59 /* (';').charCodeAt(0) */)\n        first = nret = 0;  /* return no values */\n    else {\n        nret = explist(ls, e);  /* optional return values */\n        if (hasmultret(e.k)) {\n            luaK_setmultret(fs, e);\n            if (e.k === expkind.VCALL && nret === 1) {  /* tail call? */\n                SET_OPCODE(getinstruction(fs, e), OP_TAILCALL);\n                lua_assert(getinstruction(fs, e).A === fs.nactvar);\n            }\n            first = fs.nactvar;\n            nret = LUA_MULTRET;  /* return all values */\n        } else {\n            if (nret === 1)  /* only one single value? */\n                first = luaK_exp2anyreg(fs, e);\n            else {\n                luaK_exp2nextreg(fs, e);  /* values must go to the stack */\n                first = fs.nactvar;  /* return all active values */\n                lua_assert(nret === fs.freereg - first);\n            }\n        }\n    }\n    luaK_ret(fs, first, nret);\n    testnext(ls, 59 /* (';').charCodeAt(0) */);  /* skip optional semicolon */\n};\n\nconst statement = function(ls) {\n    let line = ls.linenumber;  /* may be needed for error messages */\n    enterlevel(ls);\n    switch(ls.t.token) {\n        case 59 /* (';').charCodeAt(0) */: {  /* stat -> ';' (empty statement) */\n            llex.luaX_next(ls);  /* skip ';' */\n            break;\n        }\n        case R.TK_IF: {  /* stat -> ifstat */\n            ifstat(ls, line);\n            break;\n        }\n        case R.TK_WHILE: {  /* stat -> whilestat */\n            whilestat(ls, line);\n            break;\n        }\n        case R.TK_DO: {  /* stat -> DO block END */\n            llex.luaX_next(ls);  /* skip DO */\n            block(ls);\n            check_match(ls, R.TK_END, R.TK_DO, line);\n            break;\n        }\n        case R.TK_FOR: {  /* stat -> forstat */\n            forstat(ls, line);\n            break;\n        }\n        case R.TK_REPEAT: {  /* stat -> repeatstat */\n            repeatstat(ls, line);\n            break;\n        }\n        case R.TK_FUNCTION: {  /* stat -> funcstat */\n            funcstat(ls, line);\n            break;\n        }\n        case R.TK_LOCAL: {  /* stat -> localstat */\n            llex.luaX_next(ls);  /* skip LOCAL */\n            if (testnext(ls, R.TK_FUNCTION))  /* local function? */\n                localfunc(ls);\n            else\n                localstat(ls);\n            break;\n        }\n        case R.TK_DBCOLON: {  /* stat -> label */\n            llex.luaX_next(ls);  /* skip double colon */\n            labelstat(ls, str_checkname(ls), line);\n            break;\n        }\n        case R.TK_RETURN: {  /* skip double colon */\n            llex.luaX_next(ls);  /* skip RETURN */\n            retstat(ls);\n            break;\n        }\n        case R.TK_BREAK:   /* stat -> breakstat */\n        case R.TK_GOTO: {  /* stat -> 'goto' NAME */\n            gotostat(ls, luaK_jump(ls.fs));\n            break;\n        }\n        default: {  /* stat -> func | assignment */\n            exprstat(ls);\n            break;\n        }\n    }\n    lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg && ls.fs.freereg >= ls.fs.nactvar);\n    ls.fs.freereg = ls.fs.nactvar;  /* free registers */\n    leavelevel(ls);\n};\n\n/*\n** compiles the main function, which is a regular vararg function with an\n** upvalue named LUA_ENV\n*/\nconst mainfunc = function(ls, fs) {\n    let bl = new BlockCnt();\n    let v = new expdesc();\n    open_func(ls, fs, bl);\n    fs.f.is_vararg = true;  /* main function is always declared vararg */\n    init_exp(v, expkind.VLOCAL, 0);  /* create and... */\n    newupvalue(fs, ls.envn, v);  /* ...set environment upvalue */\n    llex.luaX_next(ls);  /* read first token */\n    statlist(ls);  /* parse main body */\n    check(ls, R.TK_EOS);\n    close_func(ls);\n};\n\nconst luaY_parser = function(L, z, buff, dyd, name, firstchar) {\n    let lexstate = new llex.LexState();\n    let funcstate = new FuncState();\n    let cl = lfunc.luaF_newLclosure(L, 1);  /* create main closure */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    lexstate.h = ltable.luaH_new(L);  /* create table for scanner */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].sethvalue(lexstate.h);\n    funcstate.f = cl.p = new Proto(L);\n    funcstate.f.source = luaS_new(L, name);\n    lexstate.buff = buff;\n    lexstate.dyd = dyd;\n    dyd.actvar.n = dyd.gt.n = dyd.label.n = 0;\n    llex.luaX_setinput(L, lexstate, z, funcstate.f.source, firstchar);\n    mainfunc(lexstate, funcstate);\n    lua_assert(!funcstate.prev && funcstate.nups === 1 && !lexstate.fs);\n    /* all scopes should be correctly finished */\n    lua_assert(dyd.actvar.n === 0 && dyd.gt.n === 0 && dyd.label.n === 0);\n    delete L.stack[--L.top];  /* remove scanner's table */\n    return cl;  /* closure is on the stack, too */\n};\n\n\nmodule.exports.Dyndata     = Dyndata;\nmodule.exports.expkind     = expkind;\nmodule.exports.expdesc     = expdesc;\nmodule.exports.luaY_parser = luaY_parser;\nmodule.exports.vkisinreg   = vkisinreg;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION,\n    LUA_YIELD,\n    lua_call,\n    lua_callk,\n    lua_concat,\n    lua_error,\n    lua_getglobal,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnone,\n    lua_isstring,\n    lua_load,\n    lua_next,\n    lua_pcallk,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcfunction,\n    lua_pushglobaltable,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawlen,\n    lua_rawset,\n    lua_remove,\n    lua_replace,\n    lua_rotate,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_stringtonumber,\n    lua_toboolean,\n    lua_tolstring,\n    lua_tostring,\n    lua_type,\n    lua_typename\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkoption,\n    luaL_checkstack,\n    luaL_checktype,\n    luaL_error,\n    luaL_getmetafield,\n    luaL_loadbufferx,\n    luaL_loadfile,\n    luaL_loadfilex,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_setfuncs,\n    luaL_tolstring,\n    luaL_where\n} = require('./lauxlib.js');\nconst {\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nlet lua_writestring;\nlet lua_writeline;\nif (typeof process === \"undefined\") {\n    if (typeof TextDecoder === \"function\") { /* Older browsers don't have TextDecoder */\n        let buff = \"\";\n        let decoder = new TextDecoder(\"utf-8\");\n        lua_writestring = function(s) {\n            buff += decoder.decode(s, {stream: true});\n        };\n        let empty = new Uint8Array(0);\n        lua_writeline = function() {\n            buff += decoder.decode(empty);\n            console.log(buff);\n            buff = \"\";\n        };\n    } else {\n        let buff = [];\n        lua_writestring = function(s) {\n            try {\n                /* If the string is valid utf8, then we can use to_jsstring */\n                s = to_jsstring(s);\n            } catch(e) {\n                /* otherwise push copy of raw array */\n                let copy = new Uint8Array(s.length);\n                copy.set(s);\n                s = copy;\n            }\n            buff.push(s);\n        };\n        lua_writeline = function() {\n            console.log.apply(console.log, buff);\n            buff = [];\n        };\n    }\n} else {\n    lua_writestring = function(s) {\n        process.stdout.write(Buffer.from(s));\n    };\n    lua_writeline = function() {\n        process.stdout.write(\"\\n\");\n    };\n}\nconst luaB_print = function(L) {\n    let n = lua_gettop(L); /* number of arguments */\n    lua_getglobal(L, to_luastring(\"tostring\", true));\n    for (let i = 1; i <= n; i++) {\n        lua_pushvalue(L, -1);  /* function to be called */\n        lua_pushvalue(L, i);  /* value to print */\n        lua_call(L, 1, 1);\n        let s = lua_tolstring(L, -1);\n        if (s === null)\n            return luaL_error(L, to_luastring(\"'tostring' must return a string to 'print'\"));\n        if (i > 1) lua_writestring(to_luastring(\"\\t\"));\n        lua_writestring(s);\n        lua_pop(L, 1);\n    }\n    lua_writeline();\n    return 0;\n};\n\nconst luaB_tostring = function(L) {\n    luaL_checkany(L, 1);\n    luaL_tolstring(L, 1);\n\n    return 1;\n};\n\nconst luaB_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);\n        return 1;  /* no metatable */\n    }\n    luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true));\n    return 1;  /* returns either __metatable field (if present) or metatable */\n};\n\nconst luaB_setmetatable = function(L) {\n    let t = lua_type(L, 2);\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_argcheck(L, t === LUA_TNIL || t === LUA_TTABLE, 2, \"nil or table expected\");\n    if (luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true)) !== LUA_TNIL)\n        return luaL_error(L, to_luastring(\"cannot change a protected metatable\"));\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;\n};\n\nconst luaB_rawequal = function(L) {\n    luaL_checkany(L, 1);\n    luaL_checkany(L, 2);\n    lua_pushboolean(L, lua_rawequal(L, 1, 2));\n    return 1;\n};\n\nconst luaB_rawlen = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t === LUA_TTABLE || t === LUA_TSTRING, 1, \"table or string expected\");\n    lua_pushinteger(L, lua_rawlen(L, 1));\n    return 1;\n};\n\nconst luaB_rawget = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_rawget(L, 1);\n    return 1;\n};\n\nconst luaB_rawset = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    luaL_checkany(L, 3);\n    lua_settop(L, 3);\n    lua_rawset(L, 1);\n    return 1;\n};\n\nconst opts = [\n    \"stop\", \"restart\", \"collect\",\n    \"count\", \"step\", \"setpause\", \"setstepmul\",\n    \"isrunning\"\n].map((e) => to_luastring(e));\nconst luaB_collectgarbage = function(L) {\n    luaL_checkoption(L, 1, \"collect\", opts);\n    luaL_optinteger(L, 2, 0);\n    luaL_error(L, to_luastring(\"lua_gc not implemented\"));\n};\n\nconst luaB_type = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t !== LUA_TNONE, 1, \"value expected\");\n    lua_pushstring(L, lua_typename(L, t));\n    return 1;\n};\n\nconst pairsmeta = function(L, method, iszero, iter) {\n    luaL_checkany(L, 1);\n    if (luaL_getmetafield(L, 1, method) === LUA_TNIL) {  /* no metamethod? */\n        lua_pushcfunction(L, iter);  /* will return generator, */\n        lua_pushvalue(L, 1);  /* state, */\n        if (iszero) lua_pushinteger(L, 0);  /* and initial value */\n        else lua_pushnil(L);\n    } else {\n        lua_pushvalue(L, 1);  /* argument 'self' to metamethod */\n        lua_call(L, 1, 3);  /* get 3 values from metamethod */\n    }\n    return 3;\n};\n\nconst luaB_next = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    lua_settop(L, 2);  /* create a 2nd argument if there isn't one */\n    if (lua_next(L, 1))\n        return 2;\n    else {\n        lua_pushnil(L);\n        return 1;\n    }\n};\n\nconst luaB_pairs = function(L) {\n    return pairsmeta(L, to_luastring(\"__pairs\", true), 0, luaB_next);\n};\n\n/*\n** Traversal function for 'ipairs'\n*/\nconst ipairsaux = function(L) {\n    let i = luaL_checkinteger(L, 2) + 1;\n    lua_pushinteger(L, i);\n    return lua_geti(L, 1, i) === LUA_TNIL ? 1 : 2;\n};\n\n/*\n** 'ipairs' function. Returns 'ipairsaux', given \"table\", 0.\n** (The given \"table\" may not be a table.)\n*/\nconst luaB_ipairs = function(L) {\n    // Lua 5.2\n    // return pairsmeta(L, \"__ipairs\", 1, ipairsaux);\n\n    luaL_checkany(L, 1);\n    lua_pushcfunction(L, ipairsaux);  /* iteration function */\n    lua_pushvalue(L, 1);  /* state */\n    lua_pushinteger(L, 0);  /* initial value */\n    return 3;\n};\n\nconst b_str2int = function(s, base) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    let r = /^[\\t\\v\\f \\n\\r]*([+-]?)0*([0-9A-Za-z]+)[\\t\\v\\f \\n\\r]*$/.exec(s);\n    if (!r) return null;\n    let v = parseInt(r[1]+r[2], base);\n    if (isNaN(v)) return null;\n    return v|0;\n};\n\nconst luaB_tonumber = function(L) {\n    if (lua_type(L, 2) <= 0) {  /* standard conversion? */\n        luaL_checkany(L, 1);\n        if (lua_type(L, 1) === LUA_TNUMBER) {  /* already a number? */\n            lua_settop(L, 1);\n            return 1;\n        } else {\n            let s = lua_tostring(L, 1);\n            if (s !== null && lua_stringtonumber(L, s) === s.length+1)\n                return 1;  /* successful conversion to number */\n        }\n    } else {\n        let base = luaL_checkinteger(L, 2);\n        luaL_checktype(L, 1, LUA_TSTRING);  /* no numbers as strings */\n        let s = lua_tostring(L, 1);\n        luaL_argcheck(L, 2 <= base && base <= 36, 2, \"base out of range\");\n        let n = b_str2int(s, base);\n        if (n !== null) {\n            lua_pushinteger(L, n);\n            return 1;\n        }\n    }\n\n    lua_pushnil(L);\n    return 1;\n};\n\nconst luaB_error = function(L) {\n    let level = luaL_optinteger(L, 2, 1);\n    lua_settop(L, 1);\n    if (lua_type(L, 1) === LUA_TSTRING && level > 0) {\n        luaL_where(L, level);  /* add extra information */\n        lua_pushvalue(L, 1);\n        lua_concat(L, 2);\n    }\n    return lua_error(L);\n};\n\nconst luaB_assert = function(L) {\n    if (lua_toboolean(L, 1))  /* condition is true? */\n        return lua_gettop(L);  /* return all arguments */\n    else {\n        luaL_checkany(L, 1);  /* there must be a condition */\n        lua_remove(L, 1);  /* remove it */\n        lua_pushliteral(L, \"assertion failed!\");  /* default message */\n        lua_settop(L, 1);  /* leave only message (default if no other one) */\n        return luaB_error(L);  /* call 'error' */\n    }\n};\n\nconst luaB_select = function(L) {\n    let n = lua_gettop(L);\n    if (lua_type(L, 1) === LUA_TSTRING && lua_tostring(L, 1)[0] === 35 /* '#'.charCodeAt(0) */) {\n        lua_pushinteger(L, n - 1);\n        return 1;\n    } else {\n        let i = luaL_checkinteger(L, 1);\n        if (i < 0) i = n + i;\n        else if (i > n) i = n;\n        luaL_argcheck(L, 1 <= i, 1, \"index out of range\");\n        return n - i;\n    }\n};\n\n/*\n** Continuation function for 'pcall' and 'xpcall'. Both functions\n** already pushed a 'true' before doing the call, so in case of success\n** 'finishpcall' only has to return everything in the stack minus\n** 'extra' values (where 'extra' is exactly the number of items to be\n** ignored).\n*/\nconst finishpcall = function(L, status, extra) {\n    if (status !== LUA_OK && status !== LUA_YIELD) {  /* error? */\n        lua_pushboolean(L, 0);  /* first result (false) */\n        lua_pushvalue(L, -2);  /* error message */\n        return 2;  /* return false, msg */\n    } else\n        return lua_gettop(L) - extra;\n};\n\nconst luaB_pcall = function(L) {\n    luaL_checkany(L, 1);\n    lua_pushboolean(L, 1);  /* first result if no errors */\n    lua_insert(L, 1);  /* put it in place */\n    let status = lua_pcallk(L, lua_gettop(L) - 2, LUA_MULTRET, 0, 0, finishpcall);\n    return finishpcall(L, status, 0);\n};\n\n/*\n** Do a protected call with error handling. After 'lua_rotate', the\n** stack will have <f, err, true, f, [args...]>; so, the function passes\n** 2 to 'finishpcall' to skip the 2 first values when returning results.\n*/\nconst luaB_xpcall = function(L) {\n    let n = lua_gettop(L);\n    luaL_checktype(L, 2, LUA_TFUNCTION);  /* check error function */\n    lua_pushboolean(L, 1);  /* first result */\n    lua_pushvalue(L, 1);  /* function */\n    lua_rotate(L, 3, 2);  /* move them below function's arguments */\n    let status = lua_pcallk(L, n - 2, LUA_MULTRET, 2, 2, finishpcall);\n    return finishpcall(L, status, 2);\n};\n\nconst load_aux = function(L, status, envidx) {\n    if (status === LUA_OK) {\n        if (envidx !== 0) {  /* 'env' parameter? */\n            lua_pushvalue(L, envidx);  /* environment for loaded function */\n            if (!lua_setupvalue(L, -2, 1))  /* set it as 1st upvalue */\n                lua_pop(L, 1);  /* remove 'env' if not used by previous call */\n        }\n        return 1;\n    } else {  /* error (message is on top of the stack) */\n        lua_pushnil(L);\n        lua_insert(L, -2);  /* put before error message */\n        return 2;  /* return nil plus error message */\n    }\n};\n\n/*\n** reserved slot, above all arguments, to hold a copy of the returned\n** string to avoid it being collected while parsed. 'load' has four\n** optional arguments (chunk, source name, mode, and environment).\n*/\nconst RESERVEDSLOT = 5;\n\n/*\n** Reader for generic 'load' function: 'lua_load' uses the\n** stack for internal stuff, so the reader cannot change the\n** stack top. Instead, it keeps its resulting string in a\n** reserved slot inside the stack.\n*/\nconst generic_reader = function(L, ud) {\n    luaL_checkstack(L, 2, \"too many nested functions\");\n    lua_pushvalue(L, 1);  /* get function */\n    lua_call(L, 0, 1);  /* call it */\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* pop result */\n        return null;\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"reader function must return a string\"));\n    lua_replace(L, RESERVEDSLOT);  /* save string in reserved slot */\n    return lua_tostring(L, RESERVEDSLOT);\n};\n\nconst luaB_load = function(L) {\n    let s = lua_tostring(L, 1);\n    let mode = luaL_optstring(L, 3, \"bt\");\n    let env = !lua_isnone(L, 4) ? 4 : 0;  /* 'env' index or 0 if no 'env' */\n    let status;\n    if (s !== null) {  /* loading a string? */\n        let chunkname = luaL_optstring(L, 2, s);\n        status = luaL_loadbufferx(L, s, s.length, chunkname, mode);\n    } else {  /* loading from a reader function */\n        let chunkname = luaL_optstring(L, 2, \"=(load)\");\n        luaL_checktype(L, 1, LUA_TFUNCTION);\n        lua_settop(L, RESERVEDSLOT);  /* create reserved slot */\n        status = lua_load(L, generic_reader, null, chunkname, mode);\n    }\n    return load_aux(L, status, env);\n};\n\nconst luaB_loadfile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    let mode = luaL_optstring(L, 2, null);\n    let env = !lua_isnone(L, 3) ? 3 : 0;  /* 'env' index or 0 if no 'env' */\n    let status = luaL_loadfilex(L, fname, mode);\n    return load_aux(L, status, env);\n};\n\nconst dofilecont = function(L, d1, d2) {\n    return lua_gettop(L) - 1;\n};\n\nconst luaB_dofile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    lua_settop(L, 1);\n    if (luaL_loadfile(L, fname) !== LUA_OK)\n        return lua_error(L);\n    lua_callk(L, 0, LUA_MULTRET, 0, dofilecont);\n    return dofilecont(L, 0, 0);\n};\n\nconst base_funcs = {\n    \"assert\":         luaB_assert,\n    \"collectgarbage\": luaB_collectgarbage,\n    \"dofile\":         luaB_dofile,\n    \"error\":          luaB_error,\n    \"getmetatable\":   luaB_getmetatable,\n    \"ipairs\":         luaB_ipairs,\n    \"load\":           luaB_load,\n    \"loadfile\":       luaB_loadfile,\n    \"next\":           luaB_next,\n    \"pairs\":          luaB_pairs,\n    \"pcall\":          luaB_pcall,\n    \"print\":          luaB_print,\n    \"rawequal\":       luaB_rawequal,\n    \"rawget\":         luaB_rawget,\n    \"rawlen\":         luaB_rawlen,\n    \"rawset\":         luaB_rawset,\n    \"select\":         luaB_select,\n    \"setmetatable\":   luaB_setmetatable,\n    \"tonumber\":       luaB_tonumber,\n    \"tostring\":       luaB_tostring,\n    \"type\":           luaB_type,\n    \"xpcall\":         luaB_xpcall\n};\n\nconst luaopen_base = function(L) {\n    /* open lib into global table */\n    lua_pushglobaltable(L);\n    luaL_setfuncs(L, base_funcs, 0);\n    /* set global _G */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -2, to_luastring(\"_G\"));\n    /* set global _VERSION */\n    lua_pushliteral(L, LUA_VERSION);\n    lua_setfield(L, -2, to_luastring(\"_VERSION\"));\n    return 1;\n};\n\nmodule.exports.luaopen_base = luaopen_base;\n","\"use strict\";\n\nconst {\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TSTRING,\n    LUA_YIELD,\n    lua_Debug,\n    lua_checkstack,\n    lua_concat,\n    lua_error,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isyieldable,\n    lua_newthread,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushliteral,\n    lua_pushthread,\n    lua_pushvalue,\n    lua_resume,\n    lua_status,\n    lua_tothread,\n    lua_type,\n    lua_upvalueindex,\n    lua_xmove,\n    lua_yield\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checktype,\n    luaL_newlib,\n    luaL_where\n} = require('./lauxlib.js');\n\nconst getco = function(L) {\n    let co = lua_tothread(L, 1);\n    luaL_argcheck(L, co, 1, \"thread expected\");\n    return co;\n};\n\nconst auxresume = function(L, co, narg) {\n    if (!lua_checkstack(co, narg)) {\n        lua_pushliteral(L, \"too many arguments to resume\");\n        return -1;  /* error flag */\n    }\n\n    if (lua_status(co) === LUA_OK && lua_gettop(co) === 0) {\n        lua_pushliteral(L, \"cannot resume dead coroutine\");\n        return -1;  /* error flag */\n    }\n\n    lua_xmove(L, co, narg);\n    let status = lua_resume(co, L, narg);\n    if (status === LUA_OK || status === LUA_YIELD) {\n        let nres = lua_gettop(co);\n        if (!lua_checkstack(L, nres + 1)) {\n            lua_pop(co, nres);  /* remove results anyway */\n            lua_pushliteral(L, \"too many results to resume\");\n            return -1;  /* error flag */\n        }\n\n        lua_xmove(co,  L, nres);  /* move yielded values */\n        return nres;\n    } else {\n        lua_xmove(co, L, 1);  /* move error message */\n        return -1;  /* error flag */\n    }\n};\n\nconst luaB_coresume = function(L) {\n    let co = getco(L);\n    let r = auxresume(L, co, lua_gettop(L) - 1);\n    if (r < 0) {\n        lua_pushboolean(L, 0);\n        lua_insert(L, -2);\n        return 2;  /* return false + error message */\n    } else {\n        lua_pushboolean(L, 1);\n        lua_insert(L, -(r + 1));\n        return r + 1;  /* return true + 'resume' returns */\n    }\n};\n\nconst luaB_auxwrap = function(L) {\n    let co = lua_tothread(L, lua_upvalueindex(1));\n    let r = auxresume(L, co, lua_gettop(L));\n    if (r < 0) {\n        if (lua_type(L, -1) === LUA_TSTRING) {  /* error object is a string? */\n            luaL_where(L, 1);  /* add extra info */\n            lua_insert(L, -2);\n            lua_concat(L, 2);\n        }\n\n        return lua_error(L);  /* propagate error */\n    }\n\n    return r;\n};\n\nconst luaB_cocreate = function(L) {\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    let NL = lua_newthread(L);\n    lua_pushvalue(L, 1);  /* move function to top */\n    lua_xmove(L, NL, 1);  /* move function from L to NL */\n    return 1;\n};\n\nconst luaB_cowrap = function(L) {\n    luaB_cocreate(L);\n    lua_pushcclosure(L, luaB_auxwrap, 1);\n    return 1;\n};\n\nconst luaB_yield = function(L) {\n    return lua_yield(L, lua_gettop(L));\n};\n\nconst luaB_costatus = function(L) {\n    let co = getco(L);\n    if (L === co) lua_pushliteral(L, \"running\");\n    else {\n        switch (lua_status(co)) {\n            case LUA_YIELD:\n                lua_pushliteral(L, \"suspended\");\n                break;\n            case LUA_OK: {\n                let ar = new lua_Debug();\n                if (lua_getstack(co, 0, ar) > 0)  /* does it have frames? */\n                    lua_pushliteral(L, \"normal\");  /* it is running */\n                else if (lua_gettop(co) === 0)\n                    lua_pushliteral(L, \"dead\");\n                else\n                    lua_pushliteral(L, \"suspended\");  /* initial state */\n                break;\n            }\n            default:  /* some error occurred */\n                lua_pushliteral(L, \"dead\");\n                break;\n        }\n    }\n\n    return 1;\n};\n\nconst luaB_yieldable = function(L) {\n    lua_pushboolean(L, lua_isyieldable(L));\n    return 1;\n};\n\nconst luaB_corunning = function(L) {\n    lua_pushboolean(L, lua_pushthread(L));\n    return 2;\n};\n\nconst co_funcs = {\n    \"create\":      luaB_cocreate,\n    \"isyieldable\": luaB_yieldable,\n    \"resume\":      luaB_coresume,\n    \"running\":     luaB_corunning,\n    \"status\":      luaB_costatus,\n    \"wrap\":        luaB_cowrap,\n    \"yield\":       luaB_yield\n};\n\nconst luaopen_coroutine = function(L) {\n    luaL_newlib(L, co_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_coroutine = luaopen_coroutine;\n","\"use strict\";\n\nconst { LUA_MAXINTEGER } = require('./luaconf.js');\nconst {\n    LUA_OPEQ,\n    LUA_OPLT,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_call,\n    lua_checkstack,\n    lua_compare,\n    lua_createtable,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnoneornil,\n    lua_isstring,\n    lua_pop,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawget,\n    lua_setfield,\n    lua_seti,\n    lua_settop,\n    lua_toboolean,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addlstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checktype,\n    luaL_error,\n    luaL_len,\n    luaL_newlib,\n    luaL_opt,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_pushresult,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\n/*\n** Operations that an object must define to mimic a table\n** (some functions only need some of them)\n*/\nconst TAB_R  = 1;               /* read */\nconst TAB_W  = 2;               /* write */\nconst TAB_L  = 4;               /* length */\nconst TAB_RW = (TAB_R | TAB_W); /* read/write */\n\nconst checkfield = function(L, key, n) {\n    lua_pushstring(L, key);\n    return lua_rawget(L, -n) !== LUA_TNIL;\n};\n\n/*\n** Check that 'arg' either is a table or can behave like one (that is,\n** has a metatable with the required metamethods)\n*/\nconst checktab = function(L, arg, what) {\n    if (lua_type(L, arg) !== LUA_TTABLE) {  /* is it not a table? */\n        let n = 1;\n        if (lua_getmetatable(L, arg) &&  /* must have metatable */\n            (!(what & TAB_R) || checkfield(L, to_luastring(\"__index\", true), ++n)) &&\n            (!(what & TAB_W) || checkfield(L, to_luastring(\"__newindex\", true), ++n)) &&\n            (!(what & TAB_L) || checkfield(L, to_luastring(\"__len\", true), ++n))) {\n            lua_pop(L, n);  /* pop metatable and tested metamethods */\n        }\n        else\n            luaL_checktype(L, arg, LUA_TTABLE);  /* force an error */\n    }\n};\n\nconst aux_getn = function(L, n, w) {\n    checktab(L, n, w | TAB_L);\n    return luaL_len(L, n);\n};\n\nconst addfield = function(L, b, i) {\n    lua_geti(L, 1, i);\n    if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid value (%s) at index %d in table for 'concat'\"),\n            luaL_typename(L, -1), i);\n\n    luaL_addvalue(b);\n};\n\nconst tinsert = function(L) {\n    let e = aux_getn(L, 1, TAB_RW) + 1;  /* first empty element */\n    let pos;\n    switch (lua_gettop(L)) {\n        case 2:\n            pos = e;\n            break;\n        case 3: {\n            pos = luaL_checkinteger(L, 2);  /* 2nd argument is the position */\n            luaL_argcheck(L, 1 <= pos && pos <= e, 2, \"position out of bounds\");\n            for (let i = e; i > pos; i--) {  /* move up elements */\n                lua_geti(L, 1, i - 1);\n                lua_seti(L, 1, i);  /* t[i] = t[i - 1] */\n            }\n            break;\n        }\n        default: {\n            return luaL_error(L, \"wrong number of arguments to 'insert'\");\n        }\n    }\n\n    lua_seti(L, 1, pos);  /* t[pos] = v */\n    return 0;\n};\n\nconst tremove = function(L) {\n    let size = aux_getn(L, 1, TAB_RW);\n    let pos = luaL_optinteger(L, 2, size);\n    if (pos !== size)  /* validate 'pos' if given */\n        luaL_argcheck(L, 1 <= pos && pos <= size + 1, 1, \"position out of bounds\");\n    lua_geti(L, 1, pos);  /* result = t[pos] */\n    for (; pos < size; pos++) {\n        lua_geti(L, 1, pos + 1);\n        lua_seti(L, 1, pos);  /* t[pos] = t[pos + 1] */\n    }\n    lua_pushnil(L);\n    lua_seti(L, 1, pos);  /* t[pos] = nil */\n    return 1;\n};\n\n/*\n** Copy elements (1[f], ..., 1[e]) into (tt[t], tt[t+1], ...). Whenever\n** possible, copy in increasing order, which is better for rehashing.\n** \"possible\" means destination after original range, or smaller\n** than origin, or copying to another table.\n*/\nconst tmove = function(L) {\n    let f = luaL_checkinteger(L, 2);\n    let e = luaL_checkinteger(L, 3);\n    let t = luaL_checkinteger(L, 4);\n    let tt = !lua_isnoneornil(L, 5) ? 5 : 1;  /* destination table */\n    checktab(L, 1, TAB_R);\n    checktab(L, tt, TAB_W);\n    if (e >= f) {  /* otherwise, nothing to move */\n        luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3, \"too many elements to move\");\n        let n = e - f + 1;  /* number of elements to move */\n        luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4, \"destination wrap around\");\n\n        if (t > e || t <= f || (tt !== 1 && lua_compare(L, 1, tt, LUA_OPEQ) !== 1)) {\n            for (let i = 0; i < n; i++) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        } else {\n            for (let i = n - 1; i >= 0; i--) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        }\n    }\n\n    lua_pushvalue(L, tt);  /* return destination table */\n    return 1;\n};\n\nconst tconcat = function(L) {\n    let last = aux_getn(L, 1, TAB_R);\n    let sep = luaL_optlstring(L, 2, \"\");\n    let lsep = sep.length;\n    let i = luaL_optinteger(L, 3, 1);\n    last = luaL_optinteger(L, 4, last);\n\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n\n    for (; i < last; i++) {\n        addfield(L, b, i);\n        luaL_addlstring(b, sep, lsep);\n    }\n\n    if (i === last)\n        addfield(L, b, i);\n\n    luaL_pushresult(b);\n\n    return 1;\n};\n\nconst pack = function(L) {\n    let n = lua_gettop(L);  /* number of elements to pack */\n    lua_createtable(L, n, 1);  /* create result table */\n    lua_insert(L, 1);  /* put it at index 1 */\n    for (let i = n; i >= 1; i--)  /* assign elements */\n        lua_seti(L, 1, i);\n    lua_pushinteger(L, n);\n    lua_setfield(L, 1, to_luastring(\"n\"));  /* t.n = number of elements */\n    return 1;  /* return table */\n};\n\nconst unpack = function(L) {\n    let i = luaL_optinteger(L, 2, 1);\n    let e = luaL_opt(L, luaL_checkinteger, 3, luaL_len(L, 1));\n    if (i > e) return 0;  /* empty range */\n    let n = e - i;  /* number of elements minus 1 (avoid overflows) */\n    if (n >= Number.MAX_SAFE_INTEGER || !lua_checkstack(L, ++n))\n        return luaL_error(L, to_luastring(\"too many results to unpack\"));\n    for (; i < e; i++)  /* push arg[i..e - 1] (to avoid overflows) */\n        lua_geti(L, 1, i);\n    lua_geti(L, 1, e);  /* push last element */\n    return n;\n};\n\nconst l_randomizePivot = function() {\n    return Math.floor(Math.random()*0x100000000);\n};\n\nconst RANLIMIT = 100;\n\nconst set2 = function(L, i, j) {\n    lua_seti(L, 1, i);\n    lua_seti(L, 1, j);\n};\n\nconst sort_comp = function(L, a, b) {\n    if (lua_isnil(L, 2))  /* no function? */\n        return lua_compare(L, a, b, LUA_OPLT);  /* a < b */\n    else {  /* function */\n        lua_pushvalue(L, 2);    /* push function */\n        lua_pushvalue(L, a-1);  /* -1 to compensate function */\n        lua_pushvalue(L, b-2);  /* -2 to compensate function and 'a' */\n        lua_call(L, 2, 1);      /* call function */\n        let res = lua_toboolean(L, -1);  /* get result */\n        lua_pop(L, 1);          /* pop result */\n        return res;\n    }\n};\n\nconst partition = function(L, lo, up) {\n    let i = lo;  /* will be incremented before first use */\n    let j = up - 1;  /* will be decremented before first use */\n    /* loop invariant: a[lo .. i] <= P <= a[j .. up] */\n    for (;;) {\n        /* next loop: repeat ++i while a[i] < P */\n        while (lua_geti(L, 1, ++i), sort_comp(L, -1, -2)) {\n            if (i == up - 1)  /* a[i] < P  but a[up - 1] == P  ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[i] */\n        }\n        /* after the loop, a[i] >= P and a[lo .. i - 1] < P */\n        /* next loop: repeat --j while P < a[j] */\n        while (lua_geti(L, 1, --j), sort_comp(L, -3, -1)) {\n            if (j < i)  /* j < i  but  a[j] > P ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[j] */\n        }\n        /* after the loop, a[j] <= P and a[j + 1 .. up] >= P */\n        if (j < i) {  /* no elements out of place? */\n            /* a[lo .. i - 1] <= P <= a[j + 1 .. i .. up] */\n            lua_pop(L, 1);  /* pop a[j] */\n            /* swap pivot (a[up - 1]) with a[i] to satisfy pos-condition */\n            set2(L, up - 1, i);\n            return i;\n        }\n        /* otherwise, swap a[i] - a[j] to restore invariant and repeat */\n        set2(L, i, j);\n    }\n};\n\nconst choosePivot = function(lo, up, rnd) {\n    let r4 = Math.floor((up - lo) / 4);  /* range/4 */\n    let p = rnd % (r4 * 2) + (lo + r4);\n    lualib.lua_assert(lo + r4 <= p && p <= up - r4);\n    return p;\n};\n\nconst auxsort = function(L, lo, up, rnd) {\n    while (lo < up) {  /* loop for tail recursion */\n        /* sort elements 'lo', 'p', and 'up' */\n        lua_geti(L, 1, lo);\n        lua_geti(L, 1, up);\n        if (sort_comp(L, -1, -2))  /* a[up] < a[lo]? */\n            set2(L, lo, up);  /* swap a[lo] - a[up] */\n        else\n            lua_pop(L, 2);  /* remove both values */\n        if (up - lo == 1)  /* only 2 elements? */\n            return;  /* already sorted */\n        let p;  /* Pivot index */\n        if (up - lo < RANLIMIT || rnd === 0)  /* small interval or no randomize? */\n            p = Math.floor((lo + up)/2);  /* middle element is a good pivot */\n        else  /* for larger intervals, it is worth a random pivot */\n            p = choosePivot(lo, up, rnd);\n        lua_geti(L, 1, p);\n        lua_geti(L, 1, lo);\n        if (sort_comp(L, -2, -1))  /* a[p] < a[lo]? */\n            set2(L, p, lo);  /* swap a[p] - a[lo] */\n        else {\n            lua_pop(L, 1);  /* remove a[lo] */\n            lua_geti(L, 1, up);\n            if (sort_comp(L, -1, -2))  /* a[up] < a[p]? */\n                set2(L, p, up);  /* swap a[up] - a[p] */\n            else\n                lua_pop(L, 2);\n        }\n        if (up - lo == 2)  /* only 3 elements? */\n            return;  /* already sorted */\n        lua_geti(L, 1, p);  /* get middle element (Pivot) */\n        lua_pushvalue(L, -1);  /* push Pivot */\n        lua_geti(L, 1, up - 1);  /* push a[up - 1] */\n        set2(L, p, up - 1);  /* swap Pivot (a[p]) with a[up - 1] */\n        p = partition(L, lo, up);\n        let n;\n        /* a[lo .. p - 1] <= a[p] == P <= a[p + 1 .. up] */\n        if (p - lo < up - p) {  /* lower interval is smaller? */\n            auxsort(L, lo, p - 1, rnd);  /* call recursively for lower interval */\n            n = p - lo;  /* size of smaller interval */\n            lo = p + 1;  /* tail call for [p + 1 .. up] (upper interval) */\n        } else {\n            auxsort(L, p + 1, up, rnd);  /* call recursively for upper interval */\n            n = up - p;  /* size of smaller interval */\n            up = p - 1;  /* tail call for [lo .. p - 1]  (lower interval) */\n        }\n        if ((up - lo) / 128 > n) /* partition too imbalanced? */\n            rnd = l_randomizePivot();  /* try a new randomization */\n    }  /* tail call auxsort(L, lo, up, rnd) */\n};\n\nconst sort = function(L) {\n    let n = aux_getn(L, 1, TAB_RW);\n    if (n > 1) {  /* non-trivial interval? */\n        luaL_argcheck(L, n < LUA_MAXINTEGER, 1, \"array too big\");\n        if (!lua_isnoneornil(L, 2))  /* is there a 2nd argument? */\n            luaL_checktype(L, 2, LUA_TFUNCTION);  /* must be a function */\n        lua_settop(L, 2);  /* make sure there are two arguments */\n        auxsort(L, 1, n, 0);\n    }\n    return 0;\n};\n\nconst tab_funcs = {\n    \"concat\": tconcat,\n    \"insert\": tinsert,\n    \"move\":   tmove,\n    \"pack\":   pack,\n    \"remove\": tremove,\n    \"sort\":   sort,\n    \"unpack\": unpack\n};\n\nconst luaopen_table = function(L) {\n    luaL_newlib(L, tab_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_table = luaopen_table;\n","\"use strict\";\n\nconst {\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_close,\n    lua_createtable,\n    lua_getfield,\n    lua_isboolean,\n    lua_isnoneornil,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_setfield,\n    lua_settop,\n    lua_toboolean,\n    lua_tointegerx\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addstring,\n    // luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_execresult,\n    luaL_fileresult,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_optstring,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_eq,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/* options for ANSI C 89 (only 1-char options) */\n// const L_STRFTIMEC89 = to_luastring(\"aAbBcdHIjmMpSUwWxXyYZ%\");\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC89;\n\n/* options for ISO C 99 and POSIX */\n// const L_STRFTIMEC99 = to_luastring(\"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%||EcECExEXEyEYOdOeOHOIOmOMOSOuOUOVOwOWOy\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC99;\n\n/* options for Windows */\n// const L_STRFTIMEWIN = to_luastring(\"aAbBcdHIjmMpSUwWxXyYzZ%||#c#x#d#H#I#j#m#M#S#U#w#W#y#Y\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEWIN;\n\n/* options for our own strftime implementation\n  - should be superset of C89 options for compat\n  - missing from C99:\n      - ISO 8601 week specifiers: gGV\n      - > single char specifiers\n  - beyond C99:\n      - %k: TZ extension: space-padded 24-hour\n      - %l: TZ extension: space-padded 12-hour\n      - %P: GNU extension: lower-case am/pm\n*/\nconst LUA_STRFTIMEOPTIONS = to_luastring(\"aAbBcCdDeFhHIjklmMnpPrRStTuUwWxXyYzZ%\");\n\n\nconst setfield = function(L, key, value) {\n    lua_pushinteger(L, value);\n    lua_setfield(L, -2, to_luastring(key, true));\n};\n\nconst setallfields = function(L, time, utc) {\n    setfield(L, \"sec\",   utc ? time.getUTCSeconds()  : time.getSeconds());\n    setfield(L, \"min\",   utc ? time.getUTCMinutes()  : time.getMinutes());\n    setfield(L, \"hour\",  utc ? time.getUTCHours()    : time.getHours());\n    setfield(L, \"day\",   utc ? time.getUTCDate()     : time.getDate());\n    setfield(L, \"month\", (utc ? time.getUTCMonth()   : time.getMonth()) + 1);\n    setfield(L, \"year\",  utc ? time.getUTCFullYear() : time.getFullYear());\n    setfield(L, \"wday\",  (utc ? time.getUTCDay()     : time.getDay()) + 1);\n    setfield(L, \"yday\", Math.floor((time - (new Date(time.getFullYear(), 0, 0 /* shortcut to correct day by one */))) / 86400000));\n    // setboolfield(L, \"isdst\", time.get);\n};\n\nconst L_MAXDATEFIELD = (Number.MAX_SAFE_INTEGER / 2);\n\nconst getfield = function(L, key, d, delta) {\n    let t = lua_getfield(L, -1, to_luastring(key, true));  /* get field and its type */\n    let res = lua_tointegerx(L, -1);\n    if (res === false) {  /* field is not an integer? */\n        if (t !== LUA_TNIL)  /* some other value? */\n            return luaL_error(L, to_luastring(\"field '%s' is not an integer\"), key);\n        else if (d < 0)  /* absent field; no default? */\n            return luaL_error(L, to_luastring(\"field '%s' missing in date table\"), key);\n        res = d;\n    }\n    else {\n        if (!(-L_MAXDATEFIELD <= res && res <= L_MAXDATEFIELD))\n            return luaL_error(L, to_luastring(\"field '%s' is out-of-bound\"), key);\n        res -= delta;\n    }\n    lua_pop(L, 1);\n    return res;\n};\n\n\nconst locale = {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ].map((s) => to_luastring(s)),\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((s) => to_luastring(s)),\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((s) => to_luastring(s)),\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].map((s) => to_luastring(s)),\n    AM: to_luastring(\"AM\"),\n    PM: to_luastring(\"PM\"),\n    am: to_luastring(\"am\"),\n    pm: to_luastring(\"pm\"),\n    formats: {\n        c: to_luastring(\"%a %b %e %H:%M:%S %Y\"),\n        D: to_luastring(\"%m/%d/%y\"),\n        F: to_luastring(\"%Y-%m-%d\"),\n        R: to_luastring(\"%H:%M\"),\n        r: to_luastring(\"%I:%M:%S %p\"),\n        T: to_luastring(\"%H:%M:%S\"),\n        X: to_luastring(\"%T\"),\n        x: to_luastring(\"%D\")\n    }\n};\n\nconst week_number = function(date, start_of_week) {\n    // This works by shifting the weekday back by one day if we\n    // are treating Monday as the first day of the week.\n    let weekday = date.getDay();\n    if (start_of_week === 'monday') {\n        if (weekday === 0) // Sunday\n            weekday = 6;\n        else\n            weekday--;\n    }\n    let yday = (date - new Date(date.getFullYear(), 0, 1)) / 86400000;\n    return Math.floor((yday + 7 - weekday) / 7);\n};\n\nconst push_pad_2 = function(b, n, pad) {\n    if (n < 10)\n        luaL_addchar(b, pad);\n    luaL_addstring(b, to_luastring(String(n)));\n};\n\nconst strftime = function(L, b, s, date) {\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] !== 37 /* % */) {  /* not a conversion specifier? */\n            luaL_addchar(b, s[i++]);\n        } else {\n            i++;  /* skip '%' */\n            let len = checkoption(L, s, i);\n            /* each `case` has an example output above it for the UTC epoch */\n            switch(s[i]) {\n                // '%'\n                case 37 /* % */:\n                    luaL_addchar(b, 37);\n                    break;\n\n                // 'Thursday'\n                case 65 /* A */:\n                    luaL_addstring(b, locale.days[date.getDay()]);\n                    break;\n\n                // 'January'\n                case 66 /* B */:\n                    luaL_addstring(b, locale.months[date.getMonth()]);\n                    break;\n\n                // '19'\n                case 67 /* C */:\n                    push_pad_2(b, Math.floor(date.getFullYear() / 100), 48 /* 0 */);\n                    break;\n\n                // '01/01/70'\n                case 68 /* D */:\n                    strftime(L, b, locale.formats.D, date);\n                    break;\n\n                // '1970-01-01'\n                case 70 /* F */:\n                    strftime(L, b, locale.formats.F, date);\n                    break;\n\n                // '00'\n                case 72 /* H */:\n                    push_pad_2(b, date.getHours(), 48 /* 0 */);\n                    break;\n\n                // '12'\n                case 73 /* I */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 77 /* M */:\n                    push_pad_2(b, date.getMinutes(), 48 /* 0 */);\n                    break;\n\n                // 'am'\n                case 80 /* P */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.am : locale.pm);\n                    break;\n\n                // '00:00'\n                case 82 /* R */:\n                    strftime(L, b, locale.formats.R, date);\n                    break;\n\n                // '00'\n                case 83 /* S */:\n                    push_pad_2(b, date.getSeconds(), 48 /* 0 */);\n                    break;\n\n                // '00:00:00'\n                case 84 /* T */:\n                    strftime(L, b, locale.formats.T, date);\n                    break;\n\n                // '00'\n                case 85 /* U */:\n                    push_pad_2(b, week_number(date, \"sunday\"), 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 87 /* W */:\n                    push_pad_2(b, week_number(date, \"monday\"), 48 /* 0 */);\n                    break;\n\n                // '16:00:00'\n                case 88 /* X */:\n                    strftime(L, b, locale.formats.X, date);\n                    break;\n\n                // '1970'\n                case 89 /* Y */:\n                    luaL_addstring(b, to_luastring(String(date.getFullYear())));\n                    break;\n\n                // 'GMT'\n                case 90 /* Z */: {\n                    let tzString = date.toString().match(/\\(([\\w\\s]+)\\)/);\n                    if (tzString)\n                        luaL_addstring(b, to_luastring(tzString[1]));\n                    break;\n                }\n\n                // 'Thu'\n                case 97 /* a */:\n                    luaL_addstring(b, locale.shortDays[date.getDay()]);\n                    break;\n\n                // 'Jan'\n                case 98 /* b */:\n                case 104 /* h */:\n                    luaL_addstring(b, locale.shortMonths[date.getMonth()]);\n                    break;\n\n                // ''\n                case 99 /* c */:\n                    strftime(L, b, locale.formats.c, date);\n                    break;\n\n                // '01'\n                case 100 /* d */:\n                    push_pad_2(b, date.getDate(), 48 /* 0 */);\n                    break;\n\n                // ' 1'\n                case 101 /* e */:\n                    push_pad_2(b, date.getDate(), 32 /* space */);\n                    break;\n\n                // '000'\n                case 106 /* j */: {\n                    let yday = Math.floor((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n                    if (yday < 100) {\n                        if (yday < 10)\n                            luaL_addchar(b, 48 /* 0 */);\n                        luaL_addchar(b, 48 /* 0 */);\n                    }\n                    luaL_addstring(b, to_luastring(String(yday)));\n                    break;\n                }\n\n                // ' 0'\n                case 107 /* k */:\n                    push_pad_2(b, date.getHours(), 32 /* space */);\n                    break;\n\n                // '12'\n                case 108 /* l */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 32 /* space */);\n                    break;\n\n                // '01'\n                case 109 /* m */:\n                    push_pad_2(b, date.getMonth() + 1, 48 /* 0 */);\n                    break;\n\n                // '\\n'\n                case 110 /* n */:\n                    luaL_addchar(b, 10);\n                    break;\n\n                // 'AM'\n                case 112 /* p */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.AM : locale.PM);\n                    break;\n\n                // '12:00:00 AM'\n                case 114 /* r */:\n                    strftime(L, b, locale.formats.r, date);\n                    break;\n\n                // '0'\n                case 115 /* s */:\n                    luaL_addstring(b, to_luastring(String(Math.floor(date / 1000))));\n                    break;\n\n                // '\\t'\n                case 116 /* t */:\n                    luaL_addchar(b, 8);\n                    break;\n\n                // '4'\n                case 117 /* u */: {\n                    let day = date.getDay();\n                    luaL_addstring(b, to_luastring(String(day === 0 ? 7 : day)));\n                    break;\n                }\n\n                // '4'\n                case 119 /* w */:\n                    luaL_addstring(b, to_luastring(String(date.getDay())));\n                    break;\n\n                // '12/31/69'\n                case 120 /* x */:\n                    strftime(L, b, locale.formats.x, date);\n                    break;\n\n                // '70'\n                case 121 /* y */:\n                    push_pad_2(b, date.getFullYear() % 100, 48 /* 0 */);\n                    break;\n\n                // '+0000'\n                case 122 /* z */: {\n                    let off = date.getTimezoneOffset();\n                    if (off > 0) {\n                        luaL_addchar(b, 45 /* - */);\n                    } else {\n                        off = -off;\n                        luaL_addchar(b, 43 /* + */);\n                    }\n                    push_pad_2(b, Math.floor(off/60), 48 /* 0 */);\n                    push_pad_2(b, off % 60, 48 /* 0 */);\n                    break;\n                }\n            }\n            i += len;\n        }\n    }\n};\n\n\nconst checkoption = function(L, conv, i) {\n    let option = LUA_STRFTIMEOPTIONS;\n    let o = 0;\n    let oplen = 1;  /* length of options being checked */\n    for (; o < option.length && oplen <= (conv.length - i); o += oplen) {\n        if (option[o] === '|'.charCodeAt(0))  /* next block? */\n            oplen++;  /* will check options with next length (+1) */\n        else if (luastring_eq(conv.subarray(i, i+oplen), option.subarray(o, o+oplen))) {  /* match? */\n            return oplen;  /* return length */\n        }\n    }\n    luaL_argerror(L, 1,\n        lua_pushfstring(L, to_luastring(\"invalid conversion specifier '%%%s'\"), conv));\n};\n\n/* maximum size for an individual 'strftime' item */\n// const SIZETIMEFMT = 250;\n\n\nconst os_date = function(L) {\n    let s = luaL_optlstring(L, 1, \"%c\");\n    let stm = lua_isnoneornil(L, 2) ? new Date() : new Date(l_checktime(L, 2) * 1000);\n    let utc = false;\n    let i = 0;\n    if (s[i] === '!'.charCodeAt(0)) {  /* UTC? */\n        utc = true;\n        i++;  /* skip '!' */\n    }\n    if (s[i] === \"*\".charCodeAt(0) && s[i+1] === \"t\".charCodeAt(0)) {\n        lua_createtable(L, 0, 9);  /* 9 = number of fields */\n        setallfields(L, stm, utc);\n    } else {\n        let cc = new Uint8Array(4);\n        cc[0] = \"%\".charCodeAt(0);\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        strftime(L, b, s, stm);\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\nconst os_time = function(L) {\n    let t;\n    if (lua_isnoneornil(L, 1))  /* called without args? */\n        t = new Date();  /* get current time */\n    else {\n        luaL_checktype(L, 1, LUA_TTABLE);\n        lua_settop(L, 1);  /* make sure table is at the top */\n        t = new Date(\n            getfield(L, \"year\", -1, 0),\n            getfield(L, \"month\", -1, 1),\n            getfield(L, \"day\", -1, 0),\n            getfield(L, \"hour\", 12, 0),\n            getfield(L, \"min\", 0, 0),\n            getfield(L, \"sec\", 0, 0)\n        );\n        setallfields(L, t);\n    }\n\n    lua_pushinteger(L, Math.floor(t / 1000));\n    return 1;\n};\n\nconst l_checktime = function(L, arg) {\n    let t = luaL_checkinteger(L, arg);\n    // luaL_argcheck(L, t, arg, \"time out-of-bounds\");\n    return t;\n};\n\nconst os_difftime = function(L) {\n    let t1 = l_checktime(L, 1);\n    let t2 = l_checktime(L, 2);\n    lua_pushnumber(L, t1 - t2);\n    return 1;\n};\n\nconst syslib = {\n    \"date\": os_date,\n    \"difftime\": os_difftime,\n    \"time\": os_time\n};\n\nif (typeof process === \"undefined\") {\n    syslib.clock = function(L) {\n        lua_pushnumber(L, performance.now()/1000);\n        return 1;\n    };\n} else {\n    /* Only with Node */\n    const fs = require('fs');\n    const tmp = require('tmp');\n    const child_process = require('child_process');\n\n    syslib.exit = function(L) {\n        let status;\n        if (lua_isboolean(L, 1))\n            status = (lua_toboolean(L, 1) ? 0 : 1);\n        else\n            status = luaL_optinteger(L, 1, 0);\n        if (lua_toboolean(L, 2))\n            lua_close(L);\n        if (L) process.exit(status);  /* 'if' to avoid warnings for unreachable 'return' */\n        return 0;\n    };\n\n    syslib.getenv = function(L) {\n        let key = luaL_checkstring(L, 1);\n        key = to_jsstring(key); /* https://github.com/nodejs/node/issues/16961 */\n        if (Object.prototype.hasOwnProperty.call(process.env, key)) {\n            lua_pushliteral(L, process.env[key]);\n        } else {\n            lua_pushnil(L);\n        }\n        return 1;\n    };\n\n    syslib.clock = function(L) {\n        lua_pushnumber(L, process.uptime());\n        return 1;\n    };\n\n    const lua_tmpname = function() {\n        return tmp.tmpNameSync();\n    };\n\n    syslib.remove = function(L) {\n        let filename = luaL_checkstring(L, 1);\n        try {\n            fs.unlinkSync(filename);\n        } catch (e) {\n            if (e.code === 'EISDIR') {\n                try {\n                    fs.rmdirSync(filename);\n                } catch (e) {\n                    return luaL_fileresult(L, false, filename, e);\n                }\n            } else {\n                return luaL_fileresult(L, false, filename, e);\n            }\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.rename = function(L) {\n        let fromname = luaL_checkstring(L, 1);\n        let toname = luaL_checkstring(L, 2);\n        try {\n            fs.renameSync(fromname, toname);\n        } catch (e) {\n            return luaL_fileresult(L, false, false, e);\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.tmpname = function(L) {\n        let name = lua_tmpname();\n        if (!name)\n            return luaL_error(L, to_luastring(\"unable to generate a unique filename\"));\n        lua_pushstring(L, to_luastring(name));\n        return 1;\n    };\n\n    syslib.execute = function(L) {\n        let cmd = luaL_optstring(L, 1, null);\n        if (cmd !== null) {\n            try {\n                child_process.execSync(\n                    cmd,\n                    {\n                        stdio: [process.stdin, process.stdout, process.stderr]\n                    }\n                );\n            } catch (e) {\n                return luaL_execresult(L, e);\n            }\n\n            return luaL_execresult(L, null);\n        } else {\n            /* Assume a shell is available.\n               If it's good enough for musl it's good enough for us.\n               http://git.musl-libc.org/cgit/musl/tree/src/process/system.c?id=ac45692a53a1b8d2ede329d91652d43c1fb5dc8d#n22\n            */\n            lua_pushboolean(L, 1);\n            return 1;\n        }\n    };\n}\n\nconst luaopen_os = function(L) {\n    luaL_newlib(L, syslib);\n    return 1;\n};\n\nmodule.exports.luaopen_os = luaopen_os;\n","\"use strict\";\n\nconst { sprintf } = require('sprintf-js');\n\nconst {\n    LUA_INTEGER_FMT,\n    LUA_INTEGER_FRMLEN,\n    LUA_MININTEGER,\n    LUA_NUMBER_FMT,\n    LUA_NUMBER_FRMLEN,\n    frexp,\n    lua_getlocaledecpoint\n} = require('./luaconf.js');\nconst {\n    LUA_TBOOLEAN,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    lua_call,\n    lua_createtable,\n    lua_dump,\n    lua_gettable,\n    lua_gettop,\n    lua_isinteger,\n    lua_isstring,\n    lua_pop,\n    lua_pushcclosure,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tonumber,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addlstring,\n    luaL_addsize,\n    luaL_addstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_buffinitsize,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_prepbuffsize,\n    luaL_pushresult,\n    luaL_pushresultsize,\n    luaL_tolstring,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_eq,\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst sL_ESC  = '%';\nconst L_ESC   = sL_ESC.charCodeAt(0);\n\n/*\n** maximum number of captures that a pattern can do during\n** pattern-matching. This limit is arbitrary, but must fit in\n** an unsigned char.\n*/\nconst LUA_MAXCAPTURES = 32;\n\n// (sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))\nconst MAXSIZE = 2147483647;\n\n/* Give natural (i.e. strings end at the first \\0) length of a string represented by an array of bytes */\nconst strlen = function(s) {\n    let len = luastring_indexOf(s, 0);\n    return len > -1 ? len : s.length;\n};\n\n/* translate a relative string position: negative means back from end */\nconst posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\nconst str_sub = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let start = posrelat(luaL_checkinteger(L, 2), l);\n    let end = posrelat(luaL_optinteger(L, 3, -1), l);\n    if (start < 1) start = 1;\n    if (end > l) end = l;\n    if (start <= end)\n        lua_pushstring(L, s.subarray(start - 1, (start - 1) + (end - start + 1)));\n    else lua_pushliteral(L, \"\");\n    return 1;\n};\n\nconst str_len = function(L) {\n    lua_pushinteger(L, luaL_checkstring(L, 1).length);\n    return 1;\n};\n\nconst str_char = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let b = new luaL_Buffer();\n    let p = luaL_buffinitsize(L, b, n);\n    for (let i = 1; i <= n; i++) {\n        let c = luaL_checkinteger(L, i);\n        luaL_argcheck(L, c >= 0 && c <= 255, \"value out of range\"); // Strings are 8-bit clean\n        p[i-1] = c;\n    }\n    luaL_pushresultsize(b, n);\n    return 1;\n};\n\nconst writer = function(L, b, size, B) {\n    luaL_addlstring(B, b, size);\n    return 0;\n};\n\nconst str_dump = function(L) {\n    let b = new luaL_Buffer();\n    let strip = lua_toboolean(L, 2);\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    lua_settop(L, 1);\n    luaL_buffinit(L, b);\n    if (lua_dump(L, writer, b, strip) !== 0)\n        return luaL_error(L, to_luastring(\"unable to dump given function\"));\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst SIZELENMOD = LUA_NUMBER_FRMLEN.length + 1;\n\nconst L_NBFD = 1;\n\nconst num2straux = function(x) {\n    /* if 'inf' or 'NaN', format it like '%g' */\n    if (Object.is(x, Infinity))\n        return to_luastring('inf');\n    else if (Object.is(x, -Infinity))\n        return to_luastring('-inf');\n    else if (Number.isNaN(x))\n        return to_luastring('nan');\n    else if (x === 0) {  /* can be -0... */\n        /* create \"0\" or \"-0\" followed by exponent */\n        let zero = sprintf(LUA_NUMBER_FMT + \"x0p+0\", x);\n        if (Object.is(x, -0))\n            zero = \"-\" + zero;\n        return to_luastring(zero);\n    } else {\n        let buff = \"\";\n        let fe = frexp(x);  /* 'x' fraction and exponent */\n        let m = fe[0];\n        let e = fe[1];\n        if (m < 0) {  /* is number negative? */\n            buff += '-';  /* add signal */\n            m = -m;  /* make it positive */\n        }\n        buff += \"0x\";  /* add \"0x\" */\n        buff += (m * (1<<L_NBFD)).toString(16);\n        e -= L_NBFD;  /* this digit goes before the radix point */\n        buff += sprintf(\"p%+d\", e);  /* add exponent */\n        return to_luastring(buff);\n    }\n};\n\nconst lua_number2strx = function(L, fmt, x) {\n    let buff = num2straux(x);\n    if (fmt[SIZELENMOD] === 65 /* 'A'.charCodeAt(0) */) {\n        for (let i = 0; i < buff.length; i++) {\n            let c = buff[i];\n            if (c >= 97) /* toupper */\n                buff[i] = c & 0xdf;\n        }\n    } else if (fmt[SIZELENMOD] !== 97 /* 'a'.charCodeAt(0) */)\n        luaL_error(L, to_luastring(\"modifiers for format '%%a'/'%%A' not implemented\"));\n    return buff;\n};\n\n/*\n** Maximum size of each formatted item. This maximum size is produced\n** by format('%.99f', -maxfloat), and is equal to 99 + 3 ('-', '.',\n** and '\\0') + number of decimal digits to represent maxfloat (which\n** is maximum exponent + 1). (99+3+1 then rounded to 120 for \"extra\n** expenses\", such as locale-dependent stuff)\n*/\n// const MAX_ITEM   = 120;// TODO: + l_mathlim(MAX_10_EXP);\n\n\n/* valid flags in a format specification */\nconst FLAGS = to_luastring(\"-+ #0\");\n\n/*\n** maximum size of each format specification (such as \"%-099.99d\")\n*/\n// const MAX_FORMAT = 32;\n\nconst isalpha = e => (97 <= e && e <= 122) || (65 <= e && e <= 90);\nconst isdigit = e => 48 <= e && e <= 57;\nconst iscntrl = e => (0x00 <= e && e <= 0x1f) || e === 0x7f;\nconst isgraph = e => 33 <= e && e <= 126;\nconst islower = e => 97 <= e && e <= 122;\nconst isupper = e => 65 <= e && e <= 90;\nconst isalnum = e => (97 <= e && e <= 122) || (65 <= e && e <= 90) || (48 <= e && e <= 57);\nconst ispunct = e => isgraph(e) && !isalnum(e);\nconst isspace = e => e === 32 || (e >= 9 && e <= 13);\nconst isxdigit = e => (48 <= e && e <= 57) || (65 <= e && e <= 70) || (97 <= e && e <= 102);\n\nconst addquoted = function(b, s, len) {\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n    let i = 0;\n    while (len--) {\n        if (s[i] === 34 /* '\"'.charCodeAt(0) */ ||\n            s[i] === 92 /* '\\\\'.charCodeAt(0) */ ||\n            s[i] === 10 /* '\\n'.charCodeAt(0) */) {\n            luaL_addchar(b, 92 /* '\\\\'.charCodeAt(0) */);\n            luaL_addchar(b, s[i]);\n        } else if (iscntrl(s[i])) {\n            let buff = ''+s[i];\n            if (isdigit(s[i+1]))\n                buff = '0'.repeat(3-buff.length) + buff; /* pad to 3 '0's */\n            luaL_addstring(b, to_luastring(\"\\\\\" + buff));\n        } else\n            luaL_addchar(b, s[i]);\n        i++;\n    }\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n};\n\n/*\n** Ensures the 'buff' string uses a dot as the radix character.\n*/\nconst checkdp = function(buff) {\n    if (luastring_indexOf(buff, 46 /* ('.').charCodeAt(0) */) < 0) {  /* no dot? */\n        let point = lua_getlocaledecpoint();  /* try locale point */\n        let ppoint = luastring_indexOf(buff, point);\n        if (ppoint) buff[ppoint] = 46 /* ('.').charCodeAt(0) */;  /* change it to a dot */\n    }\n};\n\nconst addliteral = function(L, b, arg) {\n    switch(lua_type(L, arg)) {\n        case LUA_TSTRING: {\n            let s = lua_tostring(L, arg);\n            addquoted(b, s, s.length);\n            break;\n        }\n        case LUA_TNUMBER: {\n            let buff;\n            if (!lua_isinteger(L, arg)) {  /* float? */\n                let n = lua_tonumber(L, arg);  /* write as hexa ('%a') */\n                buff = lua_number2strx(L, to_luastring(`%${LUA_INTEGER_FRMLEN}a`), n);\n                checkdp(buff);  /* ensure it uses a dot */\n            } else {  /* integers */\n                let n = lua_tointeger(L, arg);\n                let format = (n === LUA_MININTEGER)  /* corner case? */\n                    ? \"0x%\" + LUA_INTEGER_FRMLEN + \"x\"  /* use hexa */\n                    : LUA_INTEGER_FMT;  /* else use default format */\n                buff = to_luastring(sprintf(format, n));\n            }\n            luaL_addstring(b, buff);\n            break;\n        }\n        case LUA_TNIL: case LUA_TBOOLEAN: {\n            luaL_tolstring(L, arg);\n            luaL_addvalue(b);\n            break;\n        }\n        default: {\n            luaL_argerror(L, arg, to_luastring(\"value has no literal form\"));\n        }\n    }\n};\n\nconst scanformat = function(L, strfrmt, i, form) {\n    let p = i;\n    while (strfrmt[p] !== 0 && luastring_indexOf(FLAGS, strfrmt[p]) >= 0) p++;  /* skip flags */\n    if (p - i >= FLAGS.length)\n        luaL_error(L, to_luastring(\"invalid format (repeated flags)\"));\n    if (isdigit(strfrmt[p])) p++;  /* skip width */\n    if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    if (strfrmt[p] === 46 /* '.'.charCodeAt(0) */) {\n        p++;\n        if (isdigit(strfrmt[p])) p++;  /* skip precision */\n        if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    }\n    if (isdigit(strfrmt[p]))\n        luaL_error(L, to_luastring(\"invalid format (width or precision too long)\"));\n    form[0] = 37 /* \"%\".charCodeAt(0) */;\n    for (let j = 0; j < p - i + 1; j++)\n        form[j+1] = strfrmt[i+j];\n    return p;\n};\n\n/*\n** add length modifier into formats\n*/\nconst addlenmod = function(form, lenmod) {\n    let l = form.length;\n    let lm = lenmod.length;\n    let spec = form[l - 1];\n    for (let i = 0; i < lm; i++)\n        form[i + l - 1] = lenmod[i];\n    form[l + lm - 1] = spec;\n    // form[l + lm] = 0;\n};\n\nconst str_format = function(L) {\n    let top = lua_gettop(L);\n    let arg = 1;\n    let strfrmt = luaL_checkstring(L, arg);\n    let i = 0;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while (i < strfrmt.length) {\n        if (strfrmt[i] !== L_ESC) {\n            luaL_addchar(b, strfrmt[i++]);\n        } else if (strfrmt[++i] === L_ESC) {\n            luaL_addchar(b, strfrmt[i++]); /* %% */\n        } else { /* format item */\n            let form = [];  /* to store the format ('%...') */\n            if (++arg > top)\n                luaL_argerror(L, arg, to_luastring(\"no value\"));\n            i = scanformat(L, strfrmt, i, form);\n            switch (String.fromCharCode(strfrmt[i++])) {\n                case 'c': {\n                    // sprintf(String.fromCharCode(...form), luaL_checkinteger(L, arg));\n                    luaL_addchar(b, luaL_checkinteger(L, arg));\n                    break;\n                }\n                case 'd': case 'i':\n                case 'o': case 'u': case 'x': case 'X': {\n                    let n = luaL_checkinteger(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'a': case 'A': {\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, lua_number2strx(L, form, luaL_checknumber(L, arg)));\n                    break;\n                }\n                case 'e': case 'E': case 'f':\n                case 'g': case 'G': {\n                    let n = luaL_checknumber(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'q': {\n                    addliteral(L, b, arg);\n                    break;\n                }\n                case 's': {\n                    let s = luaL_tolstring(L, arg);\n                    if (form.length <= 2 || form[2] === 0) {  /* no modifiers? */\n                        luaL_addvalue(b);  /* keep entire string */\n                    } else {\n                        luaL_argcheck(L, s.length === strlen(s), arg, \"string contains zeros\");\n                        if (luastring_indexOf(form, 46 /* '.'.charCodeAt(0) */) < 0 && s.length >= 100) {\n                            /* no precision and string is too long to be formatted */\n                            luaL_addvalue(b);  /* keep entire string */\n                        } else {  /* format the string into 'buff' */\n                            // TODO: will fail if s is not valid UTF-8\n                            luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), to_jsstring(s))));\n                            lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */\n                        }\n                    }\n                    break;\n                }\n                default: {  /* also treat cases 'pnLlh' */\n                    return luaL_error(L, to_luastring(\"invalid option '%%%c' to 'format'\"), strfrmt[i-1]);\n                }\n            }\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\n/* value used for padding */\nconst LUAL_PACKPADBYTE = 0x00;\n\n/* maximum size for the binary representation of an integer */\nconst MAXINTSIZE = 16;\n\nconst SZINT = 4; // Size of lua_Integer\n\n/* number of bits in a character */\nconst NB = 8;\n\n/* mask for one character (NB 1's) */\nconst MC = ((1 << NB) - 1);\n\nconst MAXALIGN = 8;\n\n/*\n** information to pack/unpack stuff\n*/\nclass Header {\n    constructor(L) {\n        this.L = L;\n        this.islittle = true;\n        this.maxalign = 1;\n    }\n}\n\n/*\n** options for pack/unpack\n*/\nconst Kint       = 0; /* signed integers */\nconst Kuint      = 1; /* unsigned integers */\nconst Kfloat     = 2; /* floating-point numbers */\nconst Kchar      = 3; /* fixed-length strings */\nconst Kstring    = 4; /* strings with prefixed length */\nconst Kzstr      = 5; /* zero-terminated strings */\nconst Kpadding   = 6; /* padding */\nconst Kpaddalign = 7; /* padding for alignment */\nconst Knop       = 8; /* no-op (configuration or spaces) */\n\nconst digit = isdigit;\n\nconst getnum = function(fmt, df) {\n    if (fmt.off >= fmt.s.length || !digit(fmt.s[fmt.off]))  /* no number? */\n        return df;  /* return default value */\n    else {\n        let a = 0;\n        do {\n            a = a * 10 + (fmt.s[fmt.off++] - 48 /* '0'.charCodeAt(0) */);\n        } while (fmt.off < fmt.s.length && digit(fmt.s[fmt.off]) && a <= (MAXSIZE - 9)/10);\n        return a;\n    }\n};\n\n/*\n** Read an integer numeral and raises an error if it is larger\n** than the maximum size for integers.\n*/\nconst getnumlimit = function(h, fmt, df) {\n    let sz = getnum(fmt, df);\n    if (sz > MAXINTSIZE || sz <= 0)\n        luaL_error(h.L, to_luastring(\"integral size (%d) out of limits [1,%d]\"), sz, MAXINTSIZE);\n    return sz;\n};\n\n/*\n** Read and classify next option. 'size' is filled with option's size.\n*/\nconst getoption = function(h, fmt) {\n    let r = {\n        opt: fmt.s[fmt.off++],\n        size: 0  /* default */\n    };\n    switch (r.opt) {\n        case 98  /*'b'*/: r.size = 1; r.opt = Kint;   return r; // sizeof(char): 1\n        case 66  /*'B'*/: r.size = 1; r.opt = Kuint;  return r;\n        case 104 /*'h'*/: r.size = 2; r.opt = Kint;   return r; // sizeof(short): 2\n        case 72  /*'H'*/: r.size = 2; r.opt = Kuint;  return r;\n        case 108 /*'l'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(long): 4\n        case 76  /*'L'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 106 /*'j'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(lua_Integer): 4\n        case 74  /*'J'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 84  /*'T'*/: r.size = 4; r.opt = Kuint;  return r; // sizeof(size_t): 4\n        case 102 /*'f'*/: r.size = 4; r.opt = Kfloat; return r; // sizeof(float): 4\n        case 100 /*'d'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(double): 8\n        case 110 /*'n'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(lua_Number): 8\n        case 105 /*'i'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kint;    return r; // sizeof(int): 4\n        case 73  /*'I'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kuint;   return r;\n        case 115 /*'s'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kstring; return r;\n        case 99  /*'c'*/: {\n            r.size = getnum(fmt, -1);\n            if (r.size === -1)\n                luaL_error(h.L, to_luastring(\"missing size for format option 'c'\"));\n            r.opt = Kchar;\n            return r;\n        }\n        case 122 /*'z'*/:             r.opt = Kzstr;      return r;\n        case 120 /*'x'*/: r.size = 1; r.opt = Kpadding;   return r;\n        case 88  /*'X'*/:             r.opt = Kpaddalign; return r;\n        case 32  /*' '*/: break;\n        case 60  /*'<'*/: h.islittle = true; break;\n        case 62  /*'>'*/: h.islittle = false; break;\n        case 61  /*'='*/: h.islittle = true; break;\n        case 33  /*'!'*/: h.maxalign = getnumlimit(h, fmt, MAXALIGN); break;\n        default: luaL_error(h.L, to_luastring(\"invalid format option '%c'\"), r.opt);\n    }\n    r.opt = Knop;\n    return r;\n};\n\n/*\n** Read, classify, and fill other details about the next option.\n** 'psize' is filled with option's size, 'notoalign' with its\n** alignment requirements.\n** Local variable 'size' gets the size to be aligned. (Kpadal option\n** always gets its full alignment, other options are limited by\n** the maximum alignment ('maxalign'). Kchar option needs no alignment\n** despite its size.\n*/\nconst getdetails = function(h, totalsize, fmt) {\n    let r = {\n        opt: NaN,\n        size: NaN,\n        ntoalign: NaN\n    };\n\n    let opt = getoption(h, fmt);\n    r.size = opt.size;\n    r.opt = opt.opt;\n    let align = r.size;  /* usually, alignment follows size */\n    if (r.opt === Kpaddalign) {  /* 'X' gets alignment from following option */\n        if (fmt.off >= fmt.s.length || fmt.s[fmt.off] === 0)\n            luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        else {\n            let o = getoption(h, fmt);\n            align = o.size;\n            o = o.opt;\n            if (o === Kchar || align === 0)\n                luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        }\n    }\n    if (align <= 1 || r.opt === Kchar)  /* need no alignment? */\n        r.ntoalign = 0;\n    else {\n        if (align > h.maxalign)  /* enforce maximum alignment */\n            align = h.maxalign;\n        if ((align & (align -1)) !== 0)  /* is 'align' not a power of 2? */\n            luaL_argerror(h.L, 1, to_luastring(\"format asks for alignment not power of 2\"));\n        r.ntoalign = (align - (totalsize & (align - 1))) & (align - 1);\n    }\n    return r;\n};\n\n/*\n** Pack integer 'n' with 'size' bytes and 'islittle' endianness.\n** The final 'if' handles the case when 'size' is larger than\n** the size of a Lua integer, correcting the extra sign-extension\n** bytes if necessary (by default they would be zeros).\n*/\nconst packint = function(b, n, islittle, size, neg) {\n    let buff = luaL_prepbuffsize(b, size);\n    buff[islittle ? 0 : size - 1] = n & MC;  /* first byte */\n    for (let i = 1; i < size; i++) {\n        n >>= NB;\n        buff[islittle ? i : size - 1 - i] = n & MC;\n    }\n    if (neg && size > SZINT) {  /* negative number need sign extension? */\n        for (let i = SZINT; i < size; i++)  /* correct extra bytes */\n            buff[islittle ? i : size - 1 - i] = MC;\n    }\n    luaL_addsize(b, size);  /* add result to buffer */\n};\n\nconst str_pack = function(L) {\n    let b = new luaL_Buffer();\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),  /* format string */\n        off: 0\n    };\n    let arg = 1;  /* current argument to pack */\n    let totalsize = 0;  /* accumulate total size of result */\n    lua_pushnil(L);  /* mark to separate arguments from string buffer */\n    luaL_buffinit(L, b);\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        totalsize += ntoalign + size;\n        while (ntoalign-- > 0)\n            luaL_addchar(b, LUAL_PACKPADBYTE);  /* fill alignment */\n        arg++;\n        switch (opt) {\n            case Kint: {  /* signed integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT) {  /* need overflow check? */\n                    let lim = 1 << (size * 8) - 1;\n                    luaL_argcheck(L, -lim <= n && n < lim, arg, \"integer overflow\");\n                }\n                packint(b, n, h.islittle, size, n < 0);\n                break;\n            }\n            case Kuint: {  /* unsigned integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT)\n                    luaL_argcheck(L, (n>>>0) < (1 << (size * NB)), arg, \"unsigned overflow\");\n                packint(b, n>>>0, h.islittle, size, false);\n                break;\n            }\n            case Kfloat: {  /* floating-point options */\n                let buff = luaL_prepbuffsize(b, size);\n                let n = luaL_checknumber(L, arg);  /* get argument */\n                let dv = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n                if (size === 4) dv.setFloat32(0, n, h.islittle);\n                else dv.setFloat64(0, n, h.islittle);\n                luaL_addsize(b, size);\n                break;\n            }\n            case Kchar: {  /* fixed-size string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, len <= size, arg, \"string longer than given size\");\n                luaL_addlstring(b, s, len);  /* add string */\n                while (len++ < size)  /* pad extra space */\n                    luaL_addchar(b, LUAL_PACKPADBYTE);\n                break;\n            }\n            case Kstring: {  /* strings with length count */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L,\n                    size >= 4 /* sizeof(size_t) */ || len < (1 << (size * NB)),\n                    arg, \"string length does not fit in given size\");\n                packint(b, len, h.islittle, size, 0);  /* pack length */\n                luaL_addlstring(b, s, len);\n                totalsize += len;\n                break;\n            }\n            case Kzstr: {  /* zero-terminated string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, luastring_indexOf(s, 0) < 0, arg, \"strings contains zeros\");\n                luaL_addlstring(b, s, len);\n                luaL_addchar(b, 0);  /* add zero at the end */\n                totalsize += len + 1;\n                break;\n            }\n            case Kpadding: luaL_addchar(b, LUAL_PACKPADBYTE); /* fall through */\n            case Kpaddalign: case Knop:\n                arg--;  /* undo increment */\n                break;\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst str_reverse = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++)\n        r[i] = s[l-1-i];\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_lower = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (isupper(c))\n            c = c | 0x20;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_upper = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (islower(c))\n            c = c & 0xdf;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_rep = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let n = luaL_checkinteger(L, 2);\n    let sep = luaL_optstring(L, 3, \"\");\n    let lsep = sep.length;\n    if (n <= 0) lua_pushliteral(L, \"\");\n    else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */\n        return luaL_error(L, to_luastring(\"resulting string too large\"));\n    else {\n        let totallen = n * l + (n - 1) * lsep;\n        let b = new luaL_Buffer();\n        let p = luaL_buffinitsize(L, b, totallen);\n        let pi = 0;\n        while (n-- > 1) {  /* first n-1 copies (followed by separator) */\n            p.set(s, pi);\n            pi += l;\n            if (lsep > 0) {  /* empty 'memcpy' is not that cheap */\n                p.set(sep, pi);\n                pi += lsep;\n            }\n        }\n        p.set(s, pi);  /* last copy (not followed by separator) */\n        luaL_pushresultsize(b, totallen);\n    }\n    return 1;\n};\n\nconst str_byte = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let posi = posrelat(luaL_optinteger(L, 2, 1), l);\n    let pose = posrelat(luaL_optinteger(L, 3, posi), l);\n\n    if (posi < 1) posi = 1;\n    if (pose > l) pose = l;\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)  /* arithmetic overflow? */\n        return luaL_error(L, \"string slice too long\");\n\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    for (let i = 0; i < n; i++)\n        lua_pushinteger(L, s[posi + i - 1]);\n    return n;\n};\n\nconst str_packsize = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let totalsize = 0;  /* accumulate total size of result */\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        size += ntoalign;  /* total space used by option */\n        luaL_argcheck(L, totalsize <= MAXSIZE - size, 1, \"format result too large\");\n        totalsize += size;\n        switch (opt) {\n            case Kstring:  /* strings with length count */\n            case Kzstr:    /* zero-terminated string */\n                luaL_argerror(L, 1, \"variable-length format\");\n                /* call never return, but to avoid warnings: *//* fall through */\n            default:  break;\n        }\n    }\n    lua_pushinteger(L, totalsize);\n    return 1;\n};\n\n/*\n** Unpack an integer with 'size' bytes and 'islittle' endianness.\n** If size is smaller than the size of a Lua integer and integer\n** is signed, must do sign extension (propagating the sign to the\n** higher bits); if size is larger than the size of a Lua integer,\n** it must check the unread bytes to see whether they do not cause an\n** overflow.\n*/\nconst unpackint = function(L, str, islittle, size, issigned) {\n    let res = 0;\n    let limit = size <= SZINT ? size : SZINT;\n    for (let i = limit - 1; i >= 0; i--) {\n        res <<= NB;\n        res |= str[islittle ? i : size - 1 - i];\n    }\n    if (size < SZINT) {  /* real size smaller than lua_Integer? */\n        if (issigned) {  /* needs sign extension? */\n            let mask = 1 << (size * NB - 1);\n            res = ((res ^ mask) - mask);  /* do sign extension */\n        }\n    } else if (size > SZINT) {  /* must check unread bytes */\n        let mask = !issigned || res >= 0 ? 0 : MC;\n        for (let i = limit; i < size; i++) {\n            if (str[islittle ? i : size - 1 - i] !== mask)\n                luaL_error(L, to_luastring(\"%d-byte integer does not fit into Lua Integer\"), size);\n        }\n    }\n    return res;\n};\n\nconst unpacknum = function(L, b, islittle, size) {\n    lualib.lua_assert(b.length >= size);\n\n    let dv = new DataView(new ArrayBuffer(size));\n    for (let i = 0; i < size; i++)\n        dv.setUint8(i, b[i], islittle);\n\n    if (size == 4) return dv.getFloat32(0, islittle);\n    else return dv.getFloat64(0, islittle);\n};\n\nconst str_unpack = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let data = luaL_checkstring(L, 2);\n    let ld = data.length;\n    let pos = posrelat(luaL_optinteger(L, 3, 1), ld) - 1;\n    let n = 0;  /* number of results */\n    luaL_argcheck(L, pos <= ld && pos >= 0, 3, \"initial position out of string\");\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, pos, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        if (/*ntoalign + size > ~pos ||*/ pos + ntoalign + size > ld)\n            luaL_argerror(L, 2, to_luastring(\"data string too short\"));\n        pos += ntoalign;  /* skip alignment */\n        /* stack space for item + next position */\n        luaL_checkstack(L, 2, \"too many results\");\n        n++;\n        switch (opt) {\n            case Kint:\n            case Kuint: {\n                let res = unpackint(L, data.subarray(pos), h.islittle, size, opt === Kint);\n                lua_pushinteger(L, res);\n                break;\n            }\n            case Kfloat: {\n                let res = unpacknum(L, data.subarray(pos), h.islittle, size);\n                lua_pushnumber(L, res);\n                break;\n            }\n            case Kchar: {\n                lua_pushstring(L, data.subarray(pos, pos + size));\n                break;\n            }\n            case Kstring: {\n                let len = unpackint(L, data.subarray(pos), h.islittle, size, 0);\n                luaL_argcheck(L, pos + len + size <= ld, 2, \"data string too short\");\n                lua_pushstring(L, data.subarray(pos + size, pos + size + len));\n                pos += len;  /* skip string */\n                break;\n            }\n            case Kzstr: {\n                let e = luastring_indexOf(data, 0, pos);\n                if (e === -1) e = data.length - pos;\n                lua_pushstring(L, data.subarray(pos, e));\n                pos = e + 1;  /* skip string plus final '\\0' */\n                break;\n            }\n            case Kpaddalign: case Kpadding: case Knop:\n                n--;  /* undo increment */\n                break;\n        }\n        pos += size;\n    }\n    lua_pushinteger(L, pos + 1);  /* next position */\n    return n + 1;\n};\n\nconst CAP_UNFINISHED = -1;\nconst CAP_POSITION   = -2;\nconst MAXCCALLS      = 200;\nconst SPECIALS       = to_luastring(\"^$*+?.([%-\");\n\nclass MatchState {\n    constructor(L) {\n        this.src = null;  /* unmodified source string */\n        this.src_init = null;  /* init of source string */\n        this.src_end = null;  /* end ('\\0') of source string */\n        this.p = null;  /* unmodified pattern string */\n        this.p_end = null;  /* end ('\\0') of pattern */\n        this.L = L;\n        this.matchdepth = NaN;  /* control for recursive depth */\n        this.level = NaN;  /* total number of captures (finished or unfinished) */\n        this.capture = [];\n    }\n}\n\nconst check_capture = function(ms, l) {\n    l = l - 49 /* '1'.charCodeAt(0) */;\n    if (l < 0 || l >= ms.level || ms.capture[l].len === CAP_UNFINISHED)\n        return luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), l + 1);\n    return l;\n};\n\nconst capture_to_close = function(ms) {\n    let level = ms.level;\n    for (level--; level >= 0; level--)\n        if (ms.capture[level].len === CAP_UNFINISHED) return level;\n    return luaL_error(ms.L, to_luastring(\"invalid pattern capture\"));\n};\n\nconst classend = function(ms, p) {\n    switch(ms.p[p++]) {\n        case L_ESC: {\n            if (p === ms.p_end)\n                luaL_error(ms.L, to_luastring(\"malformed pattern (ends with '%%')\"));\n            return p + 1;\n        }\n        case 91 /* '['.charCodeAt(0) */: {\n            if (ms.p[p] === 94 /* '^'.charCodeAt(0) */) p++;\n            do {  /* look for a ']' */\n                if (p === ms.p_end)\n                    luaL_error(ms.L, to_luastring(\"malformed pattern (missing ']')\"));\n                if (ms.p[p++] === L_ESC && p < ms.p_end)\n                    p++;  /* skip escapes (e.g. '%]') */\n            } while (ms.p[p] !== 93 /* ']'.charCodeAt(0) */);\n            return p + 1;\n        }\n        default: {\n            return p;\n        }\n    }\n};\n\nconst match_class = function(c, cl) {\n    switch (cl) {\n        case 97  /* 'a'.charCodeAt(0) */: return  isalpha(c);\n        case 65  /* 'A'.charCodeAt(0) */: return !isalpha(c);\n        case 99  /* 'c'.charCodeAt(0) */: return  iscntrl(c);\n        case 67  /* 'C'.charCodeAt(0) */: return !iscntrl(c);\n        case 100 /* 'd'.charCodeAt(0) */: return  isdigit(c);\n        case 68  /* 'D'.charCodeAt(0) */: return !isdigit(c);\n        case 103 /* 'g'.charCodeAt(0) */: return  isgraph(c);\n        case 71  /* 'G'.charCodeAt(0) */: return !isgraph(c);\n        case 108 /* 'l'.charCodeAt(0) */: return  islower(c);\n        case 76  /* 'L'.charCodeAt(0) */: return !islower(c);\n        case 112 /* 'p'.charCodeAt(0) */: return  ispunct(c);\n        case 80  /* 'P'.charCodeAt(0) */: return !ispunct(c);\n        case 115 /* 's'.charCodeAt(0) */: return  isspace(c);\n        case 83  /* 'S'.charCodeAt(0) */: return !isspace(c);\n        case 117 /* 'u'.charCodeAt(0) */: return  isupper(c);\n        case 85  /* 'U'.charCodeAt(0) */: return !isupper(c);\n        case 119 /* 'w'.charCodeAt(0) */: return  isalnum(c);\n        case 87  /* 'W'.charCodeAt(0) */: return !isalnum(c);\n        case 120 /* 'x'.charCodeAt(0) */: return  isxdigit(c);\n        case 88  /* 'X'.charCodeAt(0) */: return !isxdigit(c);\n        case 122 /* 'z'.charCodeAt(0) */: return (c === 0);  /* deprecated option */\n        case 90  /* 'z'.charCodeAt(0) */: return (c !== 0);  /* deprecated option */\n        default: return (cl === c);\n    }\n};\n\nconst matchbracketclass = function(ms, c, p, ec) {\n    let sig = true;\n    if (ms.p[p + 1] === 94 /* '^'.charCodeAt(0) */) {\n        sig = false;\n        p++;  /* skip the '^' */\n    }\n    while (++p < ec) {\n        if (ms.p[p] === L_ESC) {\n            p++;\n            if (match_class(c, ms.p[p]))\n                return sig;\n        } else if (ms.p[p + 1] === 45 /* '-'.charCodeAt(0) */ && p + 2 < ec) {\n            p += 2;\n            if (ms.p[p - 2] <= c && c <= ms.p[p])\n                return sig;\n        } else if (ms.p[p] === c) return sig;\n    }\n    return !sig;\n};\n\nconst singlematch = function(ms, s, p, ep) {\n    if (s >= ms.src_end)\n        return false;\n    else {\n        let c = ms.src[s];\n        switch (ms.p[p]) {\n            case 46 /* '.'.charCodeAt(0) */: return true;  /* matches any char */\n            case L_ESC: return match_class(c, ms.p[p + 1]);\n            case 91 /* '['.charCodeAt(0) */: return matchbracketclass(ms, c, p, ep - 1);\n            default: return ms.p[p] === c;\n        }\n    }\n};\n\nconst matchbalance = function(ms, s, p) {\n    if (p >= ms.p_end - 1)\n        luaL_error(ms.L, to_luastring(\"malformed pattern (missing arguments to '%%b'\"));\n    if (ms.src[s] !== ms.p[p])\n        return null;\n    else {\n        let b = ms.p[p];\n        let e = ms.p[p + 1];\n        let cont = 1;\n        while (++s < ms.src_end) {\n            if (ms.src[s] === e) {\n                if (--cont === 0) return s + 1;\n            }\n            else if (ms.src[s] === b) cont++;\n        }\n    }\n    return null;  /* string ends out of balance */\n};\n\nconst max_expand = function(ms, s, p, ep) {\n    let i = 0;  /* counts maximum expand for item */\n    while (singlematch(ms, s + i, p, ep))\n        i++;\n    /* keeps trying to match with the maximum repetitions */\n    while (i >= 0) {\n        let res = match(ms, s + i, ep + 1);\n        if (res) return res;\n        i--;  /* else didn't match; reduce 1 repetition to try again */\n    }\n    return null;\n};\n\nconst min_expand = function(ms, s, p, ep) {\n    for (;;) {\n        let res = match(ms, s, ep + 1);\n        if (res !== null)\n            return res;\n        else if (singlematch(ms, s, p, ep))\n            s++;  /* try with one more repetition */\n        else return null;\n    }\n};\n\nconst start_capture = function(ms, s, p, what) {\n    let level = ms.level;\n    if (level >= LUA_MAXCAPTURES) luaL_error(ms.L, to_luastring(\"too many captures\"));\n    ms.capture[level] = ms.capture[level] ? ms.capture[level] : {};\n    ms.capture[level].init = s;\n    ms.capture[level].len = what;\n    ms.level = level + 1;\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.level--;  /* undo capture */\n    return res;\n};\n\nconst end_capture = function(ms, s, p) {\n    let l = capture_to_close(ms);\n    ms.capture[l].len = s - ms.capture[l].init;  /* close capture */\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.capture[l].len = CAP_UNFINISHED;  /* undo capture */\n    return res;\n};\n\n/* Compare the elements of arrays 'a' and 'b' to see if they contain the same elements */\nconst array_cmp = function(a, ai, b, bi, len) {\n    return luastring_eq(a.subarray(ai, ai+len), b.subarray(bi, bi+len));\n};\n\nconst match_capture = function(ms, s, l) {\n    l = check_capture(ms, l);\n    let len = ms.capture[l].len;\n    if ((ms.src_end-s) >= len && array_cmp(ms.src, ms.capture[l].init, ms.src, s, len))\n        return s+len;\n    else return null;\n};\n\nconst match = function(ms, s, p) {\n    let gotodefault = false;\n    let gotoinit = true;\n\n    if (ms.matchdepth-- === 0)\n        luaL_error(ms.L, to_luastring(\"pattern too complex\"));\n\n    while (gotoinit || gotodefault) {\n        gotoinit = false;\n        if (p !== ms.p_end) {  /* end of pattern? */\n            switch (gotodefault ? void 0 : ms.p[p]) {\n                case 40 /* '('.charCodeAt(0) */: {  /* start capture */\n                    if (ms.p[p + 1] === 41 /* ')'.charCodeAt(0) */)  /* position capture? */\n                        s = start_capture(ms, s, p + 2, CAP_POSITION);\n                    else\n                        s = start_capture(ms, s, p + 1, CAP_UNFINISHED);\n                    break;\n                }\n                case 41 /* ')'.charCodeAt(0) */: {  /* end capture */\n                    s = end_capture(ms, s, p + 1);\n                    break;\n                }\n                case 36 /* '$'.charCodeAt(0) */: {\n                    if (p + 1 !== ms.p_end) {  /* is the '$' the last char in pattern? */\n                        gotodefault = true;  /* no; go to default */\n                        break;\n                    }\n                    s = (ms.src.length - s) === 0 ? s : null;  /* check end of string */\n                    break;\n                }\n                case L_ESC: {  /* escaped sequences not in the format class[*+?-]? */\n                    switch (ms.p[p + 1]) {\n                        case 98 /* 'b'.charCodeAt(0) */: {  /* balanced string? */\n                            s = matchbalance(ms, s, p + 2);\n                            if (s !== null) {\n                                p += 4;\n                                gotoinit = true;\n                            }\n                            break;\n                        }\n                        case 102 /* 'f'.charCodeAt(0) */: {  /* frontier? */\n                            p += 2;\n                            if (ms.p[p] !== 91 /* '['.charCodeAt(0) */)\n                                luaL_error(ms.L, to_luastring(\"missing '[' after '%%f' in pattern\"));\n                            let ep = classend(ms, p);  /* points to what is next */\n                            let previous = s === ms.src_init ? 0 : ms.src[s-1];\n                            if (!matchbracketclass(ms, previous, p, ep - 1) && matchbracketclass(ms, (s===ms.src_end)?0:ms.src[s], p, ep - 1)) {\n                                p = ep; gotoinit = true; break;\n                            }\n                            s = null;  /* match failed */\n                            break;\n                        }\n                        case 48: case 49: case 50: case 51: case 52:\n                        case 53: case 54: case 55: case 56: case 57: {  /* capture results (%0-%9)? */\n                            s = match_capture(ms, s, ms.p[p + 1]);\n                            if (s !== null) {\n                                p += 2; gotoinit = true;\n                            }\n                            break;\n                        }\n                        default: gotodefault = true;\n                    }\n                    break;\n                }\n                default: {  /* pattern class plus optional suffix */\n                    gotodefault = false;\n                    let ep = classend(ms, p);  /* points to optional suffix */\n                    /* does not match at least once? */\n                    if (!singlematch(ms, s, p, ep)) {\n                        if (ms.p[ep] === 42 /* '*'.charCodeAt(0) */ ||\n                            ms.p[ep] === 63 /* '?'.charCodeAt(0) */ ||\n                            ms.p[ep] === 45 /* '-'.charCodeAt(0) */\n                        ) {  /* accept empty? */\n                            p = ep + 1; gotoinit = true; break;\n                        } else  /* '+' or no suffix */\n                            s = null;  /* fail */\n                    } else {  /* matched once */\n                        switch (ms.p[ep]) {  /* handle optional suffix */\n                            case 63 /* '?'.charCodeAt(0) */: {  /* optional */\n                                let res;\n                                if ((res = match(ms, s + 1, ep + 1)) !== null)\n                                    s = res;\n                                else {\n                                    p = ep + 1; gotoinit = true;\n                                }\n                                break;\n                            }\n                            case 43 /* '+'.charCodeAt(0) */:  /* 1 or more repetitions */\n                                s++;  /* 1 match already done */\n                                /* fall through */\n                            case 42 /* '*'.charCodeAt(0) */:  /* 0 or more repetitions */\n                                s = max_expand(ms, s, p, ep);\n                                break;\n                            case 45 /* '-'.charCodeAt(0) */:  /* 0 or more repetitions (minimum) */\n                                s = min_expand(ms, s, p, ep);\n                                break;\n                            default:  /* no suffix */\n                                s++; p = ep; gotoinit = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    ms.matchdepth++;\n    return s;\n};\n\nconst push_onecapture = function(ms, i, s, e) {\n    if (i >= ms.level) {\n        if (i === 0)\n            lua_pushlstring(ms.L, ms.src.subarray(s, e), e - s);  /* add whole match */\n        else\n            luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), i + 1);\n    } else {\n        let l = ms.capture[i].len;\n        if (l === CAP_UNFINISHED) luaL_error(ms.L, to_luastring(\"unfinished capture\"));\n        if (l === CAP_POSITION)\n            lua_pushinteger(ms.L, ms.capture[i].init - ms.src_init + 1);\n        else\n            lua_pushlstring(ms.L, ms.src.subarray(ms.capture[i].init), l);\n    }\n};\n\nconst push_captures = function(ms, s, e) {\n    let nlevels = ms.level === 0 && ms.src.subarray(s) ? 1 : ms.level;\n    luaL_checkstack(ms.L, nlevels, \"too many captures\");\n    for (let i = 0; i < nlevels; i++)\n        push_onecapture(ms, i, s, e);\n    return nlevels;  /* number of strings pushed */\n};\n\nconst nospecials = function(p, l) {\n    for (let i=0; i<l; i++) {\n        if (luastring_indexOf(SPECIALS, p[i]) !== -1)\n            return false;\n    }\n    return true;\n};\n\nconst prepstate = function(ms, L, s, ls, p, lp) {\n    ms.L = L;\n    ms.matchdepth = MAXCCALLS;\n    ms.src = s;\n    ms.src_init = 0;\n    ms.src_end = ls;\n    ms.p = p;\n    ms.p_end = lp;\n};\n\nconst reprepstate = function(ms) {\n    ms.level = 0;\n    lualib.lua_assert(ms.matchdepth === MAXCCALLS);\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length;\n\n    if (sl === 0)\n        return i;\n\n    for (; (i = arr.indexOf(subarr[0], i)) !== -1; i++) {\n        if (luastring_eq(arr.subarray(i, i+sl), subarr))\n            return i;\n    }\n\n    return -1;\n};\n\nconst str_find_aux = function(L, find) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    let init = posrelat(luaL_optinteger(L, 3, 1), ls);\n    if (init < 1) init = 1;\n    else if (init > ls + 1) {  /* start after string's end? */\n        lua_pushnil(L);  /* cannot find anything */\n        return 1;\n    }\n    /* explicit request or no special characters? */\n    if (find && (lua_toboolean(L, 4) || nospecials(p, lp))) {\n        /* do a plain search */\n        let f = find_subarray(s.subarray(init - 1), p, 0);\n        if (f > -1) {\n            lua_pushinteger(L, init + f);\n            lua_pushinteger(L, init + f + lp - 1);\n            return 2;\n        }\n    } else {\n        let ms = new MatchState(L);\n        let s1 = init - 1;\n        let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n        if (anchor) {\n            p = p.subarray(1); lp--;  /* skip anchor character */\n        }\n        prepstate(ms, L, s, ls, p, lp);\n        do {\n            let res;\n            reprepstate(ms);\n            if ((res = match(ms, s1, 0)) !== null) {\n                if (find) {\n                    lua_pushinteger(L, s1 + 1);  /* start */\n                    lua_pushinteger(L, res);   /* end */\n                    return push_captures(ms, null, 0) + 2;\n                } else\n                    return push_captures(ms, s1, res);\n            }\n        } while (s1++ < ms.src_end && !anchor);\n    }\n    lua_pushnil(L);  /* not found */\n    return 1;\n};\n\nconst str_find = function(L) {\n    return str_find_aux(L, 1);\n};\n\nconst str_match = function(L) {\n    return str_find_aux(L, 0);\n};\n\n/* state for 'gmatch' */\nclass GMatchState {\n    constructor() {\n        this.src = NaN;  /* current position */\n        this.p = NaN;  /* pattern */\n        this.lastmatch = NaN;  /* end of last match */\n        this.ms = new MatchState();  /* match state */\n    }\n}\n\nconst gmatch_aux = function(L) {\n    let gm = lua_touserdata(L, lua_upvalueindex(3));\n    gm.ms.L = L;\n    for (let src = gm.src; src <= gm.ms.src_end; src++) {\n        reprepstate(gm.ms);\n        let e;\n        if ((e = match(gm.ms, src, gm.p)) !== null && e !== gm.lastmatch) {\n            gm.src = gm.lastmatch = e;\n            return push_captures(gm.ms, src, e);\n        }\n    }\n    return 0;  /* not found */\n};\n\nconst str_gmatch = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    lua_settop(L, 2);  /* keep them on closure to avoid being collected */\n    let gm = new GMatchState();\n    lua_pushlightuserdata(L, gm);\n    prepstate(gm.ms, L, s, ls, p, lp);\n    gm.src = 0;\n    gm.p = 0;\n    gm.lastmatch = null;\n    lua_pushcclosure(L, gmatch_aux, 3);\n    return 1;\n};\n\nconst add_s = function(ms, b, s, e) {\n    let L = ms.L;\n    let news = lua_tostring(L, 3);\n    let l = news.length;\n    for (let i = 0; i < l; i++) {\n        if (news[i] !== L_ESC)\n            luaL_addchar(b, news[i]);\n        else {\n            i++;  /* skip ESC */\n            if (!isdigit(news[i])) {\n                if (news[i] !== L_ESC)\n                    luaL_error(L, to_luastring(\"invalid use of '%c' in replacement string\"), L_ESC);\n                luaL_addchar(b, news[i]);\n            } else if (news[i] === 48 /* '0'.charCodeAt(0) */)\n                luaL_addlstring(b, ms.src.subarray(s, e), e - s);\n            else {\n                push_onecapture(ms, news[i] - 49 /* '1'.charCodeAt(0) */, s, e);\n                luaL_tolstring(L, -1);\n                lua_remove(L, -2);  /* remove original value */\n                luaL_addvalue(b);  /* add capture to accumulated result */\n            }\n        }\n    }\n};\n\nconst add_value = function(ms, b, s, e, tr) {\n    let L = ms.L;\n    switch (tr) {\n        case LUA_TFUNCTION: {\n            lua_pushvalue(L, 3);\n            let n = push_captures(ms, s, e);\n            lua_call(L, n, 1);\n            break;\n        }\n        case LUA_TTABLE: {\n            push_onecapture(ms, 0, s, e);\n            lua_gettable(L, 3);\n            break;\n        }\n        default: {  /* LUA_TNUMBER or LUA_TSTRING */\n            add_s(ms, b, s, e);\n            return;\n        }\n    }\n    if (!lua_toboolean(L, -1)) {  /* nil or false? */\n        lua_pop(L, 1);\n        lua_pushlstring(L, ms.src.subarray(s, e), e - s);  /* keep original text */\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid replacement value (a %s)\"), luaL_typename(L, -1));\n    luaL_addvalue(b);  /* add result to accumulator */\n};\n\nconst str_gsub = function(L) {\n    let src = luaL_checkstring(L, 1);  /* subject */\n    let srcl = src.length;\n    let p = luaL_checkstring(L, 2);  /* pattern */\n    let lp = p.length;\n    let lastmatch = null;  /* end of last match */\n    let tr = lua_type(L, 3);  /* replacement type */\n    let max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */\n    let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n    let n = 0;  /* replacement count */\n    let ms = new MatchState(L);\n    let b = new luaL_Buffer();\n    luaL_argcheck(L, tr === LUA_TNUMBER || tr === LUA_TSTRING || tr === LUA_TFUNCTION || tr === LUA_TTABLE, 3,\n        \"string/function/table expected\");\n    luaL_buffinit(L, b);\n    if (anchor) {\n        p = p.subarray(1); lp--;  /* skip anchor character */\n    }\n    prepstate(ms, L, src, srcl, p, lp);\n    src = 0; p = 0;\n    while (n < max_s) {\n        let e;\n        reprepstate(ms);\n        if ((e = match(ms, src, p)) !== null && e !== lastmatch) {  /* match? */\n            n++;\n            add_value(ms, b, src, e, tr);  /* add replacement to buffer */\n            src = lastmatch = e;\n        } else if (src < ms.src_end)  /* otherwise, skip one character */\n            luaL_addchar(b, ms.src[src++]);\n        else break;  /* end of subject */\n        if (anchor) break;\n    }\n    luaL_addlstring(b, ms.src.subarray(src, ms.src_end), ms.src_end - src);\n    luaL_pushresult(b);\n    lua_pushinteger(L, n);  /* number of substitutions */\n    return 2;\n};\n\nconst strlib = {\n    \"byte\":     str_byte,\n    \"char\":     str_char,\n    \"dump\":     str_dump,\n    \"find\":     str_find,\n    \"format\":   str_format,\n    \"gmatch\":   str_gmatch,\n    \"gsub\":     str_gsub,\n    \"len\":      str_len,\n    \"lower\":    str_lower,\n    \"match\":    str_match,\n    \"pack\":     str_pack,\n    \"packsize\": str_packsize,\n    \"rep\":      str_rep,\n    \"reverse\":  str_reverse,\n    \"sub\":      str_sub,\n    \"unpack\":   str_unpack,\n    \"upper\":    str_upper\n};\n\nconst createmetatable = function(L) {\n    lua_createtable(L, 0, 1);  /* table to be metatable for strings */\n    lua_pushliteral(L, \"\");  /* dummy string */\n    lua_pushvalue(L, -2);  /* copy table */\n    lua_setmetatable(L, -2);  /* set table as metatable for strings */\n    lua_pop(L, 1);  /* pop dummy string */\n    lua_pushvalue(L, -2);  /* get string library */\n    lua_setfield(L, -2, to_luastring(\"__index\", true));  /* metatable.__index = string */\n    lua_pop(L, 1);  /* pop metatable */\n};\n\nconst luaopen_string = function(L) {\n    luaL_newlib(L, strlib);\n    createmetatable(L);\n    return 1;\n};\n\nmodule.exports.luaopen_string = luaopen_string;\n","\"use strict\";\n\nconst {\n    lua_gettop,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_setfield,\n    lua_tointeger\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_of,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst MAXUNICODE = 0x10FFFF;\n\nconst iscont = function(p) {\n    let c = p & 0xC0;\n    return c === 0x80;\n};\n\n/* translate a relative string position: negative means back from end */\nconst u_posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\n/*\n** Decode one UTF-8 sequence, returning NULL if byte sequence is invalid.\n*/\nconst limits = [0xFF, 0x7F, 0x7FF, 0xFFFF];\nconst utf8_decode = function(s, pos) {\n    let c = s[pos];\n    let res = 0;  /* final result */\n    if (c < 0x80)  /* ascii? */\n        res = c;\n    else {\n        let count = 0;  /* to count number of continuation bytes */\n        while (c & 0x40) {  /* still have continuation bytes? */\n            let cc = s[pos + (++count)];  /* read next byte */\n            if ((cc & 0xC0) !== 0x80)  /* not a continuation byte? */\n                return null;  /* invalid byte sequence */\n            res = (res << 6) | (cc & 0x3F);  /* add lower 6 bits from cont. byte */\n            c <<= 1;  /* to test next bit */\n        }\n        res |= ((c & 0x7F) << (count * 5));  /* add first byte */\n        if (count > 3 || res > MAXUNICODE || res <= limits[count])\n            return null;  /* invalid byte sequence */\n        pos += count;  /* skip continuation bytes read */\n    }\n\n    return {\n        code: res,\n        pos: pos + 1\n    };\n};\n\n/*\n** utf8len(s [, i [, j]]) --> number of characters that start in the\n** range [i,j], or nil + current position if 's' is not well formed in\n** that interval\n*/\nconst utflen = function(L) {\n    let n = 0;\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), len);\n    let posj = u_posrelat(luaL_optinteger(L, 3, -1), len);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= len, 2, \"initial position out of string\");\n    luaL_argcheck(L, --posj < len, 3, \"final position out of string\");\n\n    while (posi <= posj) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null) { /* conversion error? */\n            lua_pushnil(L);  /* return nil ... */\n            lua_pushinteger(L, posi + 1);  /* ... and current position */\n            return 2;\n        }\n        posi = dec.pos;\n        n++;\n    }\n    lua_pushinteger(L, n);\n    return 1;\n};\n\nconst p_U = to_luastring(\"%U\");\nconst pushutfchar = function(L, arg) {\n    let code = luaL_checkinteger(L, arg);\n    luaL_argcheck(L, 0 <= code && code <= MAXUNICODE, arg, \"value out of range\");\n    lua_pushfstring(L, p_U, code);\n};\n\n/*\n** utfchar(n1, n2, ...)  -> char(n1)..char(n2)...\n*/\nconst utfchar = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    if (n === 1)  /* optimize common case of single char */\n        pushutfchar(L, 1);\n    else {\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        for (let i = 1; i <= n; i++) {\n            pushutfchar(L, i);\n            luaL_addvalue(b);\n        }\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\n/*\n** offset(s, n, [i])  -> index where n-th character counting from\n**   position 'i' starts; 0 means character at 'i'.\n*/\nconst byteoffset = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let n = luaL_checkinteger(L, 2);\n    let posi = n >= 0 ? 1 : s.length + 1;\n    posi = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= s.length, 3, \"position out of range\");\n\n    if (n === 0) {\n        /* find beginning of current byte sequence */\n        while (posi > 0 && iscont(s[posi])) posi--;\n    } else {\n        if (iscont(s[posi]))\n            luaL_error(L, \"initial position is a continuation byte\");\n\n        if (n < 0) {\n            while (n < 0 && posi > 0) {  /* move back */\n                do {  /* find beginning of previous character */\n                    posi--;\n                } while (posi > 0 && iscont(s[posi]));\n                n++;\n            }\n        } else {\n            n--;  /* do not move for 1st character */\n            while (n > 0 && posi < s.length) {\n                do {  /* find beginning of next character */\n                    posi++;\n                } while (iscont(s[posi]));  /* (cannot pass final '\\0') */\n                n--;\n            }\n        }\n    }\n\n    if (n === 0)  /* did it find given character? */\n        lua_pushinteger(L, posi + 1);\n    else  /* no such character */\n        lua_pushnil(L);\n\n    return 1;\n};\n\n/*\n** codepoint(s, [i, [j]])  -> returns codepoints for all characters\n** that start in the range [i,j]\n*/\nconst codepoint = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), s.length);\n    let pose = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, posi >= 1, 2, \"out of range\");\n    luaL_argcheck(L, pose <= s.length, 3, \"out of range\");\n\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)\n        return luaL_error(L, \"string slice too long\");\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    n = 0;\n    for (posi -= 1; posi < pose;) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null)\n            return luaL_error(L, \"invalid UTF-8 code\");\n        lua_pushinteger(L, dec.code);\n        posi = dec.pos;\n        n++;\n    }\n    return n;\n};\n\nconst iter_aux = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let n = lua_tointeger(L, 2) - 1;\n\n    if (n < 0)  /* first iteration? */\n        n = 0;  /* start from here */\n    else if (n < len) {\n        n++;  /* skip current byte */\n        while (iscont(s[n])) n++;  /* and its continuations */\n    }\n\n    if (n >= len)\n        return 0;  /* no more codepoints */\n    else {\n        let dec = utf8_decode(s, n);\n        if (dec === null || iscont(s[dec.pos]))\n            return luaL_error(L, to_luastring(\"invalid UTF-8 code\"));\n        lua_pushinteger(L, n + 1);\n        lua_pushinteger(L, dec.code);\n        return 2;\n    }\n};\n\nconst iter_codes = function(L) {\n    luaL_checkstring(L, 1);\n    lua_pushcfunction(L, iter_aux);\n    lua_pushvalue(L, 1);\n    lua_pushinteger(L, 0);\n    return 3;\n};\n\nconst funcs = {\n    \"char\":      utfchar,\n    \"codepoint\": codepoint,\n    \"codes\":     iter_codes,\n    \"len\":       utflen,\n    \"offset\":    byteoffset\n};\n\n/* pattern to match a single UTF-8 character */\nconst UTF8PATT = luastring_of(91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42);\n\nconst luaopen_utf8 = function(L) {\n    luaL_newlib(L, funcs);\n    lua_pushstring(L, UTF8PATT);\n    lua_setfield(L, -2, to_luastring(\"charpattern\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_utf8 = luaopen_utf8;\n","\"use strict\";\n\nconst {\n    LUA_OPLT,\n    LUA_TNUMBER,\n    lua_compare,\n    lua_gettop,\n    lua_isinteger,\n    lua_isnoneornil,\n    lua_pushboolean,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushvalue,\n    lua_setfield,\n    lua_settop,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_error,\n    luaL_newlib,\n    luaL_optnumber\n} = require('./lauxlib.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nlet rand_state;\n/* use same parameters as glibc LCG */\nconst l_rand = function() {\n    rand_state = (1103515245 * rand_state + 12345) & 0x7fffffff;\n    return rand_state;\n};\nconst l_srand = function(x) {\n    rand_state = x|0;\n    if (rand_state === 0)\n        rand_state = 1;\n};\n\nconst math_random = function(L) {\n    let low, up;\n    /* use Math.random until randomseed is called */\n    let r = (rand_state === void 0)?Math.random():(l_rand() / 0x80000000);\n    switch (lua_gettop(L)) {  /* check number of arguments */\n        case 0:\n            lua_pushnumber(L, r);  /* Number between 0 and 1 */\n            return 1;\n        case 1: {\n            low = 1;\n            up = luaL_checkinteger(L, 1);\n            break;\n        }\n        case 2: {\n            low = luaL_checkinteger(L, 1);\n            up = luaL_checkinteger(L, 2);\n            break;\n        }\n        default: return luaL_error(L, \"wrong number of arguments\");\n    }\n\n    /* random integer in the interval [low, up] */\n    luaL_argcheck(L, low <= up, 1, \"interval is empty\");\n    luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,\n        \"interval too large\");\n\n    r *= (up - low) + 1;\n    lua_pushinteger(L, Math.floor(r) + low);\n    return 1;\n};\n\nconst math_randomseed = function(L) {\n    l_srand(luaL_checknumber(L, 1));\n    l_rand(); /* discard first value to avoid undesirable correlations */\n    return 0;\n};\n\nconst math_abs = function(L) {\n    if (lua_isinteger(L, 1)) {\n        let n = lua_tointeger(L, 1);\n        if (n < 0) n = (-n)|0;\n        lua_pushinteger(L, n);\n    }\n    else\n        lua_pushnumber(L, Math.abs(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_sin = function(L) {\n    lua_pushnumber(L, Math.sin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_cos = function(L) {\n    lua_pushnumber(L, Math.cos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_tan = function(L) {\n    lua_pushnumber(L, Math.tan(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_asin = function(L) {\n    lua_pushnumber(L, Math.asin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_acos = function(L) {\n    lua_pushnumber(L, Math.acos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_atan = function(L) {\n    let y = luaL_checknumber(L, 1);\n    let x = luaL_optnumber(L, 2, 1);\n    lua_pushnumber(L, Math.atan2(y, x));\n    return 1;\n};\n\nconst math_toint = function(L) {\n    let n = lua_tointegerx(L, 1);\n    if (n !== false)\n        lua_pushinteger(L, n);\n    else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);  /* value is not convertible to integer */\n    }\n    return 1;\n};\n\nconst pushnumint = function(L, d) {\n    let n = lua_numbertointeger(d);\n    if (n !== false)  /* does 'd' fit in an integer? */\n        lua_pushinteger(L, n);  /* result is integer */\n    else\n        lua_pushnumber(L, d);  /* result is float */\n};\n\nconst math_floor = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.floor(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_ceil = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.ceil(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_sqrt = function(L) {\n    lua_pushnumber(L, Math.sqrt(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_ult = function(L) {\n    let a = luaL_checkinteger(L, 1);\n    let b = luaL_checkinteger(L, 2);\n    lua_pushboolean(L, (a >= 0)?(b<0 || a<b):(b<0 && a<b));\n    return 1;\n};\n\nconst math_log = function(L) {\n    let x = luaL_checknumber(L, 1);\n    let res;\n    if (lua_isnoneornil(L, 2))\n        res = Math.log(x);\n    else {\n        let base = luaL_checknumber(L, 2);\n        if (base === 2)\n            res = Math.log2(x);\n        else if (base === 10)\n            res = Math.log10(x);\n        else\n            res = Math.log(x)/Math.log(base);\n    }\n    lua_pushnumber(L, res);\n    return 1;\n};\n\nconst math_exp = function(L) {\n    lua_pushnumber(L, Math.exp(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_deg = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (180 / Math.PI));\n    return 1;\n};\n\nconst math_rad = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (Math.PI / 180));\n    return 1;\n};\n\nconst math_min = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imin = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, i, imin, LUA_OPLT))\n            imin = i;\n    }\n    lua_pushvalue(L, imin);\n    return 1;\n};\n\nconst math_max = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imax = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, imax, i, LUA_OPLT))\n            imax = i;\n    }\n    lua_pushvalue(L, imax);\n    return 1;\n};\n\nconst math_type = function(L) {\n    if (lua_type(L, 1) === LUA_TNUMBER) {\n        if (lua_isinteger(L, 1))\n            lua_pushliteral(L, \"integer\");\n        else\n            lua_pushliteral(L, \"float\");\n    } else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);\n    }\n    return 1;\n};\n\nconst math_fmod = function(L) {\n    if (lua_isinteger(L, 1) && lua_isinteger(L, 2)) {\n        let d = lua_tointeger(L, 2);\n        /* no special case needed for -1 in javascript */\n        if (d === 0) {\n            luaL_argerror(L, 2, \"zero\");\n        } else\n            lua_pushinteger(L, (lua_tointeger(L, 1) % d)|0);\n    } else {\n        let a = luaL_checknumber(L, 1);\n        let b = luaL_checknumber(L, 2);\n        lua_pushnumber(L, a%b);\n    }\n    return 1;\n};\n\nconst math_modf = function(L) {\n    if (lua_isinteger(L, 1)) {\n        lua_settop(L, 1);  /* number is its own integer part */\n        lua_pushnumber(L, 0);  /* no fractional part */\n    } else {\n        let n = luaL_checknumber(L, 1);\n        let ip = n < 0 ? Math.ceil(n) : Math.floor(n);\n        pushnumint(L, ip);\n        lua_pushnumber(L, n === ip ? 0 : n - ip);\n    }\n    return 2;\n};\n\nconst mathlib = {\n    \"abs\":        math_abs,\n    \"acos\":       math_acos,\n    \"asin\":       math_asin,\n    \"atan\":       math_atan,\n    \"ceil\":       math_ceil,\n    \"cos\":        math_cos,\n    \"deg\":        math_deg,\n    \"exp\":        math_exp,\n    \"floor\":      math_floor,\n    \"fmod\":       math_fmod,\n    \"log\":        math_log,\n    \"max\":        math_max,\n    \"min\":        math_min,\n    \"modf\":       math_modf,\n    \"rad\":        math_rad,\n    \"random\":     math_random,\n    \"randomseed\": math_randomseed,\n    \"sin\":        math_sin,\n    \"sqrt\":       math_sqrt,\n    \"tan\":        math_tan,\n    \"tointeger\":  math_toint,\n    \"type\":       math_type,\n    \"ult\":        math_ult\n};\n\nconst luaopen_math = function(L) {\n    luaL_newlib(L, mathlib);\n    lua_pushnumber(L, Math.PI);\n    lua_setfield(L, -2, to_luastring(\"pi\", true));\n    lua_pushnumber(L, Infinity);\n    lua_setfield(L, -2, to_luastring(\"huge\", true));\n    lua_pushinteger(L, LUA_MAXINTEGER);\n    lua_setfield(L, -2, to_luastring(\"maxinteger\", true));\n    lua_pushinteger(L, LUA_MININTEGER);\n    lua_setfield(L, -2, to_luastring(\"mininteger\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_math = luaopen_math;\n","\"use strict\";\n\nconst {\n    LUA_MASKCALL,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_REGISTRYINDEX,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    LUA_TUSERDATA,\n    lua_Debug,\n    lua_call,\n    lua_checkstack,\n    lua_gethook,\n    lua_gethookcount,\n    lua_gethookmask,\n    lua_getinfo,\n    lua_getlocal,\n    lua_getmetatable,\n    lua_getstack,\n    lua_getupvalue,\n    lua_getuservalue,\n    lua_insert,\n    lua_iscfunction,\n    lua_isfunction,\n    lua_isnoneornil,\n    lua_isthread,\n    lua_newtable,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgetp,\n    lua_rawsetp,\n    lua_rotate,\n    lua_setfield,\n    lua_sethook,\n    lua_setlocal,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_setuservalue,\n    lua_tojsstring,\n    lua_toproxy,\n    lua_tostring,\n    lua_tothread,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueid,\n    lua_upvaluejoin,\n    lua_xmove\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_loadbuffer,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_traceback,\n    lua_writestringerror\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/*\n** If L1 != L, L1 can be in any state, and therefore there are no\n** guarantees about its stack space; any push in L1 must be\n** checked.\n*/\nconst checkstack = function(L, L1, n) {\n    if (L !== L1 && !lua_checkstack(L1, n))\n        luaL_error(L, to_luastring(\"stack overflow\", true));\n};\n\nconst db_getregistry = function(L) {\n    lua_pushvalue(L, LUA_REGISTRYINDEX);\n    return 1;\n};\n\nconst db_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);  /* no metatable */\n    }\n    return 1;\n};\n\nconst db_setmetatable = function(L) {\n    const t = lua_type(L, 2);\n    luaL_argcheck(L, t == LUA_TNIL || t == LUA_TTABLE, 2, \"nil or table expected\");\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;  /* return 1st argument */\n};\n\nconst db_getuservalue = function(L) {\n    if (lua_type(L, 1) !== LUA_TUSERDATA)\n        lua_pushnil(L);\n    else\n        lua_getuservalue(L, 1);\n    return 1;\n};\n\n\nconst db_setuservalue = function(L) {\n    luaL_checktype(L, 1, LUA_TUSERDATA);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_setuservalue(L, 1);\n    return 1;\n};\n\n/*\n** Auxiliary function used by several library functions: check for\n** an optional thread as function's first argument and set 'arg' with\n** 1 if this argument is present (so that functions can skip it to\n** access their other arguments)\n*/\nconst getthread = function(L) {\n    if (lua_isthread(L, 1)) {\n        return {\n            arg: 1,\n            thread: lua_tothread(L, 1)\n        };\n    } else {\n        return {\n            arg: 0,\n            thread: L\n        };  /* function will operate over current thread */\n    }\n};\n\n/*\n** Variations of 'lua_settable', used by 'db_getinfo' to put results\n** from 'lua_getinfo' into result table. Key is always a string;\n** value can be a string, an int, or a boolean.\n*/\nconst settabss = function(L, k, v) {\n    lua_pushstring(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsi = function(L, k, v) {\n    lua_pushinteger(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsb = function(L, k, v) {\n    lua_pushboolean(L, v);\n    lua_setfield(L, -2, k);\n};\n\n\n/*\n** In function 'db_getinfo', the call to 'lua_getinfo' may push\n** results on the stack; later it creates the result table to put\n** these objects. Function 'treatstackoption' puts the result from\n** 'lua_getinfo' on top of the result table so that it can call\n** 'lua_setfield'.\n*/\nconst treatstackoption = function(L, L1, fname) {\n    if (L == L1)\n        lua_rotate(L, -2, 1);  /* exchange object and table */\n    else\n        lua_xmove(L1, L, 1);  /* move object to the \"main\" stack */\n    lua_setfield(L, -2, fname);  /* put object into table */\n};\n\n/*\n** Calls 'lua_getinfo' and collects all results in a new table.\n** L1 needs stack space for an optional input (function) plus\n** two optional outputs (function and line table) from function\n** 'lua_getinfo'.\n*/\nconst db_getinfo = function(L) {\n    let ar = new lua_Debug();\n    let thread = getthread(L);\n    let arg = thread.arg;\n    let L1 = thread.thread;\n    let options = luaL_optstring(L, arg + 2, \"flnStu\");\n    checkstack(L, L1, 3);\n    if (lua_isfunction(L, arg + 1)) {  /* info about a function? */\n        options = lua_pushfstring(L, to_luastring(\">%s\"), options);  /* add '>' to 'options' */\n        lua_pushvalue(L, arg + 1);  /* move function to 'L1' stack */\n        lua_xmove(L, L1, 1);\n    } else {  /* stack level */\n        if (!lua_getstack(L1, luaL_checkinteger(L, arg + 1), ar)) {\n            lua_pushnil(L);  /* level out of range */\n            return 1;\n        }\n    }\n\n    if (!lua_getinfo(L1, options, ar))\n        luaL_argerror(L, arg + 2, \"invalid option\");\n    lua_newtable(L);  /* table to collect results */\n    if (luastring_indexOf(options, 83 /* 'S'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"source\", true), ar.source);\n        settabss(L, to_luastring(\"short_src\", true), ar.short_src);\n        settabsi(L, to_luastring(\"linedefined\", true), ar.linedefined);\n        settabsi(L, to_luastring(\"lastlinedefined\", true), ar.lastlinedefined);\n        settabss(L, to_luastring(\"what\", true), ar.what);\n    }\n    if (luastring_indexOf(options, 108 /* 'l'.charCodeAt(0) */) > -1)\n        settabsi(L, to_luastring(\"currentline\", true), ar.currentline);\n    if (luastring_indexOf(options, 117 /* 'u'.charCodeAt(0) */) > -1) {\n        settabsi(L, to_luastring(\"nups\", true), ar.nups);\n        settabsi(L, to_luastring(\"nparams\", true), ar.nparams);\n        settabsb(L, to_luastring(\"isvararg\", true), ar.isvararg);\n    }\n    if (luastring_indexOf(options, 110 /* 'n'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"name\", true), ar.name);\n        settabss(L, to_luastring(\"namewhat\", true), ar.namewhat);\n    }\n    if (luastring_indexOf(options, 116 /* 't'.charCodeAt(0) */) > -1)\n        settabsb(L, to_luastring(\"istailcall\", true), ar.istailcall);\n    if (luastring_indexOf(options, 76 /* 'L'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"activelines\", true));\n    if (luastring_indexOf(options, 102 /* 'f'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"func\", true));\n    return 1;  /* return table */\n};\n\nconst db_getlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let nvar = luaL_checkinteger(L, arg + 2);  /* local-variable index */\n    if (lua_isfunction(L, arg + 1)) {\n        lua_pushvalue(L, arg + 1);  /* push function */\n        lua_pushstring(L, lua_getlocal(L, null, nvar));  /* push local name */\n        return 1;  /* return only name (there is no value) */\n    } else {  /* stack-level argument */\n        let level = luaL_checkinteger(L, arg + 1);\n        if (!lua_getstack(L1, level, ar))  /* out of range? */\n            return luaL_argerror(L, arg+1, \"level out of range\");\n        checkstack(L, L1, 1);\n        let name = lua_getlocal(L1, ar, nvar);\n        if (name) {\n            lua_xmove(L1, L, 1);  /* move local value */\n            lua_pushstring(L, name);  /* push name */\n            lua_rotate(L, -2, 1);  /* re-order */\n            return 2;\n        }\n        else {\n            lua_pushnil(L);  /* no name (nor value) */\n            return 1;\n        }\n    }\n};\n\nconst db_setlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let level = luaL_checkinteger(L, arg + 1);\n    let nvar = luaL_checkinteger(L, arg + 2);\n    if (!lua_getstack(L1, level, ar))  /* out of range? */\n        return luaL_argerror(L, arg + 1, \"level out of range\");\n    luaL_checkany(L, arg + 3);\n    lua_settop(L, arg + 3);\n    checkstack(L, L1, 1);\n    lua_xmove(L, L1, 1);\n    let name = lua_setlocal(L1, ar, nvar);\n    if (name === null)\n        lua_pop(L1, 1);  /* pop value (if not popped by 'lua_setlocal') */\n    lua_pushstring(L, name);\n    return 1;\n};\n\n/*\n** get (if 'get' is true) or set an upvalue from a closure\n*/\nconst auxupvalue = function(L, get) {\n    let n = luaL_checkinteger(L, 2);  /* upvalue index */\n    luaL_checktype(L, 1, LUA_TFUNCTION);  /* closure */\n    let name = get ? lua_getupvalue(L, 1, n) : lua_setupvalue(L, 1, n);\n    if (name === null) return 0;\n    lua_pushstring(L, name);\n    lua_insert(L, -(get+1));  /* no-op if get is false */\n    return get + 1;\n};\n\n\nconst db_getupvalue = function(L) {\n    return auxupvalue(L, 1);\n};\n\nconst db_setupvalue = function(L) {\n    luaL_checkany(L, 3);\n    return auxupvalue(L, 0);\n};\n\n/*\n** Check whether a given upvalue from a given closure exists and\n** returns its index\n*/\nconst checkupval = function(L, argf, argnup) {\n    let nup = luaL_checkinteger(L, argnup);  /* upvalue index */\n    luaL_checktype(L, argf, LUA_TFUNCTION);  /* closure */\n    luaL_argcheck(L, (lua_getupvalue(L, argf, nup) !== null), argnup, \"invalid upvalue index\");\n    return nup;\n};\n\nconst db_upvalueid = function(L) {\n    let n = checkupval(L, 1, 2);\n    lua_pushlightuserdata(L, lua_upvalueid(L, 1, n));\n    return 1;\n};\n\nconst db_upvaluejoin = function(L) {\n    let n1 = checkupval(L, 1, 2);\n    let n2 = checkupval(L, 3, 4);\n    luaL_argcheck(L, !lua_iscfunction(L, 1), 1, \"Lua function expected\");\n    luaL_argcheck(L, !lua_iscfunction(L, 3), 3, \"Lua function expected\");\n    lua_upvaluejoin(L, 1, n1, 3, n2);\n    return 0;\n};\n\n/*\n** The hook table at registry[HOOKKEY] maps threads to their current\n** hook function. (We only need the unique address of 'HOOKKEY'.)\n*/\nconst HOOKKEY = to_luastring(\"__hooks__\", true);\n\nconst hooknames = [\"call\", \"return\", \"line\", \"count\", \"tail call\"].map(e => to_luastring(e));\n\n/*\n** Call hook function registered at hook table for the current\n** thread (if there is one)\n*/\nconst hookf = function(L, ar) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n    let hooktable = lua_touserdata(L, -1);\n    let proxy = hooktable.get(L);\n    if (proxy) {  /* is there a hook function? */\n        proxy(L);\n        lua_pushstring(L, hooknames[ar.event]);  /* push event name */\n        if (ar.currentline >= 0)\n            lua_pushinteger(L, ar.currentline);  /* push current line */\n        else lua_pushnil(L);\n        lualib.lua_assert(lua_getinfo(L, to_luastring(\"lS\"), ar));\n        lua_call(L, 2, 0);  /* call hook function */\n    }\n};\n\n/*\n** Convert a string mask (for 'sethook') into a bit mask\n*/\nconst makemask = function(smask, count) {\n    let mask = 0;\n    if (luastring_indexOf(smask, 99 /* 'c'.charCodeAt(0) */) > -1) mask |= LUA_MASKCALL;\n    if (luastring_indexOf(smask, 114 /* 'r'.charCodeAt(0) */) > -1) mask |= LUA_MASKRET;\n    if (luastring_indexOf(smask, 108 /* 'l'.charCodeAt(0) */) > -1) mask |= LUA_MASKLINE;\n    if (count > 0) mask |= LUA_MASKCOUNT;\n    return mask;\n};\n\n/*\n** Convert a bit mask (for 'gethook') into a string mask\n*/\nconst unmakemask = function(mask, smask) {\n    let i = 0;\n    if (mask & LUA_MASKCALL) smask[i++] = 99 /* 'c'.charCodeAt(0) */;\n    if (mask & LUA_MASKRET) smask[i++] = 114 /* 'r'.charCodeAt(0) */;\n    if (mask & LUA_MASKLINE) smask[i++] = 108 /* 'l'.charCodeAt(0) */;\n    return smask.subarray(0, i);\n};\n\nconst db_sethook = function(L) {\n    let mask, count, func;\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    if (lua_isnoneornil(L, arg+1)) {  /* no hook? */\n        lua_settop(L, arg+1);\n        func = null; mask = 0; count = 0;  /* turn off hooks */\n    }\n    else {\n        const smask = luaL_checkstring(L, arg + 2);\n        luaL_checktype(L, arg+1, LUA_TFUNCTION);\n        count = luaL_optinteger(L, arg + 3, 0);\n        func = hookf; mask = makemask(smask, count);\n    }\n    /* as weak tables are not supported; use a JS weak-map */\n    let hooktable;\n    if (lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY) === LUA_TNIL) {\n        hooktable = new WeakMap();\n        lua_pushlightuserdata(L, hooktable);\n        lua_rawsetp(L, LUA_REGISTRYINDEX, HOOKKEY);  /* set it in position */\n    } else {\n        hooktable = lua_touserdata(L, -1);\n    }\n    let proxy = lua_toproxy(L, arg + 1);  /* value (hook function) */\n    hooktable.set(L1, proxy);\n    lua_sethook(L1, func, mask, count);\n    return 0;\n};\n\nconst db_gethook = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let buff = new Uint8Array(5);\n    let mask = lua_gethookmask(L1);\n    let hook = lua_gethook(L1);\n    if (hook === null)  /* no hook? */\n        lua_pushnil(L);\n    else if (hook !== hookf)  /* external hook? */\n        lua_pushliteral(L, \"external hook\");\n    else {  /* hook table must exist */\n        lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n        let hooktable = lua_touserdata(L, -1);\n        let proxy = hooktable.get(L1);\n        proxy(L);\n    }\n    lua_pushstring(L, unmakemask(mask, buff));  /* 2nd result = mask */\n    lua_pushinteger(L, lua_gethookcount(L1));  /* 3rd result = count */\n    return 3;\n};\n\nconst db_traceback = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let msg = lua_tostring(L, arg + 1);\n    if (msg === null && !lua_isnoneornil(L, arg + 1))  /* non-string 'msg'? */\n        lua_pushvalue(L, arg + 1);  /* return it untouched */\n    else {\n        let level = luaL_optinteger(L, arg + 2, L === L1 ? 1 : 0);\n        luaL_traceback(L, L1, msg, level);\n    }\n    return 1;\n};\n\nconst dblib = {\n    \"gethook\":      db_gethook,\n    \"getinfo\":      db_getinfo,\n    \"getlocal\":     db_getlocal,\n    \"getmetatable\": db_getmetatable,\n    \"getregistry\":  db_getregistry,\n    \"getupvalue\":   db_getupvalue,\n    \"getuservalue\": db_getuservalue,\n    \"sethook\":      db_sethook,\n    \"setlocal\":     db_setlocal,\n    \"setmetatable\": db_setmetatable,\n    \"setupvalue\":   db_setupvalue,\n    \"setuservalue\": db_setuservalue,\n    \"traceback\":    db_traceback,\n    \"upvalueid\":    db_upvalueid,\n    \"upvaluejoin\":  db_upvaluejoin\n};\n\nlet getinput;\nif (typeof process !== \"undefined\") { // Only with Node\n    const readlineSync = require('readline-sync');\n    readlineSync.setDefaultOptions({\n        prompt: 'lua_debug> '\n    });\n    getinput = function() {\n        return readlineSync.prompt();\n    };\n} else if (typeof window !== \"undefined\") {\n    /* if in browser use window.prompt. Doesn't work from web workers.\n       See https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n    */\n    getinput = function() {\n        let input = prompt(\"lua_debug>\", \"\");\n        return (input !== null) ? input : \"\";\n    };\n}\nif (getinput) {\n    dblib.debug = function(L) {\n        for (;;) {\n            let input = getinput();\n\n            if (input === \"cont\")\n                return 0;\n\n            if (input.length === 0)\n                continue;\n\n            let buffer = to_luastring(input);\n            if (luaL_loadbuffer(L, buffer, buffer.length, to_luastring(\"=(debug command)\", true))\n                || lua_pcall(L, 0, 0, 0)) {\n                lua_writestringerror(lua_tojsstring(L, -1), \"\\n\");\n            }\n            lua_settop(L, 0);  /* remove eventual returns */\n        }\n    };\n}\n\nconst luaopen_debug = function(L) {\n    luaL_newlib(L, dblib);\n    return 1;\n};\n\nmodule.exports.luaopen_debug = luaopen_debug;\n","\"use strict\";\n\nconst {\n    LUA_DIRSEP,\n    LUA_EXEC_DIR,\n    LUA_JSPATH_DEFAULT,\n    LUA_PATH_DEFAULT,\n    LUA_PATH_MARK,\n    LUA_PATH_SEP\n} = require('./luaconf.js');\nconst {\n    LUA_OK,\n    LUA_REGISTRYINDEX,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_callk,\n    lua_createtable,\n    lua_getfield,\n    lua_insert,\n    lua_isfunction,\n    lua_isnil,\n    lua_isstring,\n    lua_newtable,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushglobaltable,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgeti,\n    lua_rawgetp,\n    lua_rawseti,\n    lua_rawsetp,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tostring,\n    lua_touserdata,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    LUA_LOADED_TABLE,\n    LUA_PRELOAD_TABLE,\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_buffinit,\n    luaL_checkstring,\n    luaL_error,\n    luaL_getsubtable,\n    luaL_gsub,\n    luaL_len,\n    luaL_loadfile,\n    luaL_newlib,\n    luaL_optstring,\n    luaL_pushresult,\n    luaL_setfuncs\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\nconst fengari  = require('./fengari.js');\n\nconst global_env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return global;\n    } else if (typeof window !== \"undefined\") {\n        /* browser window */\n        return window;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        /* web worker */\n        return self;\n    } else {\n        /* unknown global env */\n        return (0, eval)('this'); /* use non-strict mode to get global env */\n    }\n})();\n\nconst JSLIBS = to_luastring(\"__JSLIBS__\");\nconst LUA_PATH_VAR = \"LUA_PATH\";\nconst LUA_JSPATH_VAR = \"LUA_JSPATH\";\n\nconst LUA_IGMARK = \"-\";\n\n/*\n** LUA_CSUBSEP is the character that replaces dots in submodule names\n** when searching for a JS loader.\n** LUA_LSUBSEP is the character that replaces dots in submodule names\n** when searching for a Lua loader.\n*/\nconst LUA_CSUBSEP = LUA_DIRSEP;\nconst LUA_LSUBSEP = LUA_DIRSEP;\n\n/* prefix for open functions in JS libraries */\nconst LUA_POF = to_luastring(\"luaopen_\");\n\n/* separator for open functions in JS libraries */\nconst LUA_OFSEP = to_luastring(\"_\");\nconst LIB_FAIL = \"open\";\n\nconst AUXMARK = to_luastring(\"\\x01\");\n\n\n/*\n** load JS library in file 'path'. If 'seeglb', load with all names in\n** the library global.\n** Returns the library; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nlet lsys_load;\nif (typeof process === \"undefined\") {\n    lsys_load = function(L, path, seeglb) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n            lua_pushstring(L, to_luastring(`${xhr.status}: ${xhr.statusText}`));\n            return null;\n        }\n\n        let code = xhr.response;\n        /* Add sourceURL comment to get path in debugger+tracebacks */\n        if (!/\\/\\/[#@] sourceURL=/.test(code))\n            code += \" //# sourceURL=\" + path;\n        let func;\n        try {\n            func = Function(\"fengari\", code);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(`${e.name}: ${e.message}`));\n            return null;\n        }\n        let res = func(fengari);\n        if (typeof res === \"function\" || (typeof res === \"object\" && res !== null)) {\n            return res;\n        } else if (res === void 0) { /* assume library added symbols to global environment */\n            return global_env;\n        } else {\n            lua_pushstring(L, to_luastring(`library returned unexpected type (${typeof res})`));\n            return null;\n        }\n    };\n} else {\n    const pathlib = require('path');\n    lsys_load = function(L, path, seeglb) {\n        path = to_jsstring(path);\n        /* relative paths should be relative to cwd, not this js file */\n        path = pathlib.resolve(process.cwd(), path);\n        try {\n            return require(path);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(e.message));\n            return null;\n        }\n    };\n}\n\n/*\n** Try to find a function named 'sym' in library 'lib'.\n** Returns the function; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nconst lsys_sym = function(L, lib, sym) {\n    let f = lib[to_jsstring(sym)];\n\n    if (f && typeof f === 'function')\n        return f;\n    else {\n        lua_pushfstring(L, to_luastring(\"undefined symbol: %s\"), sym);\n        return null;\n    }\n};\n\n/*\n** return registry.LUA_NOENV as a boolean\n*/\nconst noenv = function(L) {\n    lua_getfield(L, LUA_REGISTRYINDEX, to_luastring(\"LUA_NOENV\"));\n    let b = lua_toboolean(L, -1);\n    lua_pop(L, 1);  /* remove value */\n    return b;\n};\n\nlet readable;\nif (typeof process !== \"undefined\") { // Only with Node\n    const fs = require('fs');\n\n    readable = function(filename) {\n        try {\n            let fd = fs.openSync(filename, 'r');\n            fs.closeSync(fd);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n} else {\n    readable = function(path) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        /* Following GET request done by searcher_Web will be cached */\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        return xhr.status >= 200 && xhr.status <= 299;\n    };\n}\n\n\n/* error codes for 'lookforfunc' */\nconst ERRLIB  = 1;\nconst ERRFUNC = 2;\n\n/*\n** Look for a C function named 'sym' in a dynamically loaded library\n** 'path'.\n** First, check whether the library is already loaded; if not, try\n** to load it.\n** Then, if 'sym' is '*', return true (as library has been loaded).\n** Otherwise, look for symbol 'sym' in the library and push a\n** C function with that symbol.\n** Return 0 and 'true' or a function in the stack; in case of\n** errors, return an error code and an error message in the stack.\n*/\nconst lookforfunc = function(L, path, sym) {\n    let reg = checkjslib(L, path);  /* check loaded JS libraries */\n    if (reg === null) {  /* must load library? */\n        reg = lsys_load(L, path, sym[0] === '*'.charCodeAt(0));  /* a global symbols if 'sym'=='*' */\n        if (reg === null) return ERRLIB;  /* unable to load library */\n        addtojslib(L, path, reg);\n    }\n    if (sym[0] === '*'.charCodeAt(0)) {  /* loading only library (no function)? */\n        lua_pushboolean(L, 1);  /* return 'true' */\n        return 0;  /* no errors */\n    }\n    else {\n        let f = lsys_sym(L, reg, sym);\n        if (f === null)\n            return ERRFUNC;  /* unable to find function */\n        lua_pushcfunction(L, f);  /* else create new function */\n        return 0;  /* no errors */\n    }\n};\n\nconst ll_loadlib = function(L) {\n    let path = luaL_checkstring(L, 1);\n    let init = luaL_checkstring(L, 2);\n    let stat = lookforfunc(L, path, init);\n    if (stat === 0)  /* no errors? */\n        return 1;  /* return the loaded function */\n    else {  /* error; error message is on stack top */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        lua_pushliteral(L, (stat === ERRLIB) ? LIB_FAIL : \"init\");\n        return 3;  /* return nil, error message, and where */\n    }\n};\n\nconst env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return process.env;\n    } else {\n        return global_env;\n    }\n})();\n\n/*\n** Set a path\n*/\nconst setpath = function(L, fieldname, envname, dft) {\n    let nver = `${envname}${lualib.LUA_VERSUFFIX}`;\n    lua_pushstring(L, to_luastring(nver));\n    let path = env[nver];  /* use versioned name */\n    if (path === undefined)  /* no environment variable? */\n        path = env[envname];  /* try unversioned name */\n    if (path === undefined || noenv(L))  /* no environment variable? */\n        lua_pushstring(L, dft);  /* use default */\n    else {\n        /* replace \";;\" by \";AUXMARK;\" and then AUXMARK by default path */\n        path = luaL_gsub(\n            L,\n            to_luastring(path),\n            to_luastring(LUA_PATH_SEP + LUA_PATH_SEP, true),\n            to_luastring(LUA_PATH_SEP + to_jsstring(AUXMARK) + LUA_PATH_SEP, true)\n        );\n        luaL_gsub(L, path, AUXMARK, dft);\n        lua_remove(L, -2); /* remove result from 1st 'gsub' */\n    }\n    lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */\n    lua_pop(L, 1);  /* pop versioned variable name */\n};\n\n/*\n** return registry.JSLIBS[path]\n*/\nconst checkjslib = function(L, path) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_getfield(L, -1, path);\n    let plib = lua_touserdata(L, -1);  /* plib = JSLIBS[path] */\n    lua_pop(L, 2);  /* pop JSLIBS table and 'plib' */\n    return plib;\n};\n\n/*\n** registry.JSLIBS[path] = plib        -- for queries\n** registry.JSLIBS[#JSLIBS + 1] = plib  -- also keep a list of all libraries\n*/\nconst addtojslib = function(L, path, plib) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_pushlightuserdata(L, plib);\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -3, path);  /* JSLIBS[path] = plib */\n    lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* JSLIBS[#JSLIBS + 1] = plib */\n    lua_pop(L, 1);  /* pop JSLIBS table */\n};\n\nconst pushnexttemplate = function(L, path) {\n    while (path[0] === LUA_PATH_SEP.charCodeAt(0)) path = path.subarray(1);  /* skip separators */\n    if (path.length === 0) return null;  /* no more templates */\n    let l = luastring_indexOf(path, LUA_PATH_SEP.charCodeAt(0));  /* find next separator */\n    if (l < 0) l = path.length;\n    lua_pushlstring(L, path, l);  /* template */\n    return path.subarray(l);\n};\n\nconst searchpath = function(L, name, path, sep, dirsep) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    if (sep[0] !== 0)  /* non-empty separator? */\n        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */\n    while ((path = pushnexttemplate(L, path)) !== null) {\n        let filename = luaL_gsub(L, lua_tostring(L, -1), to_luastring(LUA_PATH_MARK, true), name);\n        lua_remove(L, -2);  /* remove path template */\n        if (readable(filename))  /* does file exist and is readable? */\n            return filename;  /* return that file name */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno file '%s'\"), filename);\n        lua_remove(L, -2);  /* remove file name */\n        luaL_addvalue(msg);\n    }\n    luaL_pushresult(msg);  /* create error message */\n    return null;  /* not found */\n};\n\nconst ll_searchpath = function(L) {\n    let f = searchpath(\n        L,\n        luaL_checkstring(L, 1),\n        luaL_checkstring(L, 2),\n        luaL_optstring(L, 3, \".\"),\n        luaL_optstring(L, 4, LUA_DIRSEP)\n    );\n    if (f !== null) return 1;\n    else {  /* error message is on top of the stack */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        return 2;  /* return nil + error message */\n    }\n};\n\nconst findfile = function(L, name, pname, dirsep) {\n    lua_getfield(L, lua_upvalueindex(1), pname);\n    let path = lua_tostring(L, -1);\n    if (path === null)\n        luaL_error(L, to_luastring(\"'package.%s' must be a string\"), pname);\n    return searchpath(L, name, path, to_luastring(\".\"), dirsep);\n};\n\nconst checkload = function(L, stat, filename) {\n    if (stat) {  /* module loaded successfully? */\n        lua_pushstring(L, filename);  /* will be 2nd argument to module */\n        return 2;  /* return open function and file name */\n    } else\n        return luaL_error(L, to_luastring(\"error loading module '%s' from file '%s':\\n\\t%s\"),\n            lua_tostring(L, 1), filename, lua_tostring(L, -1));\n};\n\nconst searcher_Lua = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"path\", true), to_luastring(LUA_LSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, luaL_loadfile(L, filename) === LUA_OK, filename);\n};\n\n/*\n** Try to find a load function for module 'modname' at file 'filename'.\n** First, change '.' to '_' in 'modname'; then, if 'modname' has\n** the form X-Y (that is, it has an \"ignore mark\"), build a function\n** name \"luaopen_X\" and look for it. (For compatibility, if that\n** fails, it also tries \"luaopen_Y\".) If there is no ignore mark,\n** look for a function named \"luaopen_modname\".\n*/\nconst loadfunc = function(L, filename, modname) {\n    let openfunc;\n    modname = luaL_gsub(L, modname, to_luastring(\".\"), LUA_OFSEP);\n    let mark = luastring_indexOf(modname, LUA_IGMARK.charCodeAt(0));\n    if (mark >= 0) {\n        openfunc = lua_pushlstring(L, modname, mark);\n        openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, openfunc);\n        let stat = lookforfunc(L, filename, openfunc);\n        if (stat !== ERRFUNC) return stat;\n        modname = mark + 1;  /* else go ahead and try old-style name */\n    }\n    openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, modname);\n    return lookforfunc(L, filename, openfunc);\n};\n\nconst searcher_C = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, (loadfunc(L, filename, name) === 0), filename);\n};\n\nconst searcher_Croot = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let p = luastring_indexOf(name, '.'.charCodeAt(0));\n    let stat;\n    if (p < 0) return 0;  /* is root */\n    lua_pushlstring(L, name, p);\n    let filename = findfile(L, lua_tostring(L, -1), to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* root not found */\n    if ((stat = loadfunc(L, filename, name)) !== 0) {\n        if (stat != ERRFUNC)\n            return checkload(L, 0, filename);  /* real error */\n        else {  /* open function not found */\n            lua_pushstring(L, to_luastring(\"\\n\\tno module '%s' in file '%s'\"), name, filename);\n            return 1;\n        }\n    }\n    lua_pushstring(L, filename);  /* will be 2nd argument to module */\n    return 2;\n};\n\nconst searcher_preload = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    if (lua_getfield(L, -1, name) === LUA_TNIL)  /* not found? */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno field package.preload['%s']\"), name);\n    return 1;\n};\n\nconst findloader = function(L, name, ctx, k) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    /* push 'package.searchers' to index 3 in the stack */\n    if (lua_getfield(L, lua_upvalueindex(1), to_luastring(\"searchers\", true)) !== LUA_TTABLE)\n        luaL_error(L, to_luastring(\"'package.searchers' must be a table\"));\n    let ctx2 = {name: name, i: 1, msg: msg, ctx: ctx, k: k};\n    return findloader_cont(L, LUA_OK, ctx2);\n};\n\nconst findloader_cont = function(L, status, ctx) {\n    /*  iterate over available searchers to find a loader */\n    for (; ; ctx.i++) {\n        if (status === LUA_OK) {\n            if (lua_rawgeti(L, 3, ctx.i) === LUA_TNIL) {  /* no more searchers? */\n                lua_pop(L, 1);  /* remove nil */\n                luaL_pushresult(ctx.msg);  /* create error message */\n                luaL_error(L, to_luastring(\"module '%s' not found:%s\"), ctx.name, lua_tostring(L, -1));\n            }\n            lua_pushstring(L, ctx.name);\n            lua_callk(L, 1, 2, ctx, findloader_cont);  /* call it */\n        } else {\n            status = LUA_OK;\n        }\n        if (lua_isfunction(L, -2))  /* did it find a loader? */\n            break;  /* module loader found */\n        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */\n            lua_pop(L, 1);  /* remove extra return */\n            luaL_addvalue(ctx.msg);  /* concatenate error message */\n        }\n        else\n            lua_pop(L, 2);  /* remove both returns */\n    }\n    return ctx.k(L, LUA_OK, ctx.ctx);\n};\n\nconst ll_require = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_settop(L, 1);  /* LOADED table will be at index 2 */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, 2, name);  /* LOADED[name] */\n    if (lua_toboolean(L, -1))  /* is it there? */\n        return 1;  /* package is already loaded */\n    /* else must load package */\n    lua_pop(L, 1);  /* remove 'getfield' result */\n    let ctx = name;\n    return findloader(L, name, ctx, ll_require_cont);\n};\n\nconst ll_require_cont = function(L, status, ctx) {\n    let name = ctx;\n    lua_pushstring(L, name);  /* pass name as argument to module loader */\n    lua_insert(L, -2);  /* name is 1st argument (before search data) */\n    lua_callk(L, 2, 1, ctx, ll_require_cont2);\n    return ll_require_cont2(L, LUA_OK, ctx);  /* run loader to load module */\n};\n\nconst ll_require_cont2 = function(L, status, ctx) {\n    let name = ctx;\n    if (!lua_isnil(L, -1))  /* non-nil return? */\n        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */\n    if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */\n        lua_pushboolean(L, 1);  /* use true as result */\n        lua_pushvalue(L, -1);  /* extra copy to be returned */\n        lua_setfield(L, 2, name);  /* LOADED[name] = true */\n    }\n    return 1;\n};\n\nconst pk_funcs = {\n    \"loadlib\": ll_loadlib,\n    \"searchpath\": ll_searchpath\n};\n\nconst ll_funcs = {\n    \"require\": ll_require\n};\n\nconst createsearcherstable = function(L) {\n    let searchers = [searcher_preload, searcher_Lua, searcher_C, searcher_Croot, null];\n    /* create 'searchers' table */\n    lua_createtable(L);\n    /* fill it with predefined searchers */\n    for (let i = 0; searchers[i]; i++) {\n        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */\n        lua_pushcclosure(L, searchers[i], 1);\n        lua_rawseti(L, -2, i+1);\n    }\n    lua_setfield(L, -2, to_luastring(\"searchers\", true));  /* put it in field 'searchers' */\n};\n\n/*\n** create table JSLIBS to keep track of loaded JS libraries,\n** setting a finalizer to close all libraries when closing state.\n*/\nconst createjslibstable = function(L) {\n    lua_newtable(L);  /* create JSLIBS table */\n    lua_createtable(L, 0, 1);  /* create metatable for JSLIBS */\n    lua_setmetatable(L, -2);\n    lua_rawsetp(L, LUA_REGISTRYINDEX, JSLIBS);  /* set JSLIBS table in registry */\n};\n\nconst luaopen_package = function(L) {\n    createjslibstable(L);\n    luaL_newlib(L, pk_funcs);  /* create 'package' table */\n    createsearcherstable(L);\n    /* set paths */\n    setpath(L, to_luastring(\"path\", true), LUA_PATH_VAR, LUA_PATH_DEFAULT);\n    setpath(L, to_luastring(\"jspath\", true), LUA_JSPATH_VAR, LUA_JSPATH_DEFAULT);\n    /* store config information */\n    lua_pushliteral(L, LUA_DIRSEP + \"\\n\" + LUA_PATH_SEP + \"\\n\" + LUA_PATH_MARK + \"\\n\" +\n                        LUA_EXEC_DIR + \"\\n\" + LUA_IGMARK + \"\\n\");\n    lua_setfield(L, -2, to_luastring(\"config\", true));\n    /* set field 'loaded' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_setfield(L, -2, to_luastring(\"loaded\", true));\n    /* set field 'preload' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    lua_setfield(L, -2, to_luastring(\"preload\", true));\n    lua_pushglobaltable(L);\n    lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */\n    luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */\n    lua_pop(L, 1);  /* pop global table */\n    return 1;  /* return 'package' table */\n};\n\nmodule.exports.luaopen_package = luaopen_package;\n","const {\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_setfield\n} = require('./lua.js');\nconst {\n    luaL_newlib\n} = require('./lauxlib.js');\nconst {\n    FENGARI_AUTHORS,\n    FENGARI_COPYRIGHT,\n    FENGARI_RELEASE,\n    FENGARI_VERSION,\n    FENGARI_VERSION_MAJOR,\n    FENGARI_VERSION_MINOR,\n    FENGARI_VERSION_NUM,\n    FENGARI_VERSION_RELEASE,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst luaopen_fengari = function(L) {\n    luaL_newlib(L, {});\n    lua_pushliteral(L, FENGARI_AUTHORS);\n    lua_setfield(L, -2, to_luastring(\"AUTHORS\"));\n    lua_pushliteral(L, FENGARI_COPYRIGHT);\n    lua_setfield(L, -2, to_luastring(\"COPYRIGHT\"));\n    lua_pushliteral(L, FENGARI_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"RELEASE\"));\n    lua_pushliteral(L, FENGARI_VERSION);\n    lua_setfield(L, -2, to_luastring(\"VERSION\"));\n    lua_pushliteral(L, FENGARI_VERSION_MAJOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MAJOR\"));\n    lua_pushliteral(L, FENGARI_VERSION_MINOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MINOR\"));\n    lua_pushinteger(L, FENGARI_VERSION_NUM);\n    lua_setfield(L, -2, to_luastring(\"VERSION_NUM\"));\n    lua_pushliteral(L, FENGARI_VERSION_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"VERSION_RELEASE\"));\n    return 1;\n};\n\nmodule.exports.luaopen_fengari = luaopen_fengari;\n","\"use strict\";\n\nimport {\n\tFENGARI_AUTHORS,\n\tFENGARI_COPYRIGHT,\n\tFENGARI_RELEASE,\n\tFENGARI_VERSION,\n\tFENGARI_VERSION_MAJOR,\n\tFENGARI_VERSION_MINOR,\n\tFENGARI_VERSION_NUM,\n\tFENGARI_VERSION_RELEASE,\n\n\tluastring_eq,\n\tluastring_indexOf,\n\tluastring_of,\n\tto_jsstring,\n\tto_luastring,\n\tto_uristring,\n\n\tlua,\n\tlauxlib,\n\tlualib\n} from 'fengari';\nimport * as interop from 'fengari-interop';\n\nconst {\n\tLUA_ERRRUN,\n\tLUA_ERRSYNTAX,\n\tLUA_OK,\n\tLUA_VERSION_MAJOR,\n\tLUA_VERSION_MINOR,\n\tlua_Debug,\n\tlua_getinfo,\n\tlua_getstack,\n\tlua_gettop,\n\tlua_insert,\n\tlua_pcall,\n\tlua_pop,\n\tlua_pushcfunction,\n\tlua_pushstring,\n\tlua_remove,\n\tlua_setglobal,\n\tlua_tojsstring\n} = lua;\nconst {\n\tluaL_loadbuffer,\n\tluaL_newstate,\n\tluaL_requiref\n} = lauxlib;\nconst {\n\tcheckjs,\n\tluaopen_js,\n\tpush,\n\ttojs\n} = interop;\n\nexport {\n\tFENGARI_AUTHORS,\n\tFENGARI_COPYRIGHT,\n\tFENGARI_RELEASE,\n\tFENGARI_VERSION,\n\tFENGARI_VERSION_MAJOR,\n\tFENGARI_VERSION_MINOR,\n\tFENGARI_VERSION_NUM,\n\tFENGARI_VERSION_RELEASE,\n\n\tluastring_eq,\n\tluastring_indexOf,\n\tluastring_of,\n\tto_jsstring,\n\tto_luastring,\n\tto_uristring,\n\n\tlua,\n\tlauxlib,\n\tlualib,\n\tinterop\n};\n\nexport const L = luaL_newstate();\n\n/* open standard libraries */\nlualib.luaL_openlibs(L);\nluaL_requiref(L, to_luastring(\"js\"), luaopen_js, 1);\nlua_pop(L, 1); /* remove lib */\n\nlua_pushstring(L, to_luastring(FENGARI_COPYRIGHT));\nlua_setglobal(L, to_luastring(\"_COPYRIGHT\"));\n\n/* Helper function to load a JS string of Lua source */\nexport function load(source, chunkname) {\n\tif (typeof source == \"string\")\n\t\tsource = to_luastring(source);\n\telse if (!(source instanceof Uint8Array))\n\t\tthrow new TypeError(\"expects an array of bytes or javascript string\");\n\n\tchunkname = chunkname?to_luastring(chunkname):null;\n\tlet ok = luaL_loadbuffer(L, source, null, chunkname);\n\tlet res;\n\tif (ok === LUA_ERRSYNTAX) {\n\t\tres = new SyntaxError(lua_tojsstring(L, -1));\n\t} else {\n\t\tres = tojs(L, -1);\n\t}\n\tlua_pop(L, 1);\n\tif (ok !== LUA_OK) {\n\t\tthrow res;\n\t}\n\treturn res;\n}\n\nif (typeof document !== 'undefined' && document instanceof HTMLDocument) {\n\t/* Have a document, e.g. we are in main browser window */\n\n\tconst crossorigin_to_credentials = function(crossorigin) {\n\t\tswitch(crossorigin) {\n\t\t\tcase \"anonymous\": return \"omit\";\n\t\t\tcase \"use-credentials\": return \"include\";\n\t\t\tdefault: return \"same-origin\";\n\t\t}\n\t};\n\n\tconst msghandler = function(L) {\n\t\tlet ar = new lua_Debug();\n\t\tif (lua_getstack(L, 2, ar))\n\t\t\tlua_getinfo(L, to_luastring(\"Sl\"), ar);\n\t\tpush(L, new ErrorEvent(\"error\", {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tmessage: lua_tojsstring(L, 1),\n\t\t\terror: tojs(L, 1),\n\t\t\tfilename: ar.short_src ? to_jsstring(ar.short_src) : void 0,\n\t\t\tlineno: ar.currentline > 0 ? ar.currentline : void 0\n\t\t}));\n\t\treturn 1;\n\t};\n\n\tconst run_lua_script = function(tag, code, chunkname) {\n\t\tlet ok = luaL_loadbuffer(L, code, null, chunkname);\n\t\tlet e;\n\t\tif (ok === LUA_ERRSYNTAX) {\n\t\t\tlet msg = lua_tojsstring(L, -1);\n\t\t\tlet filename = tag.src?tag.src:document.location;\n\t\t\tlet lineno = void 0; /* TODO: extract out of msg */\n\t\t\tlet syntaxerror = new SyntaxError(msg, filename, lineno);\n\t\t\te = new ErrorEvent(\"error\", {\n\t\t\t\tmessage: msg,\n\t\t\t\terror: syntaxerror,\n\t\t\t\tfilename: filename,\n\t\t\t\tlineno: lineno\n\t\t\t});\n\t\t} else if (ok === LUA_OK) {\n\t\t\t/* insert message handler below function */\n\t\t\tlet base = lua_gettop(L);\n\t\t\tlua_pushcfunction(L, msghandler);\n\t\t\tlua_insert(L, base);\n\t\t\t/* set document.currentScript.\n\t\t\t   We can't set it normally; but we can create a getter for it, then remove the getter */\n\t\t\tObject.defineProperty(document, 'currentScript', {\n\t\t\t\tvalue: tag,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\t\t\tok = lua_pcall(L, 0, 0, base);\n\t\t\t/* Remove the currentScript getter installed above; this restores normal behaviour */\n\t\t\tdelete document.currentScript;\n\t\t\t/* Remove message handler */\n\t\t\tlua_remove(L, base);\n\t\t\t/* Check if normal error that msghandler would have handled */\n\t\t\tif (ok === LUA_ERRRUN) {\n\t\t\t\te = checkjs(L, -1);\n\t\t\t}\n\t\t}\n\t\tif (ok !== LUA_OK) {\n\t\t\tif (e === void 0) {\n\t\t\t\te = new ErrorEvent(\"error\", {\n\t\t\t\t\tmessage: lua_tojsstring(L, -1),\n\t\t\t\t\terror: tojs(L, -1)\n\t\t\t\t});\n\t\t\t}\n\t\t\tlua_pop(L, 1);\n\t\t\tif (window.dispatchEvent(e)) {\n\t\t\t\tconsole.error(\"uncaught exception\", e.error);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst process_xhr_response = function(xhr, tag, chunkname) {\n\t\tif (xhr.status >= 200 && xhr.status < 300) {\n\t\t\tlet code = xhr.response;\n\t\t\tif (typeof code === \"string\") {\n\t\t\t\tcode = to_luastring(xhr.response);\n\t\t\t} else { /* is an array buffer */\n\t\t\t\tcode = new Uint8Array(code);\n\t\t\t}\n\t\t\t/* TODO: subresource integrity check? */\n\t\t\trun_lua_script(tag, code, chunkname);\n\t\t} else {\n\t\t\ttag.dispatchEvent(new Event(\"error\"));\n\t\t}\n\t};\n\n\tconst run_lua_script_tag = function(tag) {\n\t\tif (tag.src) {\n\t\t\tlet chunkname = to_luastring(\"@\"+tag.src);\n\t\t\t/* JS script tags are async after document has loaded */\n\t\t\tif (document.readyState === \"complete\" || tag.async) {\n\t\t\t\tif (typeof fetch === \"function\") {\n\t\t\t\t\tfetch(tag.src, {\n\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\tcredentials: crossorigin_to_credentials(tag.crossorigin),\n\t\t\t\t\t\tredirect: \"follow\",\n\t\t\t\t\t\tintegrity: tag.integrity\n\t\t\t\t\t}).then(function(resp) {\n\t\t\t\t\t\tif (resp.ok) {\n\t\t\t\t\t\t\treturn resp.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"unable to fetch\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function(buffer) {\n\t\t\t\t\t\tlet code = new Uint8Array(buffer);\n\t\t\t\t\t\trun_lua_script(tag, code, chunkname);\n\t\t\t\t\t}).catch(function(reason) {\n\t\t\t\t\t\ttag.dispatchEvent(new Event(\"error\"));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\t\t\txhr.open(\"GET\", tag.src, true);\n\t\t\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\t\t\txhr.onreadystatechange = function() {\n\t\t\t\t\t\tif (xhr.readyState === 4)\n\t\t\t\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\n\t\t\t\t\t};\n\t\t\t\t\txhr.send();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Needs to be synchronous: use an XHR */\n\t\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\t\txhr.open(\"GET\", tag.src, false);\n\t\t\t\txhr.send();\n\t\t\t\tprocess_xhr_response(xhr, tag, chunkname);\n\t\t\t}\n\t\t} else {\n\t\t\tlet code = to_luastring(tag.innerHTML);\n\t\t\tlet chunkname = tag.id ? to_luastring(\"=\"+tag.id) : code;\n\t\t\trun_lua_script(tag, code, chunkname);\n\t\t}\n\t};\n\n\tconst contentTypeRegexp = /^(.*?\\/.*?)([\\t ]*;.*)?$/;\n\tconst luaVersionRegex = /^(\\d+)\\.(\\d+)$/;\n\tconst try_tag = function(tag) {\n\t\tif (tag.tagName !== \"SCRIPT\")\n\t\t\treturn;\n\n\t\t/* strip off mime type parameters */\n\t\tlet contentTypeMatch = contentTypeRegexp.exec(tag.type);\n\t\tif (!contentTypeMatch)\n\t\t\treturn;\n\t\tlet mimetype = contentTypeMatch[1];\n\t\tif (mimetype !== \"application/lua\" && mimetype !== \"text/lua\")\n\t\t\treturn;\n\n\t\tif (tag.hasAttribute(\"lua-version\")) {\n\t\t\tlet lua_version = luaVersionRegex.exec(tag.getAttribute(\"lua-version\"));\n\t\t\tif (!lua_version || lua_version[1] !== LUA_VERSION_MAJOR || lua_version[2] !== LUA_VERSION_MINOR)\n\t\t\t\treturn;\n\t\t}\n\n\t\trun_lua_script_tag(tag);\n\t};\n\n\tif (typeof MutationObserver !== 'undefined') {\n\t\t/* watch for new script tags added to document */\n\t\t(new MutationObserver(function(records, observer) {\n\t\t\tfor (let i=0; i<records.length; i++) {\n\t\t\t\tlet record = records[i];\n\t\t\t\tfor (let j=0; j<record.addedNodes.length; j++) {\n\t\t\t\t\ttry_tag(record.addedNodes[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t})).observe(document, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true\n\t\t});\n\t} else if (console.warn) {\n\t\tconsole.warn(\"fengari-web: MutationObserver not found; lua script tags will not be run when inserted\");\n\t}\n\n\t/* the query selector here is slightly liberal,\n\t   more checks occur in try_tag */\n\tconst selector = 'script[type^=\"application/lua\"], script[type^=\"text/lua\"]';\n\n\t/* try to run existing script tags */\n\tArray.prototype.forEach.call(document.querySelectorAll(selector), try_tag);\n}\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TTABLE\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst ltable   = require('./ltable.js');\nconst lvm      = require('./lvm.js');\n\nconst OpCodesI = lopcodes.OpCodesI;\nconst TValue   = lobject.TValue;\n\n/* Maximum number of registers in a Lua function (must fit in 8 bits) */\nconst MAXREGS = 255;\n\n/*\n** Marks the end of a patch list. It is an invalid value both as an absolute\n** address, and as a list link (would link an element to itself).\n*/\nconst NO_JUMP = -1;\n\nconst BinOpr = {\n    OPR_ADD:      0,\n    OPR_SUB:      1,\n    OPR_MUL:      2,\n    OPR_MOD:      3,\n    OPR_POW:      4,\n    OPR_DIV:      5,\n    OPR_IDIV:     6,\n    OPR_BAND:     7,\n    OPR_BOR:      8,\n    OPR_BXOR:     9,\n    OPR_SHL:      10,\n    OPR_SHR:      11,\n    OPR_CONCAT:   12,\n    OPR_EQ:       13,\n    OPR_LT:       14,\n    OPR_LE:       15,\n    OPR_NE:       16,\n    OPR_GT:       17,\n    OPR_GE:       18,\n    OPR_AND:      19,\n    OPR_OR:       20,\n    OPR_NOBINOPR: 21\n};\n\nconst UnOpr = {\n    OPR_MINUS:    0,\n    OPR_BNOT:     1,\n    OPR_NOT:      2,\n    OPR_LEN:      3,\n    OPR_NOUNOPR:  4\n};\n\nconst hasjumps = function(e) {\n    return e.t !== e.f;\n};\n\n/*\n** If expression is a numeric constant returns either true or a new TValue\n** (depending on 'make_tvalue'). Otherwise, returns false.\n*/\nconst tonumeral = function(e, make_tvalue) {\n    let ek = lparser.expkind;\n    if (hasjumps(e))\n        return false;  /* not a numeral */\n    switch (e.k) {\n        case ek.VKINT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMINT, e.u.ival);\n            }\n            return true;\n        case ek.VKFLT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMFLT, e.u.nval);\n            }\n            return true;\n        default: return false;\n    }\n};\n\n/*\n** Create a OP_LOADNIL instruction, but try to optimize: if the previous\n** instruction is also OP_LOADNIL and ranges are compatible, adjust\n** range of previous instruction instead of emitting a new one. (For\n** instance, 'local a; local b' will generate a single opcode.)\n*/\nconst luaK_nil = function(fs, from, n) {\n    let previous;\n    let l = from + n - 1;  /* last register to set nil */\n    if (fs.pc > fs.lasttarget) {  /* no jumps to current position? */\n        previous = fs.f.code[fs.pc-1];\n        if (previous.opcode === OpCodesI.OP_LOADNIL) {  /* previous is LOADNIL? */\n            let pfrom = previous.A;  /* get previous range */\n            let pl = pfrom + previous.B;\n            if ((pfrom <= from && from <= pl + 1) ||\n                    (from <= pfrom && pfrom <= l + 1)) {  /* can connect both? */\n                if (pfrom < from) from = pfrom;  /* from = min(from, pfrom) */\n                if (pl > l) l = pl;  /* l = max(l, pl) */\n                lopcodes.SETARG_A(previous, from);\n                lopcodes.SETARG_B(previous, l - from);\n                return;\n            }\n        }  /* else go through */\n    }\n    luaK_codeABC(fs, OpCodesI.OP_LOADNIL, from, n - 1, 0);  /* else no optimization */\n};\n\nconst getinstruction = function(fs, e) {\n    return fs.f.code[e.u.info];\n};\n\n/*\n** Gets the destination address of a jump instruction. Used to traverse\n** a list of jumps.\n*/\nconst getjump = function(fs, pc) {\n    let offset = fs.f.code[pc].sBx;\n    if (offset === NO_JUMP)  /* point to itself represents end of list */\n        return NO_JUMP;  /* end of list */\n    else\n        return pc + 1 + offset;  /* turn offset into absolute position */\n};\n\n/*\n** Fix jump instruction at position 'pc' to jump to 'dest'.\n** (Jump addresses are relative in Lua)\n*/\nconst fixjump = function(fs, pc, dest) {\n    let jmp = fs.f.code[pc];\n    let offset = dest - (pc + 1);\n    lua_assert(dest !== NO_JUMP);\n    if (Math.abs(offset) > lopcodes.MAXARG_sBx)\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"control structure too long\", true));\n    lopcodes.SETARG_sBx(jmp, offset);\n};\n\n/*\n** Concatenate jump-list 'l2' into jump-list 'l1'\n*/\nconst luaK_concat = function(fs, l1, l2) {\n    if (l2 === NO_JUMP) return l1;  /* nothing to concatenate? */\n    else if (l1 === NO_JUMP)  /* no original list? */\n        l1 = l2;\n    else {\n        let list = l1;\n        let next = getjump(fs, list);\n        while (next !== NO_JUMP) {  /* find last element */\n            list = next;\n            next = getjump(fs, list);\n        }\n        fixjump(fs, list, l2);\n    }\n\n    return l1;\n};\n\n/*\n** Create a jump instruction and return its position, so its destination\n** can be fixed later (with 'fixjump'). If there are jumps to\n** this position (kept in 'jpc'), link them all together so that\n** 'patchlistaux' will fix all them directly to the final destination.\n*/\nconst luaK_jump = function (fs) {\n    let jpc = fs.jpc;  /* save list of jumps to here */\n    fs.jpc = NO_JUMP;  /* no more jumps to here */\n    let j = luaK_codeAsBx(fs, OpCodesI.OP_JMP, 0, NO_JUMP);\n    j = luaK_concat(fs, j, jpc);  /* keep them on hold */\n    return j;\n};\n\nconst luaK_jumpto = function(fs, t) {\n    return luaK_patchlist(fs, luaK_jump(fs), t);\n};\n\n/*\n** Code a 'return' instruction\n*/\nconst luaK_ret = function(fs, first, nret) {\n    luaK_codeABC(fs, OpCodesI.OP_RETURN, first, nret + 1, 0);\n};\n\n/*\n** Code a \"conditional jump\", that is, a test or comparison opcode\n** followed by a jump. Return jump position.\n*/\nconst condjump = function(fs, op, A, B, C) {\n    luaK_codeABC(fs, op, A, B, C);\n    return luaK_jump(fs);\n};\n\n/*\n** returns current 'pc' and marks it as a jump target (to avoid wrong\n** optimizations with consecutive instructions not in the same basic block).\n*/\nconst luaK_getlabel = function(fs) {\n    fs.lasttarget = fs.pc;\n    return fs.pc;\n};\n\n/*\n** Returns the position of the instruction \"controlling\" a given\n** jump (that is, its condition), or the jump itself if it is\n** unconditional.\n*/\nconst getjumpcontroloffset = function(fs, pc) {\n    if (pc >= 1 && lopcodes.testTMode(fs.f.code[pc - 1].opcode))\n        return pc - 1;\n    else\n        return pc;\n};\nconst getjumpcontrol = function(fs, pc) {\n    return fs.f.code[getjumpcontroloffset(fs, pc)];\n};\n\n/*\n** Patch destination register for a TESTSET instruction.\n** If instruction in position 'node' is not a TESTSET, return 0 (\"fails\").\n** Otherwise, if 'reg' is not 'NO_REG', set it as the destination\n** register. Otherwise, change instruction to a simple 'TEST' (produces\n** no register value)\n*/\nconst patchtestreg = function(fs, node, reg) {\n    let pc = getjumpcontroloffset(fs, node);\n    let i = fs.f.code[pc];\n    if (i.opcode !== OpCodesI.OP_TESTSET)\n        return false;  /* cannot patch other instructions */\n    if (reg !== lopcodes.NO_REG && reg !== i.B)\n        lopcodes.SETARG_A(i, reg);\n    else {\n        /* no register to put value or register already has the value;\n           change instruction to simple test */\n        fs.f.code[pc] = lopcodes.CREATE_ABC(OpCodesI.OP_TEST, i.B, 0, i.C);\n    }\n    return true;\n};\n\n/*\n** Traverse a list of tests ensuring no one produces a value\n*/\nconst removevalues = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list))\n        patchtestreg(fs, list, lopcodes.NO_REG);\n};\n\n/*\n** Traverse a list of tests, patching their destination address and\n** registers: tests producing values jump to 'vtarget' (and put their\n** values in 'reg'), other tests jump to 'dtarget'.\n*/\nconst patchlistaux = function(fs, list, vtarget, reg, dtarget) {\n    while (list !== NO_JUMP) {\n        let next = getjump(fs, list);\n        if (patchtestreg(fs, list, reg))\n            fixjump(fs, list, vtarget);\n        else\n            fixjump(fs, list, dtarget);  /* jump to default target */\n        list = next;\n    }\n};\n\n/*\n** Ensure all pending jumps to current position are fixed (jumping\n** to current position with no values) and reset list of pending\n** jumps\n*/\nconst dischargejpc = function(fs) {\n    patchlistaux(fs, fs.jpc, fs.pc, lopcodes.NO_REG, fs.pc);\n    fs.jpc = NO_JUMP;\n};\n\n/*\n** Add elements in 'list' to list of pending jumps to \"here\"\n** (current position)\n*/\nconst luaK_patchtohere = function(fs, list) {\n    luaK_getlabel(fs);  /* mark \"here\" as a jump target */\n    fs.jpc = luaK_concat(fs, fs.jpc, list);\n};\n\n/*\n** Path all jumps in 'list' to jump to 'target'.\n** (The assert means that we cannot fix a jump to a forward address\n** because we only know addresses once code is generated.)\n*/\nconst luaK_patchlist = function(fs, list, target) {\n    if (target === fs.pc)  /* 'target' is current position? */\n        luaK_patchtohere(fs, list);  /* add list to pending jumps */\n    else {\n        lua_assert(target < fs.pc);\n        patchlistaux(fs, list, target, lopcodes.NO_REG, target);\n    }\n};\n\n/*\n** Path all jumps in 'list' to close upvalues up to given 'level'\n** (The assertion checks that jumps either were closing nothing\n** or were closing higher levels, from inner blocks.)\n*/\nconst luaK_patchclose = function(fs, list, level) {\n    level++;  /* argument is +1 to reserve 0 as non-op */\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let ins = fs.f.code[list];\n        lua_assert(ins.opcode === OpCodesI.OP_JMP && (ins.A === 0 || ins.A >= level));\n        lopcodes.SETARG_A(ins, level);\n    }\n};\n\n/*\n** Emit instruction 'i', checking for array sizes and saving also its\n** line information. Return 'i' position.\n*/\nconst luaK_code = function(fs, i) {\n    let f = fs.f;\n    dischargejpc(fs);  /* 'pc' will change */\n    /* put new instruction in code array */\n    f.code[fs.pc] = i;\n    f.lineinfo[fs.pc] = fs.ls.lastline;\n    return fs.pc++;\n};\n\n/*\n** Format and emit an 'iABC' instruction. (Assertions check consistency\n** of parameters versus opcode.)\n*/\nconst luaK_codeABC = function(fs, o, a, b, c) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABC);\n    lua_assert(lopcodes.getBMode(o) !== lopcodes.OpArgN || b === 0);\n    lua_assert(lopcodes.getCMode(o) !== lopcodes.OpArgN || c === 0);\n    lua_assert(a <= lopcodes.MAXARG_A && b <= lopcodes.MAXARG_B && c <= lopcodes.MAXARG_C);\n    return luaK_code(fs, lopcodes.CREATE_ABC(o, a, b, c));\n};\n\n/*\n** Format and emit an 'iABx' instruction.\n*/\nconst luaK_codeABx = function(fs, o, a, bc) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABx || lopcodes.getOpMode(o) === lopcodes.iAsBx);\n    lua_assert(lopcodes.getCMode(o) === lopcodes.OpArgN);\n    lua_assert(a <= lopcodes.MAXARG_A && bc <= lopcodes.MAXARG_Bx);\n    return luaK_code(fs, lopcodes.CREATE_ABx(o, a, bc));\n};\n\nconst luaK_codeAsBx = function(fs,o,A,sBx) {\n    return luaK_codeABx(fs, o, A, (sBx) + lopcodes.MAXARG_sBx);\n};\n\n/*\n** Emit an \"extra argument\" instruction (format 'iAx')\n*/\nconst codeextraarg = function(fs, a) {\n    lua_assert(a <= lopcodes.MAXARG_Ax);\n    return luaK_code(fs, lopcodes.CREATE_Ax(OpCodesI.OP_EXTRAARG, a));\n};\n\n/*\n** Emit a \"load constant\" instruction, using either 'OP_LOADK'\n** (if constant index 'k' fits in 18 bits) or an 'OP_LOADKX'\n** instruction with \"extra argument\".\n*/\nconst luaK_codek = function(fs, reg, k) {\n    if (k <= lopcodes.MAXARG_Bx)\n        return luaK_codeABx(fs, OpCodesI.OP_LOADK, reg, k);\n    else {\n        let p = luaK_codeABx(fs, OpCodesI.OP_LOADKX, reg, 0);\n        codeextraarg(fs, k);\n        return p;\n    }\n};\n\n/*\n** Check register-stack level, keeping track of its maximum size\n** in field 'maxstacksize'\n*/\nconst luaK_checkstack = function(fs, n) {\n    let newstack = fs.freereg + n;\n    if (newstack > fs.f.maxstacksize) {\n        if (newstack >= MAXREGS)\n            llex.luaX_syntaxerror(fs.ls, to_luastring(\"function or expression needs too many registers\", true));\n        fs.f.maxstacksize = newstack;\n    }\n};\n\n/*\n** Reserve 'n' registers in register stack\n*/\nconst luaK_reserveregs = function(fs, n) {\n    luaK_checkstack(fs, n);\n    fs.freereg += n;\n};\n\n/*\n** Free register 'reg', if it is neither a constant index nor\n** a local variable.\n*/\nconst freereg = function(fs, reg) {\n    if (!lopcodes.ISK(reg) && reg >= fs.nactvar) {\n        fs.freereg--;\n        lua_assert(reg === fs.freereg);\n    }\n};\n\n/*\n** Free register used by expression 'e' (if any)\n*/\nconst freeexp = function(fs, e) {\n    if (e.k === lparser.expkind.VNONRELOC)\n        freereg(fs, e.u.info);\n};\n\n/*\n** Free registers used by expressions 'e1' and 'e2' (if any) in proper\n** order.\n*/\nconst freeexps = function(fs, e1, e2) {\n    let r1 = (e1.k === lparser.expkind.VNONRELOC) ? e1.u.info : -1;\n    let r2 = (e2.k === lparser.expkind.VNONRELOC) ? e2.u.info : -1;\n    if (r1 > r2) {\n        freereg(fs, r1);\n        freereg(fs, r2);\n    }\n    else {\n        freereg(fs, r2);\n        freereg(fs, r1);\n    }\n};\n\n\n/*\n** Add constant 'v' to prototype's list of constants (field 'k').\n** Use scanner's table to cache position of constants in constant list\n** and try to reuse constants. Because some values should not be used\n** as keys (nil cannot be a key, integer keys can collapse with float\n** keys), the caller must provide a useful 'key' for indexing the cache.\n*/\nconst addk = function(fs, key, v) {\n    let f = fs.f;\n    let idx = ltable.luaH_get(fs.L, fs.ls.h, key);  /* index scanner table */\n    if (idx.ttisinteger()) {  /* is there an index there? */\n        let k = idx.value;\n        /* correct value? (warning: must distinguish floats from integers!) */\n        if (k < fs.nk && f.k[k].ttype() === v.ttype() && f.k[k].value === v.value)\n            return k;  /* reuse index */\n    }\n    /* constant not found; create a new entry */\n    let k = fs.nk;\n    ltable.luaH_setfrom(fs.L, fs.ls.h, key, new lobject.TValue(LUA_TNUMINT, k));\n    f.k[k] = v;\n    fs.nk++;\n    return k;\n};\n\n/*\n** Add a string to list of constants and return its index.\n*/\nconst luaK_stringK = function(fs, s) {\n    let o = new TValue(LUA_TLNGSTR, s);\n    return addk(fs, o, o);  /* use string itself as key */\n};\n\n\n/*\n** Add an integer to list of constants and return its index.\n** Integers use userdata as keys to avoid collision with floats with\n** same value.\n*/\nconst luaK_intK = function(fs, n) {\n    let k = new TValue(LUA_TLIGHTUSERDATA, n);\n    let o = new TValue(LUA_TNUMINT, n);\n    return addk(fs, k, o);\n};\n\n/*\n** Add a float to list of constants and return its index.\n*/\nconst luaK_numberK = function(fs, r) {\n    let o = new TValue(LUA_TNUMFLT, r);\n    return addk(fs, o, o);  /* use number itself as key */\n};\n\n\n/*\n** Add a boolean to list of constants and return its index.\n*/\nconst boolK = function(fs, b) {\n    let o = new TValue(LUA_TBOOLEAN, b);\n    return addk(fs, o, o);  /* use boolean itself as key */\n};\n\n\n/*\n** Add nil to list of constants and return its index.\n*/\nconst nilK = function(fs) {\n    let v = new TValue(LUA_TNIL, null);\n    let k = new TValue(LUA_TTABLE, fs.ls.h);\n    /* cannot use nil as key; instead use table itself to represent nil */\n    return addk(fs, k, v);\n};\n\n/*\n** Fix an expression to return the number of results 'nresults'.\n** Either 'e' is a multi-ret expression (function call or vararg)\n** or 'nresults' is LUA_MULTRET (as any expression can satisfy that).\n*/\nconst luaK_setreturns = function(fs, e, nresults) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        lopcodes.SETARG_C(getinstruction(fs, e), nresults + 1);\n    }\n    else if (e.k === ek.VVARARG) {\n        let pc = getinstruction(fs, e);\n        lopcodes.SETARG_B(pc, nresults + 1);\n        lopcodes.SETARG_A(pc, fs.freereg);\n        luaK_reserveregs(fs, 1);\n    }\n    else lua_assert(nresults === LUA_MULTRET);\n};\n\nconst luaK_setmultret = function(fs, e) {\n    luaK_setreturns(fs, e, LUA_MULTRET);\n};\n\n/*\n** Fix an expression to return one result.\n** If expression is not a multi-ret expression (function call or\n** vararg), it already returns one result, so nothing needs to be done.\n** Function calls become VNONRELOC expressions (as its result comes\n** fixed in the base register of the call), while vararg expressions\n** become VRELOCABLE (as OP_VARARG puts its results where it wants).\n** (Calls are created returning one result, so that does not need\n** to be fixed.)\n*/\nconst luaK_setoneret = function(fs, e) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        /* already returns 1 value */\n        lua_assert(getinstruction(fs, e).C === 2);\n        e.k = ek.VNONRELOC;  /* result has fixed position */\n        e.u.info = getinstruction(fs, e).A;\n    } else if (e.k === ek.VVARARG) {\n        lopcodes.SETARG_B(getinstruction(fs, e), 2);\n        e.k = ek.VRELOCABLE;  /* can relocate its simple result */\n    }\n};\n\n/*\n** Ensure that expression 'e' is not a variable.\n*/\nconst luaK_dischargevars = function(fs, e) {\n    let ek = lparser.expkind;\n\n    switch (e.k) {\n        case ek.VLOCAL: {  /* already in a register */\n            e.k =  ek.VNONRELOC;  /* becomes a non-relocatable value */\n            break;\n        }\n        case ek.VUPVAL: {  /* move value to some (pending) register */\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_GETUPVAL, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VINDEXED: {\n            let op;\n            freereg(fs, e.u.ind.idx);\n            if (e.u.ind.vt === ek.VLOCAL) {  /* is 't' in a register? */\n                freereg(fs, e.u.ind.t);\n                op = OpCodesI.OP_GETTABLE;\n            } else {\n                lua_assert(e.u.ind.vt === ek.VUPVAL);\n                op = OpCodesI.OP_GETTABUP;  /* 't' is in an upvalue */\n            }\n            e.u.info = luaK_codeABC(fs, op, 0, e.u.ind.t, e.u.ind.idx);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VVARARG: case ek.VCALL: {\n            luaK_setoneret(fs, e);\n            break;\n        }\n        default: break;  /* there is one value available (somewhere) */\n    }\n};\n\nconst code_loadbool = function(fs, A, b, jump) {\n    luaK_getlabel(fs);  /* those instructions may be jump targets */\n    return luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, A, b, jump);\n};\n\n/*\n** Ensures expression value is in register 'reg' (and therefore\n** 'e' will become a non-relocatable expression).\n*/\nconst discharge2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: {\n            luaK_nil(fs, reg, 1);\n            break;\n        }\n        case ek.VFALSE: case ek.VTRUE: {\n            luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, reg, e.k === ek.VTRUE, 0);\n            break;\n        }\n        case ek.VK: {\n            luaK_codek(fs, reg, e.u.info);\n            break;\n        }\n        case ek.VKFLT: {\n            luaK_codek(fs, reg, luaK_numberK(fs, e.u.nval));\n            break;\n        }\n        case ek.VKINT: {\n            luaK_codek(fs, reg, luaK_intK(fs, e.u.ival));\n            break;\n        }\n        case ek.VRELOCABLE: {\n            let pc = getinstruction(fs, e);\n            lopcodes.SETARG_A(pc, reg);  /* instruction will put result in 'reg' */\n            break;\n        }\n        case ek.VNONRELOC: {\n            if (reg !== e.u.info)\n                luaK_codeABC(fs, OpCodesI.OP_MOVE, reg, e.u.info, 0);\n            break;\n        }\n        default: {\n            lua_assert(e.k === ek.VJMP);\n            return;  /* nothing to do... */\n        }\n    }\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures expression value is in any register.\n*/\nconst discharge2anyreg = function(fs, e) {\n    if (e.k !== lparser.expkind.VNONRELOC) {  /* no fixed register yet? */\n        luaK_reserveregs(fs, 1);  /* get a register */\n        discharge2reg(fs, e, fs.freereg-1);  /* put value there */\n    }\n};\n\n/*\n** check whether list has any jump that do not produce a value\n** or produce an inverted value\n*/\nconst need_value = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let i = getjumpcontrol(fs, list);\n        if (i.opcode !== OpCodesI.OP_TESTSET) return true;\n    }\n    return false;  /* not found */\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in register 'reg'.\n** If expression has jumps, need to patch these jumps either to\n** its final position or to \"load\" instructions (for those tests\n** that do not produce values).\n*/\nconst exp2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    discharge2reg(fs, e, reg);\n    if (e.k === ek.VJMP)  /* expression itself is a test? */\n        e.t = luaK_concat(fs, e.t, e.u.info);  /* put this jump in 't' list */\n    if (hasjumps(e)) {\n        let final;  /* position after whole expression */\n        let p_f = NO_JUMP;  /* position of an eventual LOAD false */\n        let p_t = NO_JUMP;  /* position of an eventual LOAD true */\n        if (need_value(fs, e.t) || need_value(fs, e.f)) {\n            let fj = (e.k === ek.VJMP) ? NO_JUMP : luaK_jump(fs);\n            p_f = code_loadbool(fs, reg, 0, 1);\n            p_t = code_loadbool(fs, reg, 1, 0);\n            luaK_patchtohere(fs, fj);\n        }\n        final = luaK_getlabel(fs);\n        patchlistaux(fs, e.f, final, reg, p_f);\n        patchlistaux(fs, e.t, final, reg, p_t);\n    }\n    e.f = e.t = NO_JUMP;\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in next available register.\n*/\nconst luaK_exp2nextreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    freeexp(fs, e);\n    luaK_reserveregs(fs, 1);\n    exp2reg(fs, e, fs.freereg - 1);\n};\n\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in some (any) register and return that register.\n*/\nconst luaK_exp2anyreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    if (e.k === lparser.expkind.VNONRELOC) {  /* expression already has a register? */\n        if (!hasjumps(e))  /* no jumps? */\n            return e.u.info;  /* result is already in a register */\n        if (e.u.info >= fs.nactvar) {  /* reg. is not a local? */\n            exp2reg(fs, e, e.u.info);  /* put final result in it */\n            return e.u.info;\n        }\n    }\n    luaK_exp2nextreg(fs, e);  /* otherwise, use next available register */\n    return e.u.info;\n};\n\n/*\n** Ensures final expression result is either in a register or in an\n** upvalue.\n*/\nconst luaK_exp2anyregup = function(fs, e) {\n    if (e.k !== lparser.expkind.VUPVAL || hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Ensures final expression result is either in a register or it is\n** a constant.\n*/\nconst luaK_exp2val = function(fs, e) {\n    if (hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n    else\n        luaK_dischargevars(fs, e);\n};\n\n/*\n** Ensures final expression result is in a valid R/K index\n** (that is, it is either in a register or in 'k' with an index\n** in the range of R/K indices).\n** Returns R/K index.\n*/\nconst luaK_exp2RK = function(fs, e) {\n    let ek = lparser.expkind;\n    let vk = false;\n    luaK_exp2val(fs, e);\n    switch (e.k) {  /* move constants to 'k' */\n        case ek.VTRUE: e.u.info = boolK(fs, true); vk = true; break;\n        case ek.VFALSE: e.u.info = boolK(fs, false); vk = true; break;\n        case ek.VNIL: e.u.info = nilK(fs); vk = true; break;\n        case ek.VKINT: e.u.info = luaK_intK(fs, e.u.ival); vk = true; break;\n        case ek.VKFLT: e.u.info = luaK_numberK(fs, e.u.nval); vk = true; break;\n        case ek.VK: vk = true; break;\n        default: break;\n    }\n\n    if (vk) {\n        e.k = ek.VK;\n        if (e.u.info <= lopcodes.MAXINDEXRK)  /* constant fits in 'argC'? */\n            return lopcodes.RKASK(e.u.info);\n    }\n\n    /* not a constant in the right range: put it in a register */\n    return luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Generate code to store result of expression 'ex' into variable 'var'.\n*/\nconst luaK_storevar = function(fs, vr, ex) {\n    let ek = lparser.expkind;\n    switch (vr.k) {\n        case ek.VLOCAL: {\n            freeexp(fs, ex);\n            exp2reg(fs, ex, vr.u.info);  /* compute 'ex' into proper place */\n            return;\n        }\n        case ek.VUPVAL: {\n            let e = luaK_exp2anyreg(fs, ex);\n            luaK_codeABC(fs, OpCodesI.OP_SETUPVAL, e, vr.u.info, 0);\n            break;\n        }\n        case ek.VINDEXED: {\n            let op = (vr.u.ind.vt === ek.VLOCAL) ? OpCodesI.OP_SETTABLE : OpCodesI.OP_SETTABUP;\n            let e = luaK_exp2RK(fs, ex);\n            luaK_codeABC(fs, op, vr.u.ind.t, vr.u.ind.idx, e);\n            break;\n        }\n    }\n    freeexp(fs, ex);\n};\n\n\n/*\n** Emit SELF instruction (convert expression 'e' into 'e:key(e,').\n*/\nconst luaK_self = function(fs, e, key) {\n    luaK_exp2anyreg(fs, e);\n    let ereg = e.u.info;  /* register where 'e' was placed */\n    freeexp(fs, e);\n    e.u.info = fs.freereg;  /* base register for op_self */\n    e.k = lparser.expkind.VNONRELOC;  /* self expression has a fixed register */\n    luaK_reserveregs(fs, 2);  /* function and 'self' produced by op_self */\n    luaK_codeABC(fs, OpCodesI.OP_SELF, e.u.info, ereg, luaK_exp2RK(fs, key));\n    freeexp(fs, key);\n};\n\n/*\n** Negate condition 'e' (where 'e' is a comparison).\n*/\nconst negatecondition = function(fs, e) {\n    let pc = getjumpcontrol(fs, e.u.info);\n    lua_assert(lopcodes.testTMode(pc.opcode) && pc.opcode !== OpCodesI.OP_TESTSET && pc.opcode !== OpCodesI.OP_TEST);\n    lopcodes.SETARG_A(pc, !(pc.A));\n};\n\n/*\n** Emit instruction to jump if 'e' is 'cond' (that is, if 'cond'\n** is true, code will jump if 'e' is true.) Return jump position.\n** Optimize when 'e' is 'not' something, inverting the condition\n** and removing the 'not'.\n*/\nconst jumponcond = function(fs, e, cond) {\n    if (e.k === lparser.expkind.VRELOCABLE) {\n        let ie = getinstruction(fs, e);\n        if (ie.opcode === OpCodesI.OP_NOT) {\n            fs.pc--;  /* remove previous OP_NOT */\n            return condjump(fs, OpCodesI.OP_TEST, ie.B, 0, !cond);\n        }\n        /* else go through */\n    }\n    discharge2anyreg(fs, e);\n    freeexp(fs, e);\n    return condjump(fs, OpCodesI.OP_TESTSET, lopcodes.NO_REG, e.u.info, cond);\n};\n\n/*\n** Emit code to go through if 'e' is true, jump otherwise.\n*/\nconst luaK_goiftrue = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {  /* condition? */\n            negatecondition(fs, e);  /* jump when it is false */\n            pc = e.u.info;  /* save jump position */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            pc = NO_JUMP;  /* always true; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 0);  /* jump when false */\n            break;\n        }\n    }\n    e.f = luaK_concat(fs, e.f, pc);  /* insert new jump in false list */\n    luaK_patchtohere(fs, e.t);  /* true list jumps to here (to go through) */\n    e.t = NO_JUMP;\n};\n\n/*\n** Emit code to go through if 'e' is false, jump otherwise.\n*/\nconst luaK_goiffalse = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {\n            pc = e.u.info;  /* already jump if true */\n            break;\n        }\n        case ek.VNIL: case ek.VFALSE: {\n            pc = NO_JUMP;  /* always false; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 1);  /* jump if true */\n            break;\n        }\n    }\n    e.t = luaK_concat(fs, e.t, pc);  /* insert new jump in 't' list */\n    luaK_patchtohere(fs, e.f);  /* false list jumps to here (to go through) */\n    e.f = NO_JUMP;\n};\n\n/*\n** Code 'not e', doing constant folding.\n*/\nconst codenot = function(fs, e) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: case ek.VFALSE: {\n            e.k = ek.VTRUE;  /* true === not nil === not false */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            e.k = ek.VFALSE;  /* false === not \"x\" === not 0.5 === not 1 === not true */\n            break;\n        }\n        case ek.VJMP: {\n            negatecondition(fs, e);\n            break;\n        }\n        case ek.VRELOCABLE:\n        case ek.VNONRELOC: {\n            discharge2anyreg(fs, e);\n            freeexp(fs, e);\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_NOT, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n    }\n    /* interchange true and false lists */\n    { let temp = e.f; e.f = e.t; e.t = temp; }\n    removevalues(fs, e.f);  /* values are useless when negated */\n    removevalues(fs, e.t);\n};\n\n/*\n** Create expression 't[k]'. 't' must have its final result already in a\n** register or upvalue.\n*/\nconst luaK_indexed = function(fs, t, k) {\n    let ek = lparser.expkind;\n    lua_assert(!hasjumps(t) && (lparser.vkisinreg(t.k) || t.k === ek.VUPVAL));\n    t.u.ind.t = t.u.info;  /* register or upvalue index */\n    t.u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */\n    t.u.ind.vt = (t.k === ek.VUPVAL) ? ek.VUPVAL : ek.VLOCAL;\n    t.k = ek.VINDEXED;\n};\n\n/*\n** Return false if folding can raise an error.\n** Bitwise operations need operands convertible to integers; division\n** operations cannot have 0 as divisor.\n*/\nconst validop = function(op, v1, v2) {\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR: case LUA_OPBNOT: {  /* conversion errors */\n            return (lvm.tointeger(v1) !== false && lvm.tointeger(v2) !== false);\n        }\n        case LUA_OPDIV: case LUA_OPIDIV: case LUA_OPMOD:  /* division by 0 */\n            return (v2.value !== 0);\n        default: return 1;  /* everything else is valid */\n    }\n};\n\n/*\n** Try to \"constant-fold\" an operation; return 1 iff successful.\n** (In this case, 'e1' has the final result.)\n*/\nconst constfolding = function(op, e1, e2) {\n    let ek = lparser.expkind;\n    let v1, v2;\n    if (!(v1 = tonumeral(e1, true)) || !(v2 = tonumeral(e2, true)) || !validop(op, v1, v2))\n        return 0;  /* non-numeric operands or not safe to fold */\n    let res = new TValue(); /* FIXME */\n    lobject.luaO_arith(null, op, v1, v2, res);  /* does operation */\n    if (res.ttisinteger()) {\n        e1.k = ek.VKINT;\n        e1.u.ival = res.value;\n    }\n    else {  /* folds neither NaN nor 0.0 (to avoid problems with -0.0) */\n        let n = res.value;\n        if (isNaN(n) || n === 0)\n            return false;\n        e1.k = ek.VKFLT;\n        e1.u.nval = n;\n    }\n    return true;\n};\n\n/*\n** Emit code for unary expressions that \"produce values\"\n** (everything but 'not').\n** Expression to produce final result will be encoded in 'e'.\n*/\nconst codeunexpval = function(fs, op, e, line) {\n    let r = luaK_exp2anyreg(fs, e);  /* opcodes operate only on registers */\n    freeexp(fs, e);\n    e.u.info = luaK_codeABC(fs, op, 0, r, 0);  /* generate opcode */\n    e.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n/*\n** Emit code for binary expressions that \"produce values\"\n** (everything but logical operators 'and'/'or' and comparison\n** operators).\n** Expression to produce final result will be encoded in 'e1'.\n** Because 'luaK_exp2RK' can free registers, its calls must be\n** in \"stack order\" (that is, first on 'e2', which may have more\n** recent registers to be released).\n*/\nconst codebinexpval = function(fs, op, e1, e2, line) {\n    let rk2 = luaK_exp2RK(fs, e2);  /* both operands are \"RK\" */\n    let rk1 = luaK_exp2RK(fs, e1);\n    freeexps(fs, e1, e2);\n    e1.u.info = luaK_codeABC(fs, op, 0, rk1, rk2);  /* generate opcode */\n    e1.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n\n/*\n** Emit code for comparisons.\n** 'e1' was already put in R/K form by 'luaK_infix'.\n*/\nconst codecomp = function(fs, opr, e1, e2) {\n    let ek = lparser.expkind;\n\n    let rk1;\n    if (e1.k === ek.VK)\n        rk1 = lopcodes.RKASK(e1.u.info);\n    else {\n        lua_assert(e1.k === ek.VNONRELOC);\n        rk1 = e1.u.info;\n    }\n\n    let rk2 = luaK_exp2RK(fs, e2);\n    freeexps(fs, e1, e2);\n    switch (opr) {\n        case BinOpr.OPR_NE: {  /* '(a ~= b)' ==> 'not (a === b)' */\n            e1.u.info = condjump(fs, OpCodesI.OP_EQ, 0, rk1, rk2);\n            break;\n        }\n        case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            /* '(a > b)' ==> '(b < a)';  '(a >= b)' ==> '(b <= a)' */\n            let op = (opr - BinOpr.OPR_NE) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk2, rk1);  /* invert operands */\n            break;\n        }\n        default: {  /* '==', '<', '<=' use their own opcodes */\n            let op = (opr - BinOpr.OPR_EQ) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk1, rk2);\n            break;\n        }\n    }\n    e1.k = ek.VJMP;\n};\n\n/*\n** Apply prefix operation 'op' to expression 'e'.\n*/\nconst luaK_prefix = function(fs, op, e, line) {\n    let ef = new lparser.expdesc();\n    ef.k = lparser.expkind.VKINT;\n    ef.u.ival = ef.u.nval = ef.u.info = 0;\n    ef.t = NO_JUMP;\n    ef.f = NO_JUMP;\n    switch (op) {\n        case UnOpr.OPR_MINUS: case UnOpr.OPR_BNOT:  /* use 'ef' as fake 2nd operand */\n            if (constfolding(op + LUA_OPUNM, e, ef))\n                break;\n            /* FALLTHROUGH */\n        case UnOpr.OPR_LEN:\n            codeunexpval(fs, op + OpCodesI.OP_UNM, e, line);\n            break;\n        case UnOpr.OPR_NOT: codenot(fs, e); break;\n    }\n};\n\n/*\n** Process 1st operand 'v' of binary operation 'op' before reading\n** 2nd operand.\n*/\nconst luaK_infix = function(fs, op, v) {\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            luaK_goiftrue(fs, v);  /* go ahead only if 'v' is true */\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            luaK_goiffalse(fs, v);  /* go ahead only if 'v' is false */\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2nextreg(fs, v);  /* operand must be on the 'stack' */\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB:\n        case BinOpr.OPR_MUL: case BinOpr.OPR_DIV: case BinOpr.OPR_IDIV:\n        case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!tonumeral(v, false))\n                luaK_exp2RK(fs, v);\n            /* else keep numeral, which may be folded with 2nd operand */\n            break;\n        }\n        default: {\n            luaK_exp2RK(fs, v);\n            break;\n        }\n    }\n};\n\n/*\n** Finalize code for binary operation, after reading 2nd operand.\n** For '(a .. b .. c)' (which is '(a .. (b .. c))', because\n** concatenation is right associative), merge second CONCAT into first\n** one.\n*/\nconst luaK_posfix = function(fs, op, e1, e2, line) {\n    let ek = lparser.expkind;\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            lua_assert(e1.t === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.f = luaK_concat(fs, e2.f, e1.f);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            lua_assert(e1.f === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.t = luaK_concat(fs, e2.t, e1.t);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2val(fs, e2);\n            let ins = getinstruction(fs, e2);\n            if (e2.k === ek.VRELOCABLE && ins.opcode === OpCodesI.OP_CONCAT) {\n                lua_assert(e1.u.info === ins.B - 1);\n                freeexp(fs, e1);\n                lopcodes.SETARG_B(ins, e1.u.info);\n                e1.k = ek.VRELOCABLE; e1.u.info = e2.u.info;\n            }\n            else {\n                luaK_exp2nextreg(fs, e2);  /* operand must be on the 'stack' */\n                codebinexpval(fs, OpCodesI.OP_CONCAT, e1, e2, line);\n            }\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB: case BinOpr.OPR_MUL: case BinOpr.OPR_DIV:\n        case BinOpr.OPR_IDIV: case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!constfolding(op + LUA_OPADD, e1, e2))\n                codebinexpval(fs, op + OpCodesI.OP_ADD, e1, e2, line);\n            break;\n        }\n        case BinOpr.OPR_EQ: case BinOpr.OPR_LT: case BinOpr.OPR_LE:\n        case BinOpr.OPR_NE: case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            codecomp(fs, op, e1, e2);\n            break;\n        }\n    }\n\n    return e1;\n};\n\n/*\n** Change line information associated with current position.\n*/\nconst luaK_fixline = function(fs, line) {\n    fs.f.lineinfo[fs.pc - 1] = line;\n};\n\n/*\n** Emit a SETLIST instruction.\n** 'base' is register that keeps table;\n** 'nelems' is #table plus those to be stored now;\n** 'tostore' is number of values (in registers 'base + 1',...) to add to\n** table (or LUA_MULTRET to add up to stack top).\n*/\nconst luaK_setlist = function(fs, base, nelems, tostore) {\n    let c =  (nelems - 1)/lopcodes.LFIELDS_PER_FLUSH + 1;\n    let b = (tostore === LUA_MULTRET) ? 0 : tostore;\n    lua_assert(tostore !== 0 && tostore <= lopcodes.LFIELDS_PER_FLUSH);\n    if (c <= lopcodes.MAXARG_C)\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, c);\n    else if (c <= lopcodes.MAXARG_Ax) {\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, 0);\n        codeextraarg(fs, c);\n    }\n    else\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"constructor too long\", true));\n    fs.freereg = base + 1;  /* free registers with list values */\n};\n\n\nmodule.exports.BinOpr             = BinOpr;\nmodule.exports.NO_JUMP            = NO_JUMP;\nmodule.exports.UnOpr              = UnOpr;\nmodule.exports.getinstruction     = getinstruction;\nmodule.exports.luaK_checkstack    = luaK_checkstack;\nmodule.exports.luaK_code          = luaK_code;\nmodule.exports.luaK_codeABC       = luaK_codeABC;\nmodule.exports.luaK_codeABx       = luaK_codeABx;\nmodule.exports.luaK_codeAsBx      = luaK_codeAsBx;\nmodule.exports.luaK_codek         = luaK_codek;\nmodule.exports.luaK_concat        = luaK_concat;\nmodule.exports.luaK_dischargevars = luaK_dischargevars;\nmodule.exports.luaK_exp2RK        = luaK_exp2RK;\nmodule.exports.luaK_exp2anyreg    = luaK_exp2anyreg;\nmodule.exports.luaK_exp2anyregup  = luaK_exp2anyregup;\nmodule.exports.luaK_exp2nextreg   = luaK_exp2nextreg;\nmodule.exports.luaK_exp2val       = luaK_exp2val;\nmodule.exports.luaK_fixline       = luaK_fixline;\nmodule.exports.luaK_getlabel      = luaK_getlabel;\nmodule.exports.luaK_goiffalse     = luaK_goiffalse;\nmodule.exports.luaK_goiftrue      = luaK_goiftrue;\nmodule.exports.luaK_indexed       = luaK_indexed;\nmodule.exports.luaK_infix         = luaK_infix;\nmodule.exports.luaK_intK          = luaK_intK;\nmodule.exports.luaK_jump          = luaK_jump;\nmodule.exports.luaK_jumpto        = luaK_jumpto;\nmodule.exports.luaK_nil           = luaK_nil;\nmodule.exports.luaK_numberK       = luaK_numberK;\nmodule.exports.luaK_patchclose    = luaK_patchclose;\nmodule.exports.luaK_patchlist     = luaK_patchlist;\nmodule.exports.luaK_patchtohere   = luaK_patchtohere;\nmodule.exports.luaK_posfix        = luaK_posfix;\nmodule.exports.luaK_prefix        = luaK_prefix;\nmodule.exports.luaK_reserveregs   = luaK_reserveregs;\nmodule.exports.luaK_ret           = luaK_ret;\nmodule.exports.luaK_self          = luaK_self;\nmodule.exports.luaK_setlist       = luaK_setlist;\nmodule.exports.luaK_setmultret    = luaK_setmultret;\nmodule.exports.luaK_setoneret     = luaK_setoneret;\nmodule.exports.luaK_setreturns    = luaK_setreturns;\nmodule.exports.luaK_storevar      = luaK_storevar;\nmodule.exports.luaK_stringK       = luaK_stringK;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    thread_status: { LUA_ERRSYNTAX },\n    is_luastring,\n    luastring_eq,\n    to_luastring\n} = require('./defs.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst lobject  = require('./lobject.js');\nconst {\n    MAXARG_sBx,\n    POS_A,\n    POS_Ax,\n    POS_B,\n    POS_Bx,\n    POS_C,\n    POS_OP,\n    SIZE_A,\n    SIZE_Ax,\n    SIZE_B,\n    SIZE_Bx,\n    SIZE_C,\n    SIZE_OP\n} = require('./lopcodes.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst { luaS_bless } = require('./lstring.js');\nconst {\n    luaZ_read,\n    ZIO\n} = require('./lzio.js');\n\nlet LUAC_DATA = [0x19, 0x93, 13, 10, 0x1a, 10];\n\nclass BytecodeParser {\n\n    constructor(L, Z, name) {\n        this.intSize = 4;\n        this.size_tSize = 4;\n        this.instructionSize = 4;\n        this.integerSize = 4;\n        this.numberSize = 8;\n\n        lua_assert(Z instanceof ZIO, \"BytecodeParser only operates on a ZIO\");\n        lua_assert(is_luastring(name));\n\n        if (name[0] === 64 /* ('@').charCodeAt(0) */ || name[0] === 61 /* ('=').charCodeAt(0) */)\n            this.name = name.subarray(1);\n        else if (name[0] == LUA_SIGNATURE[0])\n            this.name = to_luastring(\"binary string\", true);\n        else\n            this.name = name;\n\n        this.L = L;\n        this.Z = Z;\n\n        // Used to do buffer to number conversions\n        this.arraybuffer = new ArrayBuffer(\n            Math.max(this.intSize, this.size_tSize, this.instructionSize, this.integerSize, this.numberSize)\n        );\n        this.dv = new DataView(this.arraybuffer);\n        this.u8 = new Uint8Array(this.arraybuffer);\n    }\n\n    read(size) {\n        let u8 = new Uint8Array(size);\n        if(luaZ_read(this.Z, u8, 0, size) !== 0)\n            this.error(\"truncated\");\n        return u8;\n    }\n\n    LoadByte() {\n        if (luaZ_read(this.Z, this.u8, 0, 1) !== 0)\n            this.error(\"truncated\");\n        return this.u8[0];\n    }\n\n    LoadInt() {\n        if (luaZ_read(this.Z, this.u8, 0, this.intSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadNumber() {\n        if (luaZ_read(this.Z, this.u8, 0, this.numberSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getFloat64(0, true);\n    }\n\n    LoadInteger() {\n        if (luaZ_read(this.Z, this.u8, 0, this.integerSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadSize_t() {\n        return this.LoadInteger();\n    }\n\n    LoadString() {\n        let size = this.LoadByte();\n        if (size === 0xFF)\n            size = this.LoadSize_t();\n        if (size === 0)\n            return null;\n        return luaS_bless(this.L, this.read(size-1));\n    }\n\n    /* creates a mask with 'n' 1 bits at position 'p' */\n    static MASK1(n, p) {\n        return ((~((~0)<<(n)))<<(p));\n    }\n\n    LoadCode(f) {\n        let n = this.LoadInt();\n        let p = BytecodeParser;\n\n        for (let i = 0; i < n; i++) {\n            if (luaZ_read(this.Z, this.u8, 0, this.instructionSize) !== 0)\n                this.error(\"truncated\");\n            let ins = this.dv.getUint32(0, true);\n            f.code[i] = {\n                code:   ins,\n                opcode: (ins >> POS_OP) & p.MASK1(SIZE_OP, 0),\n                A:      (ins >> POS_A)  & p.MASK1(SIZE_A,  0),\n                B:      (ins >> POS_B)  & p.MASK1(SIZE_B,  0),\n                C:      (ins >> POS_C)  & p.MASK1(SIZE_C,  0),\n                Bx:     (ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0),\n                Ax:     (ins >> POS_Ax) & p.MASK1(SIZE_Ax, 0),\n                sBx:    ((ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n            };\n        }\n    }\n\n    LoadConstants(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            let t = this.LoadByte();\n\n            switch (t) {\n                case LUA_TNIL:\n                    f.k.push(new lobject.TValue(LUA_TNIL, null));\n                    break;\n                case LUA_TBOOLEAN:\n                    f.k.push(new lobject.TValue(LUA_TBOOLEAN, this.LoadByte() !== 0));\n                    break;\n                case LUA_TNUMFLT:\n                    f.k.push(new lobject.TValue(LUA_TNUMFLT, this.LoadNumber()));\n                    break;\n                case LUA_TNUMINT:\n                    f.k.push(new lobject.TValue(LUA_TNUMINT, this.LoadInteger()));\n                    break;\n                case LUA_TSHRSTR:\n                case LUA_TLNGSTR:\n                    f.k.push(new lobject.TValue(LUA_TLNGSTR, this.LoadString()));\n                    break;\n                default:\n                    this.error(`unrecognized constant '${t}'`);\n            }\n        }\n    }\n\n    LoadProtos(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.p[i] = new lfunc.Proto(this.L);\n            this.LoadFunction(f.p[i], f.source);\n        }\n    }\n\n    LoadUpvalues(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i] = {\n                name:    null,\n                instack: this.LoadByte(),\n                idx:     this.LoadByte()\n            };\n        }\n    }\n\n    LoadDebug(f) {\n        let n = this.LoadInt();\n        for (let i = 0; i < n; i++)\n            f.lineinfo[i] = this.LoadInt();\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.locvars[i] = {\n                varname: this.LoadString(),\n                startpc: this.LoadInt(),\n                endpc:   this.LoadInt()\n            };\n        }\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i].name = this.LoadString();\n        }\n    }\n\n    LoadFunction(f, psource) {\n        f.source = this.LoadString();\n        if (f.source === null)  /* no source in dump? */\n            f.source = psource;  /* reuse parent's source */\n        f.linedefined = this.LoadInt();\n        f.lastlinedefined = this.LoadInt();\n        f.numparams = this.LoadByte();\n        f.is_vararg = this.LoadByte() !== 0;\n        f.maxstacksize = this.LoadByte();\n        this.LoadCode(f);\n        this.LoadConstants(f);\n        this.LoadUpvalues(f);\n        this.LoadProtos(f);\n        this.LoadDebug(f);\n    }\n\n    checkliteral(s, msg) {\n        let buff = this.read(s.length);\n        if (!luastring_eq(buff, s))\n            this.error(msg);\n    }\n\n    checkHeader() {\n        this.checkliteral(LUA_SIGNATURE.subarray(1), \"not a\"); /* 1st char already checked */\n\n        if (this.LoadByte() !== 0x53)\n            this.error(\"version mismatch in\");\n\n        if (this.LoadByte() !== 0)\n            this.error(\"format mismatch in\");\n\n        this.checkliteral(LUAC_DATA, \"corrupted\");\n\n        this.intSize         = this.LoadByte();\n        this.size_tSize      = this.LoadByte();\n        this.instructionSize = this.LoadByte();\n        this.integerSize     = this.LoadByte();\n        this.numberSize      = this.LoadByte();\n\n        this.checksize(this.intSize, 4, \"int\");\n        this.checksize(this.size_tSize, 4, \"size_t\");\n        this.checksize(this.instructionSize, 4, \"instruction\");\n        this.checksize(this.integerSize, 4, \"integer\");\n        this.checksize(this.numberSize, 8, \"number\");\n\n        if (this.LoadInteger() !== 0x5678)\n            this.error(\"endianness mismatch in\");\n\n        if (this.LoadNumber() !== 370.5)\n            this.error(\"float format mismatch in\");\n\n    }\n\n    error(why) {\n        lobject.luaO_pushfstring(this.L, to_luastring(\"%s: %s precompiled chunk\"), this.name, to_luastring(why));\n        ldo.luaD_throw(this.L, LUA_ERRSYNTAX);\n    }\n\n    checksize(byte, size, tname) {\n        if (byte !== size)\n            this.error(`${tname} size mismatch in`);\n    }\n}\n\nconst luaU_undump = function(L, Z, name) {\n    let S = new BytecodeParser(L, Z, name);\n    S.checkHeader();\n    let cl = lfunc.luaF_newLclosure(L, S.LoadByte());\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    cl.p = new lfunc.Proto(L);\n    S.LoadFunction(cl.p, null);\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    /* luai_verifycode */\n    return cl;\n};\n\nmodule.exports.luaU_undump = luaU_undump;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    luastring_of\n} = require('./defs.js');\n\nconst LUAC_DATA    = luastring_of(25, 147, 13, 10, 26, 10);\nconst LUAC_INT     = 0x5678;\nconst LUAC_NUM     = 370.5;\nconst LUAC_VERSION = Number(LUA_VERSION_MAJOR) * 16 + Number(LUA_VERSION_MINOR);\nconst LUAC_FORMAT  = 0;   /* this is the official format */\n\nclass DumpState {\n    constructor() {\n        this.L = null;\n        this.write = null;\n        this.data = null;\n        this.strip = NaN;\n        this.status = NaN;\n    }\n}\n\nconst DumpBlock = function(b, size, D) {\n    if (D.status === 0 && size > 0)\n        D.status = D.writer(D.L, b, size, D.data);\n};\n\nconst DumpByte = function(y, D) {\n    DumpBlock(luastring_of(y), 1, D);\n};\n\nconst DumpInt = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpInteger = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpNumber = function(x, D) {\n    let ab = new ArrayBuffer(8);\n    let dv = new DataView(ab);\n    dv.setFloat64(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 8, D);\n};\n\nconst DumpString = function(s, D) {\n    if (s === null)\n        DumpByte(0, D);\n    else {\n        let size = s.tsslen() + 1;\n        let str = s.getstr();\n        if (size < 0xFF)\n            DumpByte(size, D);\n        else {\n            DumpByte(0xFF, D);\n            DumpInteger(size, D);\n        }\n        DumpBlock(str, size - 1, D);  /* no need to save '\\0' */\n    }\n};\n\nconst DumpCode = function(f, D) {\n    let s = f.code.map(e => e.code);\n    DumpInt(s.length, D);\n\n    for (let i = 0; i < s.length; i++)\n        DumpInt(s[i], D);\n};\n\nconst DumpConstants = function(f, D) {\n    let n = f.k.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        let o = f.k[i];\n        DumpByte(o.ttype(), D);\n        switch (o.ttype()) {\n            case LUA_TNIL:\n                break;\n            case LUA_TBOOLEAN:\n                DumpByte(o.value ? 1 : 0, D);\n                break;\n            case LUA_TNUMFLT:\n                DumpNumber(o.value, D);\n                break;\n            case LUA_TNUMINT:\n                DumpInteger(o.value, D);\n                break;\n            case LUA_TSHRSTR:\n            case LUA_TLNGSTR:\n                DumpString(o.tsvalue(), D);\n                break;\n        }\n    }\n};\n\nconst DumpProtos = function(f, D) {\n    let n = f.p.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpFunction(f.p[i], f.source, D);\n};\n\nconst DumpUpvalues = function(f, D) {\n    let n = f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpByte(f.upvalues[i].instack ? 1 : 0, D);\n        DumpByte(f.upvalues[i].idx, D);\n    }\n};\n\nconst DumpDebug = function(f, D) {\n    let n = D.strip ? 0 : f.lineinfo.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpInt(f.lineinfo[i], D);\n    n = D.strip ? 0 : f.locvars.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpString(f.locvars[i].varname, D);\n        DumpInt(f.locvars[i].startpc, D);\n        DumpInt(f.locvars[i].endpc, D);\n    }\n    n = D.strip ? 0 : f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpString(f.upvalues[i].name, D);\n};\n\nconst DumpFunction = function(f, psource, D) {\n    if (D.strip || f.source === psource)\n        DumpString(null, D);  /* no debug info or same source as its parent */\n    else\n        DumpString(f.source, D);\n    DumpInt(f.linedefined, D);\n    DumpInt(f.lastlinedefined, D);\n    DumpByte(f.numparams, D);\n    DumpByte(f.is_vararg?1:0, D);\n    DumpByte(f.maxstacksize, D);\n    DumpCode(f, D);\n    DumpConstants(f, D);\n    DumpUpvalues(f, D);\n    DumpProtos(f, D);\n    DumpDebug(f, D);\n};\n\nconst DumpHeader = function(D) {\n    DumpBlock(LUA_SIGNATURE, LUA_SIGNATURE.length, D);\n    DumpByte(LUAC_VERSION, D);\n    DumpByte(LUAC_FORMAT, D);\n    DumpBlock(LUAC_DATA, LUAC_DATA.length, D);\n    DumpByte(4, D); // intSize\n    DumpByte(4, D); // size_tSize\n    DumpByte(4, D); // instructionSize\n    DumpByte(4, D); // integerSize\n    DumpByte(8, D); // numberSize\n    DumpInteger(LUAC_INT, D);\n    DumpNumber(LUAC_NUM, D);\n};\n\n/*\n** dump Lua function as precompiled chunk\n*/\nconst luaU_dump = function(L, f, w, data, strip) {\n    let D = new DumpState();\n    D.L = L;\n    D.writer = w;\n    D.data = data;\n    D.strip = strip;\n    D.status = 0;\n    DumpHeader(D);\n    DumpByte(f.upvalues.length, D);\n    DumpFunction(f, null, D);\n    return D.status;\n};\n\nmodule.exports.luaU_dump = luaU_dump;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","\"use strict\";\n\nconst { lua_pop } = require('./lua.js');\nconst { luaL_requiref } = require('./lauxlib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nconst loadedlibs = {};\n\n/* export before requiring lualib.js */\nconst luaL_openlibs = function(L) {\n    /* \"require\" functions from 'loadedlibs' and set results to global table */\n    for (let lib in loadedlibs) {\n        luaL_requiref(L, to_luastring(lib), loadedlibs[lib], 1);\n        lua_pop(L, 1); /* remove lib */\n    }\n};\nmodule.exports.luaL_openlibs = luaL_openlibs;\n\nconst lualib = require('./lualib.js');\nconst { luaopen_base }      = require('./lbaselib.js');\nconst { luaopen_coroutine } = require('./lcorolib.js');\nconst { luaopen_debug }     = require('./ldblib.js');\nconst { luaopen_math }      = require('./lmathlib.js');\nconst { luaopen_package }   = require('./loadlib.js');\nconst { luaopen_os }        = require('./loslib.js');\nconst { luaopen_string }    = require('./lstrlib.js');\nconst { luaopen_table }     = require('./ltablib.js');\nconst { luaopen_utf8 }      = require('./lutf8lib.js');\n\nloadedlibs[\"_G\"] = luaopen_base,\nloadedlibs[lualib.LUA_LOADLIBNAME] = luaopen_package;\nloadedlibs[lualib.LUA_COLIBNAME] = luaopen_coroutine;\nloadedlibs[lualib.LUA_TABLIBNAME] = luaopen_table;\nloadedlibs[lualib.LUA_OSLIBNAME] = luaopen_os;\nloadedlibs[lualib.LUA_STRLIBNAME] = luaopen_string;\nloadedlibs[lualib.LUA_MATHLIBNAME] = luaopen_math;\nloadedlibs[lualib.LUA_UTF8LIBNAME] = luaopen_utf8;\nloadedlibs[lualib.LUA_DBLIBNAME] = luaopen_debug;\nif (typeof process !== \"undefined\")\n    loadedlibs[lualib.LUA_IOLIBNAME] = require('./liolib.js').luaopen_io;\n\n/* Extension: fengari library */\nconst { luaopen_fengari } = require('./fengarilib.js');\nloadedlibs[lualib.LUA_FENGARILIBNAME] = luaopen_fengari;\n"],"sourceRoot":""}